{
	"openapi": "3.0.0",
	"info": {
		"description": "",
		"title": "standard public schema",
		"version": "12.2.3 (519615d)"
	},
	"paths": {
		"/": {
			"get": {
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "OpenAPI description (this document)",
				"tags": ["Introspection"]
			}
		},
		"/user_sms_preferences": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.phone_number"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.phone_verified"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.phone_verified_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.task_reminders"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.daily_brief_sms"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.urgent_alerts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.quiet_hours_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.quiet_hours_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.daily_sms_limit"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.daily_sms_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.daily_count_reset_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.opted_out"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.opted_out_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.opt_out_reason"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_sms_preferences"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_sms_preferences"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_sms_preferences"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_sms_preferences"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["user_sms_preferences"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_sms_preferences"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["user_sms_preferences"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.phone_number"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.phone_verified"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.phone_verified_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.task_reminders"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.daily_brief_sms"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.urgent_alerts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.quiet_hours_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.quiet_hours_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.daily_sms_limit"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.daily_sms_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.daily_count_reset_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.opted_out"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.opted_out_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.opt_out_reason"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_sms_preferences"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.phone_number"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.phone_verified"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.phone_verified_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.task_reminders"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.daily_brief_sms"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.urgent_alerts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.quiet_hours_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.quiet_hours_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.daily_sms_limit"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.daily_sms_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.daily_count_reset_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.opted_out"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.opted_out_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.opt_out_reason"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_sms_preferences.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_sms_preferences"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_sms_preferences"]
			}
		},
		"/email_logs": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.to_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.subject"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.body"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.cc"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.bcc"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.reply_to"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_logs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_logs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_logs"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_logs"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["email_logs"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/email_logs"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["email_logs"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.to_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.subject"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.body"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.cc"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.bcc"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.reply_to"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["email_logs"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.to_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.subject"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.body"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.cc"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.bcc"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.reply_to"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_logs.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/email_logs"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["email_logs"]
			}
		},
		"/daily_briefs": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.brief_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.summary_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.project_brief_ids"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.insights"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.priority_actions"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_started_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_progress"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_error"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.llm_analysis"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/daily_briefs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/daily_briefs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/daily_briefs"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/daily_briefs"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["daily_briefs"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/daily_briefs"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["daily_briefs"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.brief_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.summary_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.project_brief_ids"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.insights"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.priority_actions"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_started_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_progress"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_error"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.llm_analysis"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["daily_briefs"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.brief_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.summary_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.project_brief_ids"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.insights"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.priority_actions"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_started_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_progress"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.generation_error"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.daily_briefs.llm_analysis"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/daily_briefs"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["daily_briefs"]
			}
		},
		"/recurring_task_migration_log": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.migration_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.old_recurrence_ends"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.new_recurrence_ends"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.old_calendar_event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.new_calendar_event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/recurring_task_migration_log"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/recurring_task_migration_log"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/recurring_task_migration_log"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/recurring_task_migration_log"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["recurring_task_migration_log"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/recurring_task_migration_log"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["recurring_task_migration_log"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.migration_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.old_recurrence_ends"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.new_recurrence_ends"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.old_calendar_event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.new_calendar_event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["recurring_task_migration_log"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.migration_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.old_recurrence_ends"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.new_recurrence_ends"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.old_calendar_event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.new_calendar_event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_migration_log.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/recurring_task_migration_log"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["recurring_task_migration_log"]
			}
		},
		"/queue_jobs": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.scheduled_for"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.queue_job_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.processed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.attempts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.max_attempts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.started_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.result"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.job_type"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/queue_jobs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/queue_jobs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/queue_jobs"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/queue_jobs"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["queue_jobs"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/queue_jobs"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["queue_jobs"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.scheduled_for"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.queue_job_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.processed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.attempts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.max_attempts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.started_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.result"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.job_type"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["queue_jobs"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.scheduled_for"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.queue_job_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.processed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.attempts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.max_attempts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.started_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.result"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs.job_type"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/queue_jobs"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["queue_jobs"]
			}
		},
		"/question_metrics": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.question_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.presented_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.responded_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.response_quality"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.created_project"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.created_tasks_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.brain_dump_length"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/question_metrics"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/question_metrics"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/question_metrics"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/question_metrics"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["question_metrics"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/question_metrics"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["question_metrics"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.question_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.presented_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.responded_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.response_quality"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.created_project"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.created_tasks_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.brain_dump_length"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["question_metrics"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.question_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.presented_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.responded_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.response_quality"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.created_project"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.created_tasks_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.brain_dump_length"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_metrics.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/question_metrics"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["question_metrics"]
			}
		},
		"/failed_payments": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.subscription_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.invoice_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.amount_due"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.failed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.retry_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.last_retry_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.dunning_stage"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.last_dunning_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.resolved_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.resolution_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/failed_payments"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/failed_payments"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/failed_payments"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/failed_payments"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["failed_payments"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/failed_payments"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["failed_payments"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.subscription_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.invoice_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.amount_due"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.failed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.retry_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.last_retry_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.dunning_stage"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.last_dunning_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.resolved_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.resolution_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["failed_payments"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.subscription_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.invoice_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.amount_due"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.failed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.retry_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.last_retry_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.dunning_stage"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.last_dunning_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.resolved_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.resolution_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.failed_payments.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/failed_payments"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["failed_payments"]
			}
		},
		"/beta_events": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.scheduled_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.meeting_link"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.agenda"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.meeting_notes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.recording_url"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.max_attendees"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.created_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_events"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_events"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_events"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_events"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["beta_events"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/beta_events"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["beta_events"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.scheduled_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.meeting_link"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.agenda"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.meeting_notes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.recording_url"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.max_attendees"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.created_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["beta_events"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.scheduled_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.meeting_link"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.agenda"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.meeting_notes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.recording_url"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.event_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.max_attendees"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.created_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_events.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/beta_events"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["beta_events"]
			}
		},
		"/beta_feedback": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.member_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feature_area"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_tags"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.implemented_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.declined_reason"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.upvotes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.founder_response"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.founder_responded_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_feedback"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_feedback"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_feedback"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_feedback"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["beta_feedback"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/beta_feedback"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["beta_feedback"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.member_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feature_area"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_tags"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.implemented_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.declined_reason"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.upvotes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.founder_response"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.founder_responded_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["beta_feedback"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.member_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feature_area"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_tags"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.feedback_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.implemented_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.declined_reason"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.upvotes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.founder_response"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.founder_responded_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feedback.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/beta_feedback"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["beta_feedback"]
			}
		},
		"/discount_codes": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.code"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.stripe_coupon_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.discount_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.discount_value"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.duration"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.duration_in_months"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.max_redemptions"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.times_redeemed"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.valid_from"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.valid_until"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/discount_codes"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/discount_codes"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/discount_codes"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/discount_codes"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["discount_codes"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/discount_codes"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["discount_codes"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.code"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.stripe_coupon_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.discount_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.discount_value"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.duration"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.duration_in_months"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.max_redemptions"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.times_redeemed"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.valid_from"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.valid_until"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["discount_codes"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.code"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.stripe_coupon_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.discount_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.discount_value"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.duration"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.duration_in_months"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.max_redemptions"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.times_redeemed"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.valid_from"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.valid_until"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.discount_codes.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/discount_codes"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["discount_codes"]
			}
		},
		"/recurring_task_instances": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.instance_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.skipped"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.notes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.calendar_event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.user_id"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/recurring_task_instances"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/recurring_task_instances"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/recurring_task_instances"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/recurring_task_instances"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"summary": "Tracks individual instances of recurring tasks",
				"tags": ["recurring_task_instances"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/recurring_task_instances"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "Tracks individual instances of recurring tasks",
				"tags": ["recurring_task_instances"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.instance_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.skipped"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.notes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.calendar_event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.user_id"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Tracks individual instances of recurring tasks",
				"tags": ["recurring_task_instances"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.instance_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.skipped"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.notes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.calendar_event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_instances.user_id"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/recurring_task_instances"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Tracks individual instances of recurring tasks",
				"tags": ["recurring_task_instances"]
			}
		},
		"/sms_messages": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.phone_number"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.message_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.template_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.template_vars"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.scheduled_for"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.delivered_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.twilio_sid"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.twilio_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.twilio_error_code"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.twilio_error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.attempt_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.max_attempts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.next_retry_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.queue_job_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/sms_messages"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/sms_messages"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/sms_messages"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/sms_messages"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["sms_messages"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/sms_messages"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["sms_messages"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.phone_number"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.message_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.template_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.template_vars"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.scheduled_for"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.delivered_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.twilio_sid"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.twilio_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.twilio_error_code"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.twilio_error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.attempt_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.max_attempts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.next_retry_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.queue_job_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["sms_messages"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.phone_number"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.message_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.template_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.template_vars"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.scheduled_for"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.delivered_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.twilio_sid"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.twilio_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.twilio_error_code"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.twilio_error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.attempt_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.max_attempts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.next_retry_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.queue_job_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_messages.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/sms_messages"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["sms_messages"]
			}
		},
		"/user_discounts": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.discount_code_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.stripe_subscription_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.applied_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.expires_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_discounts"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_discounts"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_discounts"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_discounts"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["user_discounts"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_discounts"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["user_discounts"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.discount_code_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.stripe_subscription_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.applied_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.expires_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_discounts"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.discount_code_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.stripe_subscription_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.applied_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_discounts.expires_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_discounts"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_discounts"]
			}
		},
		"/project_brief_templates": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.template_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.is_default"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.variables"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.in_use"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.generated_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.generation_model"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.context_snapshot"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_brief_templates"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_brief_templates"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_brief_templates"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_brief_templates"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"summary": "Stores custom AI-generated and user-created templates for project daily briefs",
				"tags": ["project_brief_templates"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_brief_templates"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "Stores custom AI-generated and user-created templates for project daily briefs",
				"tags": ["project_brief_templates"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.template_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.is_default"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.variables"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.in_use"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.generated_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.generation_model"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.context_snapshot"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Stores custom AI-generated and user-created templates for project daily briefs",
				"tags": ["project_brief_templates"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.template_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.is_default"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.variables"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.in_use"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.generated_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.generation_model"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_templates.context_snapshot"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_brief_templates"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Stores custom AI-generated and user-created templates for project daily briefs",
				"tags": ["project_brief_templates"]
			}
		},
		"/email_recipients": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.email_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.recipient_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.recipient_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.recipient_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.recipient_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.delivered_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.opened_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.open_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.last_opened_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_recipients"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_recipients"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_recipients"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_recipients"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["email_recipients"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/email_recipients"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["email_recipients"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.email_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.recipient_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.recipient_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.recipient_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.recipient_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.delivered_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.opened_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.open_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.last_opened_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["email_recipients"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.email_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.recipient_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.recipient_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.recipient_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.recipient_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.delivered_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.opened_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.open_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.last_opened_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_recipients.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/email_recipients"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["email_recipients"]
			}
		},
		"/generated_phase_tasks": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.generated_phase_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.confidence_score"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.reasoning"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.suggested_start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.suggested_due_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.is_approved"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/generated_phase_tasks"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/generated_phase_tasks"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/generated_phase_tasks"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/generated_phase_tasks"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"summary": "Stores AI suggestions for which tasks belong to which phases",
				"tags": ["generated_phase_tasks"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/generated_phase_tasks"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "Stores AI suggestions for which tasks belong to which phases",
				"tags": ["generated_phase_tasks"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.generated_phase_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.confidence_score"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.reasoning"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.suggested_start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.suggested_due_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.is_approved"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Stores AI suggestions for which tasks belong to which phases",
				"tags": ["generated_phase_tasks"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.generated_phase_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.confidence_score"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.reasoning"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.suggested_start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.suggested_due_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.is_approved"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phase_tasks.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/generated_phase_tasks"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Stores AI suggestions for which tasks belong to which phases",
				"tags": ["generated_phase_tasks"]
			}
		},
		"/project_brief_template_usage": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.template_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.used_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.brief_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.metadata"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_brief_template_usage"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_brief_template_usage"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_brief_template_usage"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_brief_template_usage"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["project_brief_template_usage"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_brief_template_usage"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["project_brief_template_usage"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.template_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.used_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.brief_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.metadata"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["project_brief_template_usage"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.template_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.used_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.brief_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_brief_template_usage.metadata"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_brief_template_usage"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["project_brief_template_usage"]
			}
		},
		"/project_calendars": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.calendar_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.calendar_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.color_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.hex_color"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.is_primary"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.sync_enabled"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.visibility"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.last_synced_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.sync_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.sync_error"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_calendars"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_calendars"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_calendars"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_calendars"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"summary": "Maps projects to dedicated Google Calendars for better organization and visual separation",
				"tags": ["project_calendars"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_calendars"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "Maps projects to dedicated Google Calendars for better organization and visual separation",
				"tags": ["project_calendars"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.calendar_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.calendar_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.color_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.hex_color"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.is_primary"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.sync_enabled"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.visibility"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.last_synced_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.sync_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.sync_error"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Maps projects to dedicated Google Calendars for better organization and visual separation",
				"tags": ["project_calendars"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.calendar_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.calendar_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.color_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.hex_color"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.is_primary"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.sync_enabled"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.visibility"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.last_synced_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.sync_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_calendars.sync_error"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_calendars"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Maps projects to dedicated Google Calendars for better organization and visual separation",
				"tags": ["project_calendars"]
			}
		},
		"/llm_prompts": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.prompt_text"
					},
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.purpose"
					},
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.last_used"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/llm_prompts"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/llm_prompts"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/llm_prompts"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/llm_prompts"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["llm_prompts"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/llm_prompts"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["llm_prompts"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.prompt_text"
					},
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.purpose"
					},
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.last_used"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["llm_prompts"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.prompt_text"
					},
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.purpose"
					},
					{
						"$ref": "#/components/parameters/rowFilter.llm_prompts.last_used"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/llm_prompts"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["llm_prompts"]
			}
		},
		"/calendar_webhook_channels": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.channel_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.resource_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.calendar_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.expiration"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.sync_token"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.webhook_token"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/calendar_webhook_channels"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/calendar_webhook_channels"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/calendar_webhook_channels"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/calendar_webhook_channels"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["calendar_webhook_channels"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/calendar_webhook_channels"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["calendar_webhook_channels"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.channel_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.resource_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.calendar_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.expiration"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.sync_token"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.webhook_token"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["calendar_webhook_channels"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.channel_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.resource_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.calendar_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.expiration"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.sync_token"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.webhook_token"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_webhook_channels.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/calendar_webhook_channels"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["calendar_webhook_channels"]
			}
		},
		"/payment_methods": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.stripe_payment_method_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.card_brand"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.card_last4"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.is_default"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/payment_methods"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/payment_methods"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/payment_methods"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/payment_methods"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["payment_methods"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/payment_methods"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["payment_methods"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.stripe_payment_method_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.card_brand"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.card_last4"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.is_default"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["payment_methods"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.stripe_payment_method_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.card_brand"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.card_last4"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.is_default"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.payment_methods.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/payment_methods"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["payment_methods"]
			}
		},
		"/admin_analytics": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.metric_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.metric_value"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/admin_analytics"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/admin_analytics"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/admin_analytics"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/admin_analytics"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"summary": "Daily aggregated analytics for admin dashboard",
				"tags": ["admin_analytics"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/admin_analytics"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "Daily aggregated analytics for admin dashboard",
				"tags": ["admin_analytics"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.metric_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.metric_value"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Daily aggregated analytics for admin dashboard",
				"tags": ["admin_analytics"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.metric_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.metric_value"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_analytics.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/admin_analytics"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Daily aggregated analytics for admin dashboard",
				"tags": ["admin_analytics"]
			}
		},
		"/tasks": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.tasks.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.dependencies"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.details"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.recurrence_ends"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.parent_task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.outdated"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.task_steps"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.task_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.recurrence_pattern"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.deleted_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.recurrence_end_source"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/tasks"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/tasks"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/tasks"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/tasks"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["tasks"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/tasks"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["tasks"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.tasks.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.dependencies"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.details"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.recurrence_ends"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.parent_task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.outdated"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.task_steps"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.task_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.recurrence_pattern"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.deleted_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.recurrence_end_source"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["tasks"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.tasks.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.dependencies"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.details"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.recurrence_ends"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.parent_task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.outdated"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.task_steps"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.task_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.recurrence_pattern"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.deleted_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.tasks.recurrence_end_source"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/tasks"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["tasks"]
			}
		},
		"/user_brief_preferences": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.frequency"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.day_of_week"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.time_of_day"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.email_daily_brief"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_brief_preferences"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_brief_preferences"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_brief_preferences"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_brief_preferences"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["user_brief_preferences"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_brief_preferences"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["user_brief_preferences"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.frequency"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.day_of_week"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.time_of_day"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.email_daily_brief"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_brief_preferences"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.frequency"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.day_of_week"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.time_of_day"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_brief_preferences.email_daily_brief"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_brief_preferences"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_brief_preferences"]
			}
		},
		"/project_questions": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.question"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.context"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.expected_outcome"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.category"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.answered_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.answer_brain_dump_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.source"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.source_field"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.triggers"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.ask_after"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.shown_to_user_count"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_questions"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_questions"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_questions"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_questions"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["project_questions"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_questions"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["project_questions"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.question"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.context"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.expected_outcome"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.category"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.answered_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.answer_brain_dump_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.source"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.source_field"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.triggers"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.ask_after"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.shown_to_user_count"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["project_questions"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.question"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.context"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.expected_outcome"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.category"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.answered_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.answer_brain_dump_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.source"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.source_field"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.triggers"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.ask_after"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_questions.shown_to_user_count"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_questions"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["project_questions"]
			}
		},
		"/webhook_events": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.event_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.payload"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.attempts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.processed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/webhook_events"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/webhook_events"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/webhook_events"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/webhook_events"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["webhook_events"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/webhook_events"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["webhook_events"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.event_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.payload"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.attempts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.processed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["webhook_events"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.event_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.payload"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.attempts"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.processed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.webhook_events.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/webhook_events"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["webhook_events"]
			}
		},
		"/beta_signups": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.full_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.job_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.company_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.why_interested"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.productivity_tools"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.biggest_challenge"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.referral_source"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.signup_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.approved_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.invited_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.wants_weekly_calls"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.wants_community_access"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.user_timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_signups"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_signups"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_signups"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_signups"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["beta_signups"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/beta_signups"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["beta_signups"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.full_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.job_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.company_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.why_interested"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.productivity_tools"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.biggest_challenge"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.referral_source"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.signup_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.approved_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.invited_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.wants_weekly_calls"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.wants_community_access"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.user_timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["beta_signups"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.full_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.job_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.company_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.why_interested"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.productivity_tools"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.biggest_challenge"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.referral_source"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.signup_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.approved_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.invited_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.wants_weekly_calls"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.wants_community_access"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.user_timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_signups.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/beta_signups"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["beta_signups"]
			}
		},
		"/task_calendar_events": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.calendar_event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.calendar_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.event_link"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.last_synced_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.sync_error"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.event_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.event_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.event_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.recurrence_master_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.recurrence_instance_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.is_master_event"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.sync_source"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.sync_version"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.recurrence_rule"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.original_start_time"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.is_exception"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.exception_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.series_update_scope"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.sync_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.project_calendar_id"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/task_calendar_events"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/task_calendar_events"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/task_calendar_events"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/task_calendar_events"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"summary": "Enhanced with recurrence support for better Google Calendar integration",
				"tags": ["task_calendar_events"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/task_calendar_events"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "Enhanced with recurrence support for better Google Calendar integration",
				"tags": ["task_calendar_events"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.calendar_event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.calendar_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.event_link"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.last_synced_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.sync_error"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.event_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.event_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.event_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.recurrence_master_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.recurrence_instance_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.is_master_event"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.sync_source"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.sync_version"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.recurrence_rule"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.original_start_time"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.is_exception"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.exception_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.series_update_scope"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.sync_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.project_calendar_id"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Enhanced with recurrence support for better Google Calendar integration",
				"tags": ["task_calendar_events"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.calendar_event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.calendar_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.event_link"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.last_synced_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.sync_error"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.event_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.event_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.event_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.recurrence_master_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.recurrence_instance_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.is_master_event"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.sync_source"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.sync_version"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.recurrence_rule"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.original_start_time"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.is_exception"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.exception_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.series_update_scope"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.sync_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.task_calendar_events.project_calendar_id"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/task_calendar_events"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Enhanced with recurrence support for better Google Calendar integration",
				"tags": ["task_calendar_events"]
			}
		},
		"/beta_event_attendance": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.member_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.rsvp_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.rsvp_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.attended"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.joined_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.left_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.event_rating"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.event_feedback"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_event_attendance"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_event_attendance"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_event_attendance"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_event_attendance"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["beta_event_attendance"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/beta_event_attendance"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["beta_event_attendance"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.member_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.rsvp_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.rsvp_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.attended"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.joined_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.left_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.event_rating"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.event_feedback"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["beta_event_attendance"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.event_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.member_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.rsvp_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.rsvp_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.attended"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.joined_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.left_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.event_rating"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.event_feedback"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_event_attendance.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/beta_event_attendance"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["beta_event_attendance"]
			}
		},
		"/user_context": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_context.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.background"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.active_projects"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.goals_overview"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.habits"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.workflows"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.tools"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.schedule_preferences"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.work_style"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.blockers"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.collaboration_needs"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.skill_gaps"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.priorities"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.onboarding_completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.input_projects"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.input_work_style"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.input_challenges"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.input_help_focus"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.help_priorities"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.focus_areas"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.productivity_challenges"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.preferred_work_hours"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.communication_style"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.organization_method"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.last_parsed_input_projects"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.last_parsed_input_work_style"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.last_parsed_input_challenges"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.last_parsed_input_help_focus"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_context"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_context"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_context"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_context"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["user_context"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_context"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["user_context"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_context.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.background"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.active_projects"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.goals_overview"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.habits"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.workflows"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.tools"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.schedule_preferences"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.work_style"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.blockers"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.collaboration_needs"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.skill_gaps"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.priorities"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.onboarding_completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.input_projects"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.input_work_style"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.input_challenges"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.input_help_focus"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.help_priorities"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.focus_areas"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.productivity_challenges"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.preferred_work_hours"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.communication_style"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.organization_method"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.last_parsed_input_projects"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.last_parsed_input_work_style"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.last_parsed_input_challenges"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.last_parsed_input_help_focus"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_context"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_context.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.background"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.active_projects"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.goals_overview"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.habits"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.workflows"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.tools"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.schedule_preferences"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.work_style"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.blockers"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.collaboration_needs"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.skill_gaps"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.priorities"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.onboarding_completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.input_projects"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.input_work_style"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.input_challenges"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.input_help_focus"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.help_priorities"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.focus_areas"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.productivity_challenges"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.preferred_work_hours"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.communication_style"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.organization_method"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.last_parsed_input_projects"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.last_parsed_input_work_style"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.last_parsed_input_challenges"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_context.last_parsed_input_help_focus"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_context"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_context"]
			}
		},
		"/admin_users": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.admin_users.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_users.granted_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_users.granted_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_users.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/admin_users"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/admin_users"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/admin_users"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/admin_users"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["admin_users"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/admin_users"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["admin_users"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.admin_users.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_users.granted_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_users.granted_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_users.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["admin_users"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.admin_users.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_users.granted_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_users.granted_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.admin_users.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/admin_users"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["admin_users"]
			}
		},
		"/cron_logs": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.job_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.executed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/cron_logs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/cron_logs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/cron_logs"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/cron_logs"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["cron_logs"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/cron_logs"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["cron_logs"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.job_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.executed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["cron_logs"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.job_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.executed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.cron_logs.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/cron_logs"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["cron_logs"]
			}
		},
		"/trial_statistics": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.trial_statistics.active_trials"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_statistics.expired_trials"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_statistics.active_subscriptions"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_statistics.beta_users"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_statistics.avg_trial_length_days"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/trial_statistics"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/trial_statistics"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/trial_statistics"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/trial_statistics"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["trial_statistics"]
			}
		},
		"/feedback_rate_limit": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.submission_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.first_submission"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.last_submission"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.is_blocked"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/feedback_rate_limit"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/feedback_rate_limit"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/feedback_rate_limit"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/feedback_rate_limit"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["feedback_rate_limit"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/feedback_rate_limit"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["feedback_rate_limit"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.submission_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.first_submission"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.last_submission"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.is_blocked"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["feedback_rate_limit"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.submission_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.first_submission"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.last_submission"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback_rate_limit.is_blocked"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/feedback_rate_limit"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["feedback_rate_limit"]
			}
		},
		"/subscription_plans": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.stripe_price_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.price_cents"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.currency"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.billing_interval"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.interval_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.features"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/subscription_plans"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/subscription_plans"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/subscription_plans"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/subscription_plans"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["subscription_plans"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/subscription_plans"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["subscription_plans"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.stripe_price_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.price_cents"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.currency"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.billing_interval"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.interval_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.features"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["subscription_plans"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.stripe_price_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.price_cents"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.currency"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.billing_interval"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.interval_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.features"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.subscription_plans.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/subscription_plans"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["subscription_plans"]
			}
		},
		"/queue_jobs_stats": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs_stats.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs_stats.job_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs_stats.count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs_stats.oldest_job"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs_stats.newest_job"
					},
					{
						"$ref": "#/components/parameters/rowFilter.queue_jobs_stats.avg_duration_seconds"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/queue_jobs_stats"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/queue_jobs_stats"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/queue_jobs_stats"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/queue_jobs_stats"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["queue_jobs_stats"]
			}
		},
		"/brain_dumps": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.tags"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.ai_summary"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.ai_insights"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.metaData"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.parsed_results"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/brain_dumps"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/brain_dumps"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/brain_dumps"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/brain_dumps"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["brain_dumps"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/brain_dumps"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["brain_dumps"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.tags"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.ai_summary"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.ai_insights"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.metaData"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.parsed_results"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["brain_dumps"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.tags"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.ai_summary"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.ai_insights"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.metaData"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dumps.parsed_results"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/brain_dumps"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["brain_dumps"]
			}
		},
		"/feedback": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.feedback.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.category"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.rating"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.feedback_text"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.user_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.user_ip"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/feedback"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/feedback"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/feedback"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/feedback"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["feedback"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/feedback"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["feedback"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.feedback.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.category"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.rating"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.feedback_text"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.user_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.user_ip"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["feedback"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.feedback.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.category"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.rating"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.feedback_text"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.user_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.user_ip"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.feedback.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/feedback"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["feedback"]
			}
		},
		"/projects": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.projects.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.slug"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.end_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.tags"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.context"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.executive_summary"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.calendar_color_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.calendar_sync_enabled"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.calendar_settings"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/projects"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/projects"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/projects"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/projects"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["projects"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/projects"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["projects"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.projects.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.slug"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.end_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.tags"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.context"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.executive_summary"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.calendar_color_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.calendar_sync_enabled"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.calendar_settings"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["projects"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.projects.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.slug"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.end_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.tags"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.context"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.executive_summary"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.calendar_color_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.calendar_sync_enabled"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects.calendar_settings"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/projects"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["projects"]
			}
		},
		"/calendar_themes": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.theme_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.color_mappings"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.is_default"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/calendar_themes"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/calendar_themes"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/calendar_themes"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/calendar_themes"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"summary": "Stores user-defined color themes for consistent calendar coloring across projects",
				"tags": ["calendar_themes"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/calendar_themes"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "Stores user-defined color themes for consistent calendar coloring across projects",
				"tags": ["calendar_themes"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.theme_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.color_mappings"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.is_default"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Stores user-defined color themes for consistent calendar coloring across projects",
				"tags": ["calendar_themes"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.theme_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.color_mappings"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.is_default"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.calendar_themes.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/calendar_themes"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Stores user-defined color themes for consistent calendar coloring across projects",
				"tags": ["calendar_themes"]
			}
		},
		"/user_calendar_preferences": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.work_start_time"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.work_end_time"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.working_days"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.default_task_duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.min_task_duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.max_task_duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.exclude_holidays"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.holiday_country_code"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.prefer_morning_for_important_tasks"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_calendar_preferences"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_calendar_preferences"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_calendar_preferences"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_calendar_preferences"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["user_calendar_preferences"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_calendar_preferences"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["user_calendar_preferences"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.work_start_time"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.work_end_time"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.working_days"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.default_task_duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.min_task_duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.max_task_duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.exclude_holidays"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.holiday_country_code"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.prefer_morning_for_important_tasks"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_calendar_preferences"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.work_start_time"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.work_end_time"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.working_days"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.default_task_duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.min_task_duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.max_task_duration_minutes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.exclude_holidays"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.holiday_country_code"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.prefer_morning_for_important_tasks"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_preferences.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_calendar_preferences"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_calendar_preferences"]
			}
		},
		"/brain_dump_links": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.brain_dump_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.note_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.task_id"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/brain_dump_links"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/brain_dump_links"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/brain_dump_links"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/brain_dump_links"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["brain_dump_links"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/brain_dump_links"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["brain_dump_links"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.brain_dump_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.note_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.task_id"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["brain_dump_links"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.brain_dump_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.note_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.brain_dump_links.task_id"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/brain_dump_links"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["brain_dump_links"]
			}
		},
		"/invoices": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.invoices.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.stripe_invoice_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.stripe_customer_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.subscription_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.amount_paid"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.amount_due"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.currency"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.invoice_pdf"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.hosted_invoice_url"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/invoices"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/invoices"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/invoices"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/invoices"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["invoices"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/invoices"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["invoices"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.invoices.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.stripe_invoice_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.stripe_customer_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.subscription_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.amount_paid"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.amount_due"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.currency"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.invoice_pdf"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.hosted_invoice_url"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["invoices"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.invoices.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.stripe_invoice_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.stripe_customer_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.subscription_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.amount_paid"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.amount_due"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.currency"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.invoice_pdf"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.hosted_invoice_url"
					},
					{
						"$ref": "#/components/parameters/rowFilter.invoices.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/invoices"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["invoices"]
			}
		},
		"/visitors": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.visitors.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.visitor_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/visitors"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/visitors"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/visitors"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/visitors"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["visitors"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/visitors"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["visitors"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.visitors.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.visitor_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["visitors"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.visitors.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.visitor_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.visitors.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/visitors"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["visitors"]
			}
		},
		"/trial_reminders": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.reminder_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/trial_reminders"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/trial_reminders"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/trial_reminders"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/trial_reminders"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["trial_reminders"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/trial_reminders"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["trial_reminders"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.reminder_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["trial_reminders"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.reminder_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.trial_reminders.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/trial_reminders"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["trial_reminders"]
			}
		},
		"/generated_phases": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.generation_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.objectives"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.deliverables"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.success_criteria"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.suggested_duration_days"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.suggested_start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.suggested_end_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.suggested_order"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.confidence_score"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.is_approved"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.approved_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.approved_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.phase_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/generated_phases"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/generated_phases"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/generated_phases"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/generated_phases"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"summary": "Stores individual phases generated by AI, pending user approval",
				"tags": ["generated_phases"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/generated_phases"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "Stores individual phases generated by AI, pending user approval",
				"tags": ["generated_phases"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.generation_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.objectives"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.deliverables"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.success_criteria"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.suggested_duration_days"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.suggested_start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.suggested_end_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.suggested_order"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.confidence_score"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.is_approved"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.approved_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.approved_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.phase_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Stores individual phases generated by AI, pending user approval",
				"tags": ["generated_phases"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.generation_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.objectives"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.deliverables"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.success_criteria"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.suggested_duration_days"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.suggested_start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.suggested_end_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.suggested_order"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.confidence_score"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.is_approved"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.approved_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.approved_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.phase_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.generated_phases.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/generated_phases"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Stores individual phases generated by AI, pending user approval",
				"tags": ["generated_phases"]
			}
		},
		"/question_templates": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.template"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.category"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.conditions"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.variables"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.effectiveness_score"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.usage_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/question_templates"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/question_templates"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/question_templates"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/question_templates"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["question_templates"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/question_templates"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["question_templates"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.template"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.category"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.conditions"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.variables"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.effectiveness_score"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.usage_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["question_templates"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.template"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.category"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.conditions"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.variables"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.effectiveness_score"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.usage_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.question_templates.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/question_templates"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["question_templates"]
			}
		},
		"/phases": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.phases.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.end_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.order"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.scheduling_method"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/phases"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/phases"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/phases"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/phases"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["phases"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/phases"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["phases"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.phases.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.end_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.order"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.scheduling_method"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["phases"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.phases.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.end_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.order"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phases.scheduling_method"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/phases"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["phases"]
			}
		},
		"/beta_members": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.signup_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.full_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.job_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.company_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.joined_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.beta_tier"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.access_level"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.last_active_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.total_feedback_submitted"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.total_features_requested"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.total_calls_attended"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.has_lifetime_pricing"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.discount_percentage"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.early_access_features"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.wants_weekly_calls"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.wants_community_access"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.wants_feature_updates"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.user_timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.deactivated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.deactivation_reason"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_members"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_members"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_members"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_members"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["beta_members"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/beta_members"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["beta_members"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.signup_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.full_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.job_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.company_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.joined_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.beta_tier"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.access_level"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.last_active_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.total_feedback_submitted"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.total_features_requested"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.total_calls_attended"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.has_lifetime_pricing"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.discount_percentage"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.early_access_features"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.wants_weekly_calls"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.wants_community_access"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.wants_feature_updates"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.user_timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.deactivated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.deactivation_reason"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["beta_members"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.signup_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.full_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.job_title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.company_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.joined_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.beta_tier"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.access_level"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.last_active_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.total_feedback_submitted"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.total_features_requested"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.total_calls_attended"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.has_lifetime_pricing"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.discount_percentage"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.early_access_features"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.wants_weekly_calls"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.wants_community_access"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.wants_feature_updates"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.user_timezone"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.deactivated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.deactivation_reason"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_members.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/beta_members"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["beta_members"]
			}
		},
		"/project_daily_briefs": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.template_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.brief_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.brief_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.generation_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.generation_started_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.generation_completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.generation_error"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_daily_briefs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_daily_briefs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_daily_briefs"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_daily_briefs"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["project_daily_briefs"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_daily_briefs"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["project_daily_briefs"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.template_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.brief_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.brief_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.generation_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.generation_started_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.generation_completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.generation_error"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["project_daily_briefs"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.template_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.brief_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.brief_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.generation_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.generation_started_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.generation_completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_daily_briefs.generation_error"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_daily_briefs"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["project_daily_briefs"]
			}
		},
		"/notes": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.notes.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.tags"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.category"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/notes"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/notes"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/notes"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/notes"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["notes"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/notes"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["notes"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.notes.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.tags"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.category"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["notes"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.notes.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.tags"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.notes.category"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/notes"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["notes"]
			}
		},
		"/project_phases_generation": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_started_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_error"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_progress"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.regenerated"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.template_used"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.phases_data"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.phases_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.total_duration_days"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_phases_generation"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_phases_generation"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_phases_generation"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_phases_generation"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"summary": "Tracks AI-generated project phases before user approval",
				"tags": ["project_phases_generation"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_phases_generation"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "Tracks AI-generated project phases before user approval",
				"tags": ["project_phases_generation"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_started_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_error"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_progress"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.regenerated"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.template_used"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.phases_data"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.phases_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.total_duration_days"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Tracks AI-generated project phases before user approval",
				"tags": ["project_phases_generation"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_started_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_completed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_error"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.generation_progress"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.regenerated"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.template_used"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.phases_data"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.phases_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.total_duration_days"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_phases_generation.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_phases_generation"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Tracks AI-generated project phases before user approval",
				"tags": ["project_phases_generation"]
			}
		},
		"/phase_task_schedules": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.phase_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.proposed_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.proposed_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.is_confirmed"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.scheduling_notes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.conflict_warnings"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/phase_task_schedules"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/phase_task_schedules"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/phase_task_schedules"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/phase_task_schedules"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["phase_task_schedules"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/phase_task_schedules"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["phase_task_schedules"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.phase_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.proposed_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.proposed_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.is_confirmed"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.scheduling_notes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.conflict_warnings"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["phase_task_schedules"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.phase_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.proposed_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.proposed_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.is_confirmed"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.scheduling_notes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.conflict_warnings"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_task_schedules.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/phase_task_schedules"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["phase_task_schedules"]
			}
		},
		"/recurring_task_summary": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_summary.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_summary.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_summary.recurrence_pattern"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_summary.recurrence_ends"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_summary.start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_summary.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_summary.total_instances"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_summary.completed_instances"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_summary.skipped_instances"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_summary.exception_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_summary.next_occurrence"
					},
					{
						"$ref": "#/components/parameters/rowFilter.recurring_task_summary.last_completed_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/recurring_task_summary"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/recurring_task_summary"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/recurring_task_summary"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/recurring_task_summary"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["recurring_task_summary"]
			}
		},
		"/email_attachments": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.email_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.filename"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.original_filename"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.file_size"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.content_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.storage_path"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.storage_bucket"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.is_image"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.image_width"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.image_height"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.optimized_versions"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.created_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.is_inline"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.cid"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_attachments"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_attachments"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_attachments"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_attachments"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["email_attachments"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/email_attachments"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["email_attachments"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.email_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.filename"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.original_filename"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.file_size"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.content_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.storage_path"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.storage_bucket"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.is_image"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.image_width"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.image_height"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.optimized_versions"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.created_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.is_inline"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.cid"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["email_attachments"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.email_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.filename"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.original_filename"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.file_size"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.content_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.storage_path"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.storage_bucket"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.is_image"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.image_width"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.image_height"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.optimized_versions"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.created_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.is_inline"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_attachments.cid"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/email_attachments"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["email_attachments"]
			}
		},
		"/emails": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.emails.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.subject"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.from_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.from_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.scheduled_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.tracking_enabled"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.tracking_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.created_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.category"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.template_data"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/emails"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/emails"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/emails"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/emails"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["emails"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/emails"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["emails"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.emails.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.subject"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.from_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.from_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.scheduled_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.tracking_enabled"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.tracking_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.created_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.category"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.template_data"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["emails"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.emails.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.subject"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.from_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.from_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.scheduled_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.sent_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.tracking_enabled"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.tracking_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.created_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.category"
					},
					{
						"$ref": "#/components/parameters/rowFilter.emails.template_data"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/emails"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["emails"]
			}
		},
		"/beta_feature_votes": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.feedback_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.member_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.vote_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_feature_votes"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_feature_votes"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_feature_votes"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/beta_feature_votes"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["beta_feature_votes"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/beta_feature_votes"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["beta_feature_votes"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.feedback_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.member_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.vote_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["beta_feature_votes"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.feedback_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.member_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.vote_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.beta_feature_votes.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/beta_feature_votes"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["beta_feature_votes"]
			}
		},
		"/email_tracking_events": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.email_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.recipient_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.event_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.event_data"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.timestamp"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.clicked_url"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_tracking_events"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_tracking_events"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_tracking_events"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/email_tracking_events"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["email_tracking_events"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/email_tracking_events"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["email_tracking_events"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.email_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.recipient_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.event_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.event_data"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.timestamp"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.clicked_url"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["email_tracking_events"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.email_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.recipient_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.event_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.event_data"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.timestamp"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.clicked_url"
					},
					{
						"$ref": "#/components/parameters/rowFilter.email_tracking_events.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/email_tracking_events"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["email_tracking_events"]
			}
		},
		"/project_synthesis": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.synthesis_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.insights"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.generation_model"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.generation_duration_ms"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.operations_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.applied_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_synthesis"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_synthesis"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_synthesis"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_synthesis"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"summary": "Stores AI-generated project synthesis including task consolidation and next steps",
				"tags": ["project_synthesis"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_synthesis"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "Stores AI-generated project synthesis including task consolidation and next steps",
				"tags": ["project_synthesis"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.synthesis_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.insights"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.generation_model"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.generation_duration_ms"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.operations_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.applied_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Stores AI-generated project synthesis including task consolidation and next steps",
				"tags": ["project_synthesis"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.synthesis_content"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.insights"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.generation_model"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.generation_duration_ms"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.operations_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_synthesis.applied_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/project_synthesis"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Stores AI-generated project synthesis including task consolidation and next steps",
				"tags": ["project_synthesis"]
			}
		},
		"/users": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.users.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.bio"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.is_admin"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.completed_onboarding"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.last_visit"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.stripe_customer_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.subscription_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.subscription_plan_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.trial_ends_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.access_restricted"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.access_restricted_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.is_beta_user"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/users"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/users"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/users"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/users"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["users"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/users"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["users"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.users.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.bio"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.is_admin"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.completed_onboarding"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.last_visit"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.stripe_customer_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.subscription_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.subscription_plan_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.trial_ends_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.access_restricted"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.access_restricted_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.is_beta_user"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["users"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.users.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.bio"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.is_admin"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.completed_onboarding"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.last_visit"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.stripe_customer_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.subscription_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.subscription_plan_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.trial_ends_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.access_restricted"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.access_restricted_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.users.is_beta_user"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/users"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["users"]
			}
		},
		"/api_keys": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.service_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.api_key"
					},
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/api_keys"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/api_keys"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/api_keys"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/api_keys"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["api_keys"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/api_keys"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["api_keys"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.service_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.api_key"
					},
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["api_keys"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.service_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.api_key"
					},
					{
						"$ref": "#/components/parameters/rowFilter.api_keys.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/api_keys"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["api_keys"]
			}
		},
		"/sms_templates": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.template_key"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.message_template"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.template_vars"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.required_vars"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.max_length"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.usage_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.last_used_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.created_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/sms_templates"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/sms_templates"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/sms_templates"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/sms_templates"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["sms_templates"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/sms_templates"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["sms_templates"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.template_key"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.message_template"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.template_vars"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.required_vars"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.max_length"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.usage_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.last_used_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.created_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["sms_templates"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.template_key"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.message_template"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.template_vars"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.required_vars"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.max_length"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.is_active"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.usage_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.last_used_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.created_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.sms_templates.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/sms_templates"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["sms_templates"]
			}
		},
		"/error_summary": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.error_summary.error_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_summary.severity"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_summary.error_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_summary.affected_users"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_summary.affected_projects"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_summary.first_occurrence"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_summary.last_occurrence"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_summary.resolved_count"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_summary.avg_response_time_ms"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/error_summary"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/error_summary"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/error_summary"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/error_summary"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["error_summary"]
			}
		},
		"/customer_subscriptions": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.stripe_customer_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.stripe_subscription_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.stripe_price_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.plan_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.current_period_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.current_period_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.cancel_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.canceled_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.trial_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.trial_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.cancellation_reason"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/customer_subscriptions"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/customer_subscriptions"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/customer_subscriptions"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/customer_subscriptions"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["customer_subscriptions"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/customer_subscriptions"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["customer_subscriptions"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.stripe_customer_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.stripe_subscription_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.stripe_price_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.plan_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.current_period_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.current_period_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.cancel_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.canceled_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.trial_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.trial_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.cancellation_reason"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["customer_subscriptions"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.stripe_customer_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.stripe_subscription_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.stripe_price_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.plan_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.current_period_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.current_period_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.cancel_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.canceled_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.trial_start"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.trial_end"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.customer_subscriptions.cancellation_reason"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/customer_subscriptions"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["customer_subscriptions"]
			}
		},
		"/user_activity_logs": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.activity_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.activity_data"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_activity_logs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_activity_logs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_activity_logs"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_activity_logs"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"summary": "Detailed user activity tracking",
				"tags": ["user_activity_logs"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_activity_logs"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "Detailed user activity tracking",
				"tags": ["user_activity_logs"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.activity_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.activity_data"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Detailed user activity tracking",
				"tags": ["user_activity_logs"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.activity_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.activity_data"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_activity_logs.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_activity_logs"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Detailed user activity tracking",
				"tags": ["user_activity_logs"]
			}
		},
		"/project_kept_versions": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.project_kept_versions.history_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_kept_versions.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_kept_versions.version_number"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_kept_versions.is_first_version"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_kept_versions.project_data"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_kept_versions.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_kept_versions.created_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_kept_versions.current_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_kept_versions.version_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_kept_versions.version_status"
					},
					{
						"$ref": "#/components/parameters/rowFilter.project_kept_versions.version_type"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_kept_versions"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_kept_versions"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_kept_versions"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/project_kept_versions"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["project_kept_versions"]
			}
		},
		"/error_logs": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.error_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.error_code"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.error_stack"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.severity"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.brain_dump_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.endpoint"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.http_method"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.request_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.llm_provider"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.llm_model"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.prompt_tokens"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.completion_tokens"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.total_tokens"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.response_time_ms"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.llm_temperature"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.llm_max_tokens"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.operation_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.table_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.record_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.operation_payload"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.environment"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.app_version"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.browser_info"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.resolved"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.resolved_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.resolved_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.resolution_notes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.updated_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/error_logs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/error_logs"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/error_logs"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/error_logs"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["error_logs"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/error_logs"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["error_logs"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.error_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.error_code"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.error_stack"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.severity"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.brain_dump_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.endpoint"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.http_method"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.request_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.llm_provider"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.llm_model"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.prompt_tokens"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.completion_tokens"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.total_tokens"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.response_time_ms"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.llm_temperature"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.llm_max_tokens"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.operation_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.table_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.record_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.operation_payload"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.environment"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.app_version"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.browser_info"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.resolved"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.resolved_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.resolved_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.resolution_notes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["error_logs"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.error_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.error_code"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.error_message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.error_stack"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.severity"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.brain_dump_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.endpoint"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.http_method"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.request_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.user_agent"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.ip_address"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.llm_provider"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.llm_model"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.prompt_tokens"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.completion_tokens"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.total_tokens"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.response_time_ms"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.llm_temperature"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.llm_max_tokens"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.operation_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.table_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.record_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.operation_payload"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.metadata"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.environment"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.app_version"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.browser_info"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.resolved"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.resolved_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.resolved_by"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.resolution_notes"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.error_logs.updated_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/error_logs"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["error_logs"]
			}
		},
		"/user_notifications": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.action_url"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.read_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.dismissed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.expires_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_notifications"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_notifications"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_notifications"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_notifications"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["user_notifications"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_notifications"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["user_notifications"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.action_url"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.read_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.dismissed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.expires_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_notifications"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.title"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.message"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.priority"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.action_url"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.read_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.dismissed_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.expires_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_notifications.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_notifications"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_notifications"]
			}
		},
		"/system_metrics": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.metric_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.metric_value"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.metric_unit"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.metric_description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.recorded_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/system_metrics"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/system_metrics"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/system_metrics"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/system_metrics"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"summary": "Real-time system performance metrics",
				"tags": ["system_metrics"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/system_metrics"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"summary": "Real-time system performance metrics",
				"tags": ["system_metrics"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.metric_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.metric_value"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.metric_unit"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.metric_description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.recorded_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Real-time system performance metrics",
				"tags": ["system_metrics"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.metric_name"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.metric_value"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.metric_unit"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.metric_description"
					},
					{
						"$ref": "#/components/parameters/rowFilter.system_metrics.recorded_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/system_metrics"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"summary": "Real-time system performance metrics",
				"tags": ["system_metrics"]
			}
		},
		"/phase_tasks": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.phase_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.suggested_start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.assignment_reason"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.created_at"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/phase_tasks"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/phase_tasks"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/phase_tasks"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/phase_tasks"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["phase_tasks"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/phase_tasks"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["phase_tasks"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.phase_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.suggested_start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.assignment_reason"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["phase_tasks"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.phase_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.task_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.suggested_start_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.assignment_reason"
					},
					{
						"$ref": "#/components/parameters/rowFilter.phase_tasks.created_at"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/phase_tasks"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["phase_tasks"]
			}
		},
		"/projects_history": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.history_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.version_number"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.is_first_version"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.project_data"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.created_by"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/projects_history"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/projects_history"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/projects_history"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/projects_history"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["projects_history"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/projects_history"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["projects_history"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.history_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.version_number"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.is_first_version"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.project_data"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.created_by"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["projects_history"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.history_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.project_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.version_number"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.is_first_version"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.project_data"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.projects_history.created_by"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/projects_history"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["projects_history"]
			}
		},
		"/user_calendar_tokens": {
			"get": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.access_token"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.refresh_token"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.expiry_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.token_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.scope"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.google_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.google_user_id"
					},
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/order"
					},
					{
						"$ref": "#/components/parameters/range"
					},
					{
						"$ref": "#/components/parameters/rangeUnit"
					},
					{
						"$ref": "#/components/parameters/offset"
					},
					{
						"$ref": "#/components/parameters/limit"
					},
					{
						"$ref": "#/components/parameters/preferCount"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_calendar_tokens"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json;nulls=stripped": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_calendar_tokens"
									},
									"type": "array"
								}
							},
							"application/vnd.pgrst.object+json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_calendar_tokens"
									},
									"type": "array"
								}
							},
							"text/csv": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/user_calendar_tokens"
									},
									"type": "array"
								}
							}
						}
					},
					"206": {
						"description": "Partial Content"
					}
				},
				"tags": ["user_calendar_tokens"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/select"
					},
					{
						"$ref": "#/components/parameters/preferPost"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_calendar_tokens"
				},
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"tags": ["user_calendar_tokens"]
			},
			"delete": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.access_token"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.refresh_token"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.expiry_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.token_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.scope"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.google_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.google_user_id"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_calendar_tokens"]
			},
			"patch": {
				"parameters": [
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.user_id"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.access_token"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.refresh_token"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.expiry_date"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.token_type"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.scope"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.created_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.updated_at"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.google_email"
					},
					{
						"$ref": "#/components/parameters/rowFilter.user_calendar_tokens.google_user_id"
					},
					{
						"$ref": "#/components/parameters/preferReturn"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/user_calendar_tokens"
				},
				"responses": {
					"204": {
						"description": "No Content"
					}
				},
				"tags": ["user_calendar_tokens"]
			}
		},
		"/rpc/is_admin": {
			"get": {
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) is_admin"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) is_admin"]
			}
		},
		"/rpc/search_all_content": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "search_query",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "current_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "items_per_category",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) search_all_content"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"current_user_id": {
										"format": "uuid",
										"type": "string"
									},
									"items_per_category": {
										"format": "integer",
										"type": "integer"
									},
									"search_query": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["search_query", "current_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"current_user_id": {
										"format": "uuid",
										"type": "string"
									},
									"items_per_category": {
										"format": "integer",
										"type": "integer"
									},
									"search_query": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["search_query", "current_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"current_user_id": {
										"format": "uuid",
										"type": "string"
									},
									"items_per_category": {
										"format": "integer",
										"type": "integer"
									},
									"search_query": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["search_query", "current_user_id"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"current_user_id": {
										"format": "uuid",
										"type": "string"
									},
									"items_per_category": {
										"format": "integer",
										"type": "integer"
									},
									"search_query": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["search_query", "current_user_id"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) search_all_content"]
			}
		},
		"/rpc/get_project_statistics": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_project_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Optimized function to calculate project statistics without fetching all task data, using database aggregations for efficiency",
				"tags": ["(rpc) get_project_statistics"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Optimized function to calculate project statistics without fetching all task data, using database aggregations for efficiency",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id", "p_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Optimized function to calculate project statistics without fetching all task data, using database aggregations for efficiency",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id", "p_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Optimized function to calculate project statistics without fetching all task data, using database aggregations for efficiency",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id", "p_user_id"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Optimized function to calculate project statistics without fetching all task data, using database aggregations for efficiency",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id", "p_user_id"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Optimized function to calculate project statistics without fetching all task data, using database aggregations for efficiency",
				"tags": ["(rpc) get_project_statistics"]
			}
		},
		"/rpc/cancel_job_with_reason": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_job_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_reason",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "p_allow_processing",
						"required": false,
						"schema": {
							"type": "boolean",
							"format": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Enhanced single job cancellation with reason tracking and status validation",
				"tags": ["(rpc) cancel_job_with_reason"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Enhanced single job cancellation with reason tracking and status validation",
								"properties": {
									"p_allow_processing": {
										"format": "boolean",
										"type": "boolean"
									},
									"p_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_reason": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["p_job_id", "p_reason"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Enhanced single job cancellation with reason tracking and status validation",
								"properties": {
									"p_allow_processing": {
										"format": "boolean",
										"type": "boolean"
									},
									"p_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_reason": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["p_job_id", "p_reason"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Enhanced single job cancellation with reason tracking and status validation",
								"properties": {
									"p_allow_processing": {
										"format": "boolean",
										"type": "boolean"
									},
									"p_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_reason": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["p_job_id", "p_reason"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Enhanced single job cancellation with reason tracking and status validation",
								"properties": {
									"p_allow_processing": {
										"format": "boolean",
										"type": "boolean"
									},
									"p_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_reason": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["p_job_id", "p_reason"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Enhanced single job cancellation with reason tracking and status validation",
				"tags": ["(rpc) cancel_job_with_reason"]
			}
		},
		"/rpc/add_queue_job": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_job_type",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "p_metadata",
						"required": false,
						"schema": {
							"type": "string",
							"format": "jsonb"
						}
					},
					{
						"in": "query",
						"name": "p_priority",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					},
					{
						"in": "query",
						"name": "p_scheduled_for",
						"required": false,
						"schema": {
							"type": "string",
							"format": "timestamp with time zone"
						}
					},
					{
						"in": "query",
						"name": "p_dedup_key",
						"required": false,
						"schema": {
							"type": "string",
							"format": "text"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Adds a new job to the queue with deduplication support and proper enum type casting",
				"tags": ["(rpc) add_queue_job"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Adds a new job to the queue with deduplication support and proper enum type casting",
								"properties": {
									"p_dedup_key": {
										"format": "text",
										"type": "string"
									},
									"p_job_type": {
										"format": "text",
										"type": "string"
									},
									"p_metadata": {
										"format": "jsonb"
									},
									"p_priority": {
										"format": "integer",
										"type": "integer"
									},
									"p_scheduled_for": {
										"format": "timestamp with time zone",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_job_type"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Adds a new job to the queue with deduplication support and proper enum type casting",
								"properties": {
									"p_dedup_key": {
										"format": "text",
										"type": "string"
									},
									"p_job_type": {
										"format": "text",
										"type": "string"
									},
									"p_metadata": {
										"format": "jsonb"
									},
									"p_priority": {
										"format": "integer",
										"type": "integer"
									},
									"p_scheduled_for": {
										"format": "timestamp with time zone",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_job_type"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Adds a new job to the queue with deduplication support and proper enum type casting",
								"properties": {
									"p_dedup_key": {
										"format": "text",
										"type": "string"
									},
									"p_job_type": {
										"format": "text",
										"type": "string"
									},
									"p_metadata": {
										"format": "jsonb"
									},
									"p_priority": {
										"format": "integer",
										"type": "integer"
									},
									"p_scheduled_for": {
										"format": "timestamp with time zone",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_job_type"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Adds a new job to the queue with deduplication support and proper enum type casting",
								"properties": {
									"p_dedup_key": {
										"format": "text",
										"type": "string"
									},
									"p_job_type": {
										"format": "text",
										"type": "string"
									},
									"p_metadata": {
										"format": "jsonb"
									},
									"p_priority": {
										"format": "integer",
										"type": "integer"
									},
									"p_scheduled_for": {
										"format": "timestamp with time zone",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_job_type"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Adds a new job to the queue with deduplication support and proper enum type casting",
				"tags": ["(rpc) add_queue_job"]
			}
		},
		"/rpc/restore_deleted_task": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "task_id_param",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) restore_deleted_task"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"task_id_param": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["task_id_param"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"task_id_param": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["task_id_param"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"task_id_param": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["task_id_param"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"task_id_param": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["task_id_param"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) restore_deleted_task"]
			}
		},
		"/rpc/search_all_similar": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "query_embedding",
						"required": true,
						"schema": {
							"type": "string",
							"format": "public.vector"
						}
					},
					{
						"in": "query",
						"name": "similarity_threshold",
						"required": false,
						"schema": {
							"type": "number",
							"format": "double precision"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) search_all_similar"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"query_embedding": {
										"format": "public.vector",
										"type": "string"
									},
									"similarity_threshold": {
										"format": "double precision",
										"type": "number"
									}
								},
								"required": ["query_embedding"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"query_embedding": {
										"format": "public.vector",
										"type": "string"
									},
									"similarity_threshold": {
										"format": "double precision",
										"type": "number"
									}
								},
								"required": ["query_embedding"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"query_embedding": {
										"format": "public.vector",
										"type": "string"
									},
									"similarity_threshold": {
										"format": "double precision",
										"type": "number"
									}
								},
								"required": ["query_embedding"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"query_embedding": {
										"format": "public.vector",
										"type": "string"
									},
									"similarity_threshold": {
										"format": "double precision",
										"type": "number"
									}
								},
								"required": ["query_embedding"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) search_all_similar"]
			}
		},
		"/rpc/get_daily_active_users": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "start_date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"in": "query",
						"name": "end_date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Returns daily active user counts for date range",
				"tags": ["(rpc) get_daily_active_users"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Returns daily active user counts for date range",
								"properties": {
									"end_date": {
										"format": "date",
										"type": "string"
									},
									"start_date": {
										"format": "date",
										"type": "string"
									}
								},
								"required": ["start_date", "end_date"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Returns daily active user counts for date range",
								"properties": {
									"end_date": {
										"format": "date",
										"type": "string"
									},
									"start_date": {
										"format": "date",
										"type": "string"
									}
								},
								"required": ["start_date", "end_date"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Returns daily active user counts for date range",
								"properties": {
									"end_date": {
										"format": "date",
										"type": "string"
									},
									"start_date": {
										"format": "date",
										"type": "string"
									}
								},
								"required": ["start_date", "end_date"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Returns daily active user counts for date range",
								"properties": {
									"end_date": {
										"format": "date",
										"type": "string"
									},
									"start_date": {
										"format": "date",
										"type": "string"
									}
								},
								"required": ["start_date", "end_date"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Returns daily active user counts for date range",
				"tags": ["(rpc) get_daily_active_users"]
			}
		},
		"/rpc/check_onboarding_complete": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "user_id_param",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) check_onboarding_complete"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"user_id_param": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["user_id_param"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"user_id_param": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["user_id_param"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"user_id_param": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["user_id_param"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"user_id_param": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["user_id_param"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) check_onboarding_complete"]
			}
		},
		"/rpc/get_user_failed_payments_count": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_user_failed_payments_count"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args2"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_user_failed_payments_count"]
			}
		},
		"/rpc/brain_dump_cleanup_preview": {
			"get": {
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) brain_dump_cleanup_preview"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) brain_dump_cleanup_preview"]
			}
		},
		"/rpc/get_visitor_overview": {
			"get": {
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_visitor_overview"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_visitor_overview"]
			}
		},
		"/rpc/update_brief_generation_progress": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_brief_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_projects_completed",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					},
					{
						"in": "query",
						"name": "p_life_goals_completed",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					},
					{
						"in": "query",
						"name": "p_total_projects",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					},
					{
						"in": "query",
						"name": "p_total_life_goals",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) update_brief_generation_progress"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"p_brief_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_life_goals_completed": {
										"format": "integer",
										"type": "integer"
									},
									"p_projects_completed": {
										"format": "integer",
										"type": "integer"
									},
									"p_total_life_goals": {
										"format": "integer",
										"type": "integer"
									},
									"p_total_projects": {
										"format": "integer",
										"type": "integer"
									}
								},
								"required": [
									"p_brief_id",
									"p_projects_completed",
									"p_life_goals_completed",
									"p_total_projects",
									"p_total_life_goals"
								],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"p_brief_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_life_goals_completed": {
										"format": "integer",
										"type": "integer"
									},
									"p_projects_completed": {
										"format": "integer",
										"type": "integer"
									},
									"p_total_life_goals": {
										"format": "integer",
										"type": "integer"
									},
									"p_total_projects": {
										"format": "integer",
										"type": "integer"
									}
								},
								"required": [
									"p_brief_id",
									"p_projects_completed",
									"p_life_goals_completed",
									"p_total_projects",
									"p_total_life_goals"
								],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"p_brief_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_life_goals_completed": {
										"format": "integer",
										"type": "integer"
									},
									"p_projects_completed": {
										"format": "integer",
										"type": "integer"
									},
									"p_total_life_goals": {
										"format": "integer",
										"type": "integer"
									},
									"p_total_projects": {
										"format": "integer",
										"type": "integer"
									}
								},
								"required": [
									"p_brief_id",
									"p_projects_completed",
									"p_life_goals_completed",
									"p_total_projects",
									"p_total_life_goals"
								],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"p_brief_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_life_goals_completed": {
										"format": "integer",
										"type": "integer"
									},
									"p_projects_completed": {
										"format": "integer",
										"type": "integer"
									},
									"p_total_life_goals": {
										"format": "integer",
										"type": "integer"
									},
									"p_total_projects": {
										"format": "integer",
										"type": "integer"
									}
								},
								"required": [
									"p_brief_id",
									"p_projects_completed",
									"p_life_goals_completed",
									"p_total_projects",
									"p_total_life_goals"
								],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) update_brief_generation_progress"]
			}
		},
		"/rpc/reorder_phases_with_tasks": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_project_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_phase_updates",
						"required": true,
						"schema": {
							"type": "string",
							"format": "jsonb"
						}
					},
					{
						"in": "query",
						"name": "p_clear_task_dates",
						"required": false,
						"schema": {
							"type": "boolean",
							"format": "boolean"
						}
					},
					{
						"in": "query",
						"name": "p_affected_task_ids",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid[]"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Complete phase reordering operation with optional task date clearing",
				"tags": ["(rpc) reorder_phases_with_tasks"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Complete phase reordering operation with optional task date clearing",
								"properties": {
									"p_affected_task_ids": {
										"format": "uuid[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"p_clear_task_dates": {
										"format": "boolean",
										"type": "boolean"
									},
									"p_phase_updates": {
										"format": "jsonb"
									},
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id", "p_phase_updates"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Complete phase reordering operation with optional task date clearing",
								"properties": {
									"p_affected_task_ids": {
										"format": "uuid[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"p_clear_task_dates": {
										"format": "boolean",
										"type": "boolean"
									},
									"p_phase_updates": {
										"format": "jsonb"
									},
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id", "p_phase_updates"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Complete phase reordering operation with optional task date clearing",
								"properties": {
									"p_affected_task_ids": {
										"format": "uuid[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"p_clear_task_dates": {
										"format": "boolean",
										"type": "boolean"
									},
									"p_phase_updates": {
										"format": "jsonb"
									},
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id", "p_phase_updates"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Complete phase reordering operation with optional task date clearing",
								"properties": {
									"p_affected_task_ids": {
										"format": "uuid[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"p_clear_task_dates": {
										"format": "boolean",
										"type": "boolean"
									},
									"p_phase_updates": {
										"format": "jsonb"
									},
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id", "p_phase_updates"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Complete phase reordering operation with optional task date clearing",
				"tags": ["(rpc) reorder_phases_with_tasks"]
			}
		},
		"/rpc/get_user_trial_status": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_user_trial_status"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args2"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_user_trial_status"]
			}
		},
		"/rpc/generate_recurring_instances": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_task_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_start_date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"in": "query",
						"name": "p_end_date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Generates recurring task instances for a date range",
				"tags": ["(rpc) generate_recurring_instances"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Generates recurring task instances for a date range",
								"properties": {
									"p_end_date": {
										"format": "date",
										"type": "string"
									},
									"p_start_date": {
										"format": "date",
										"type": "string"
									},
									"p_task_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_task_id", "p_start_date", "p_end_date"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Generates recurring task instances for a date range",
								"properties": {
									"p_end_date": {
										"format": "date",
										"type": "string"
									},
									"p_start_date": {
										"format": "date",
										"type": "string"
									},
									"p_task_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_task_id", "p_start_date", "p_end_date"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Generates recurring task instances for a date range",
								"properties": {
									"p_end_date": {
										"format": "date",
										"type": "string"
									},
									"p_start_date": {
										"format": "date",
										"type": "string"
									},
									"p_task_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_task_id", "p_start_date", "p_end_date"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Generates recurring task instances for a date range",
								"properties": {
									"p_end_date": {
										"format": "date",
										"type": "string"
									},
									"p_start_date": {
										"format": "date",
										"type": "string"
									},
									"p_task_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_task_id", "p_start_date", "p_end_date"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Generates recurring task instances for a date range",
				"tags": ["(rpc) generate_recurring_instances"]
			}
		},
		"/rpc/complete_recurring_instance": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_task_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_instance_date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Marks a recurring task instance as completed",
				"tags": ["(rpc) complete_recurring_instance"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Marks a recurring task instance as completed",
								"properties": {
									"p_instance_date": {
										"format": "date",
										"type": "string"
									},
									"p_task_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_task_id", "p_instance_date", "p_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Marks a recurring task instance as completed",
								"properties": {
									"p_instance_date": {
										"format": "date",
										"type": "string"
									},
									"p_task_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_task_id", "p_instance_date", "p_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Marks a recurring task instance as completed",
								"properties": {
									"p_instance_date": {
										"format": "date",
										"type": "string"
									},
									"p_task_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_task_id", "p_instance_date", "p_user_id"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Marks a recurring task instance as completed",
								"properties": {
									"p_instance_date": {
										"format": "date",
										"type": "string"
									},
									"p_task_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_task_id", "p_instance_date", "p_user_id"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Marks a recurring task instance as completed",
				"tags": ["(rpc) complete_recurring_instance"]
			}
		},
		"/rpc/start_or_resume_brief_generation": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_brief_date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"in": "query",
						"name": "p_force_regenerate",
						"required": false,
						"schema": {
							"type": "boolean",
							"format": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) start_or_resume_brief_generation"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"p_brief_date": {
										"format": "date",
										"type": "string"
									},
									"p_force_regenerate": {
										"format": "boolean",
										"type": "boolean"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_brief_date"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"p_brief_date": {
										"format": "date",
										"type": "string"
									},
									"p_force_regenerate": {
										"format": "boolean",
										"type": "boolean"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_brief_date"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"p_brief_date": {
										"format": "date",
										"type": "string"
									},
									"p_force_regenerate": {
										"format": "boolean",
										"type": "boolean"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_brief_date"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"p_brief_date": {
										"format": "date",
										"type": "string"
									},
									"p_force_regenerate": {
										"format": "boolean",
										"type": "boolean"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_brief_date"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) start_or_resume_brief_generation"]
			}
		},
		"/rpc/get_dashboard_data": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_timezone",
						"required": false,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "p_date_start",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"in": "query",
						"name": "p_date_end",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"in": "query",
						"name": "p_today",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Optimized function to fetch all dashboard data in a single query, reducing multiple round trips to the database",
				"tags": ["(rpc) get_dashboard_data"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Optimized function to fetch all dashboard data in a single query, reducing multiple round trips to the database",
								"properties": {
									"p_date_end": {
										"format": "date",
										"type": "string"
									},
									"p_date_start": {
										"format": "date",
										"type": "string"
									},
									"p_timezone": {
										"format": "text",
										"type": "string"
									},
									"p_today": {
										"format": "date",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Optimized function to fetch all dashboard data in a single query, reducing multiple round trips to the database",
								"properties": {
									"p_date_end": {
										"format": "date",
										"type": "string"
									},
									"p_date_start": {
										"format": "date",
										"type": "string"
									},
									"p_timezone": {
										"format": "text",
										"type": "string"
									},
									"p_today": {
										"format": "date",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Optimized function to fetch all dashboard data in a single query, reducing multiple round trips to the database",
								"properties": {
									"p_date_end": {
										"format": "date",
										"type": "string"
									},
									"p_date_start": {
										"format": "date",
										"type": "string"
									},
									"p_timezone": {
										"format": "text",
										"type": "string"
									},
									"p_today": {
										"format": "date",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Optimized function to fetch all dashboard data in a single query, reducing multiple round trips to the database",
								"properties": {
									"p_date_end": {
										"format": "date",
										"type": "string"
									},
									"p_date_start": {
										"format": "date",
										"type": "string"
									},
									"p_timezone": {
										"format": "text",
										"type": "string"
									},
									"p_today": {
										"format": "date",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Optimized function to fetch all dashboard data in a single query, reducing multiple round trips to the database",
				"tags": ["(rpc) get_dashboard_data"]
			}
		},
		"/rpc/cancel_brief_jobs_for_date": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_brief_date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "p_exclude_job_id",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Specialized function to cancel brief generation jobs for a specific date",
				"tags": ["(rpc) cancel_brief_jobs_for_date"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Specialized function to cancel brief generation jobs for a specific date",
								"properties": {
									"p_brief_date": {
										"format": "text",
										"type": "string"
									},
									"p_exclude_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_brief_date"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Specialized function to cancel brief generation jobs for a specific date",
								"properties": {
									"p_brief_date": {
										"format": "text",
										"type": "string"
									},
									"p_exclude_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_brief_date"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Specialized function to cancel brief generation jobs for a specific date",
								"properties": {
									"p_brief_date": {
										"format": "text",
										"type": "string"
									},
									"p_exclude_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_brief_date"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Specialized function to cancel brief generation jobs for a specific date",
								"properties": {
									"p_brief_date": {
										"format": "text",
										"type": "string"
									},
									"p_exclude_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_brief_date"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Specialized function to cancel brief generation jobs for a specific date",
				"tags": ["(rpc) cancel_brief_jobs_for_date"]
			}
		},
		"/rpc/check_feedback_rate_limit": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "client_ip",
						"required": true,
						"schema": {
							"type": "string",
							"format": "inet"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) check_feedback_rate_limit"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"client_ip": {
										"format": "inet",
										"type": "string"
									}
								},
								"required": ["client_ip"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"client_ip": {
										"format": "inet",
										"type": "string"
									}
								},
								"required": ["client_ip"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"client_ip": {
										"format": "inet",
										"type": "string"
									}
								},
								"required": ["client_ip"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"client_ip": {
										"format": "inet",
										"type": "string"
									}
								},
								"required": ["client_ip"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) check_feedback_rate_limit"]
			}
		},
		"/rpc/validate_all_queue_jobs": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_fix",
						"required": false,
						"schema": {
							"type": "boolean",
							"format": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Validates all queue jobs and optionally fixes invalid ones by marking as failed",
				"tags": ["(rpc) validate_all_queue_jobs"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Validates all queue jobs and optionally fixes invalid ones by marking as failed",
								"properties": {
									"p_fix": {
										"format": "boolean",
										"type": "boolean"
									}
								},
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Validates all queue jobs and optionally fixes invalid ones by marking as failed",
								"properties": {
									"p_fix": {
										"format": "boolean",
										"type": "boolean"
									}
								},
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Validates all queue jobs and optionally fixes invalid ones by marking as failed",
								"properties": {
									"p_fix": {
										"format": "boolean",
										"type": "boolean"
									}
								},
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Validates all queue jobs and optionally fixes invalid ones by marking as failed",
								"properties": {
									"p_fix": {
										"format": "boolean",
										"type": "boolean"
									}
								},
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Validates all queue jobs and optionally fixes invalid ones by marking as failed",
				"tags": ["(rpc) validate_all_queue_jobs"]
			}
		},
		"/rpc/get_brief_generation_stats": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "start_date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"in": "query",
						"name": "end_date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Returns brief generation statistics by date",
				"tags": ["(rpc) get_brief_generation_stats"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Returns brief generation statistics by date",
								"properties": {
									"end_date": {
										"format": "date",
										"type": "string"
									},
									"start_date": {
										"format": "date",
										"type": "string"
									}
								},
								"required": ["start_date", "end_date"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Returns brief generation statistics by date",
								"properties": {
									"end_date": {
										"format": "date",
										"type": "string"
									},
									"start_date": {
										"format": "date",
										"type": "string"
									}
								},
								"required": ["start_date", "end_date"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Returns brief generation statistics by date",
								"properties": {
									"end_date": {
										"format": "date",
										"type": "string"
									},
									"start_date": {
										"format": "date",
										"type": "string"
									}
								},
								"required": ["start_date", "end_date"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Returns brief generation statistics by date",
								"properties": {
									"end_date": {
										"format": "date",
										"type": "string"
									},
									"start_date": {
										"format": "date",
										"type": "string"
									}
								},
								"required": ["start_date", "end_date"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Returns brief generation statistics by date",
				"tags": ["(rpc) get_brief_generation_stats"]
			}
		},
		"/rpc/increment_question_display_count": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "question_ids",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid[]"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) increment_question_display_count"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"question_ids": {
										"format": "uuid[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": ["question_ids"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"question_ids": {
										"format": "uuid[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": ["question_ids"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"question_ids": {
										"format": "uuid[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": ["question_ids"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"question_ids": {
										"format": "uuid[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": ["question_ids"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) increment_question_display_count"]
			}
		},
		"/rpc/get_projects_with_stats": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_status",
						"required": false,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "p_search",
						"required": false,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "p_limit",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					},
					{
						"in": "query",
						"name": "p_offset",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_projects_with_stats"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"p_limit": {
										"format": "integer",
										"type": "integer"
									},
									"p_offset": {
										"format": "integer",
										"type": "integer"
									},
									"p_search": {
										"format": "text",
										"type": "string"
									},
									"p_status": {
										"format": "text",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"p_limit": {
										"format": "integer",
										"type": "integer"
									},
									"p_offset": {
										"format": "integer",
										"type": "integer"
									},
									"p_search": {
										"format": "text",
										"type": "string"
									},
									"p_status": {
										"format": "text",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"p_limit": {
										"format": "integer",
										"type": "integer"
									},
									"p_offset": {
										"format": "integer",
										"type": "integer"
									},
									"p_search": {
										"format": "text",
										"type": "string"
									},
									"p_status": {
										"format": "text",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"p_limit": {
										"format": "integer",
										"type": "integer"
									},
									"p_offset": {
										"format": "integer",
										"type": "integer"
									},
									"p_search": {
										"format": "text",
										"type": "string"
									},
									"p_status": {
										"format": "text",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_projects_with_stats"]
			}
		},
		"/rpc/show_trgm": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) show_trgm"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args3"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) show_trgm"]
			}
		},
		"/rpc/cancel_jobs_in_time_window": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_job_type",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "p_window_start",
						"required": true,
						"schema": {
							"type": "string",
							"format": "timestamp with time zone"
						}
					},
					{
						"in": "query",
						"name": "p_window_end",
						"required": true,
						"schema": {
							"type": "string",
							"format": "timestamp with time zone"
						}
					},
					{
						"in": "query",
						"name": "p_exclude_job_id",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Cancels jobs scheduled within a specific time window to resolve conflicts",
				"tags": ["(rpc) cancel_jobs_in_time_window"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Cancels jobs scheduled within a specific time window to resolve conflicts",
								"properties": {
									"p_exclude_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_job_type": {
										"format": "text",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_window_end": {
										"format": "timestamp with time zone",
										"type": "string"
									},
									"p_window_start": {
										"format": "timestamp with time zone",
										"type": "string"
									}
								},
								"required": [
									"p_user_id",
									"p_job_type",
									"p_window_start",
									"p_window_end"
								],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Cancels jobs scheduled within a specific time window to resolve conflicts",
								"properties": {
									"p_exclude_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_job_type": {
										"format": "text",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_window_end": {
										"format": "timestamp with time zone",
										"type": "string"
									},
									"p_window_start": {
										"format": "timestamp with time zone",
										"type": "string"
									}
								},
								"required": [
									"p_user_id",
									"p_job_type",
									"p_window_start",
									"p_window_end"
								],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Cancels jobs scheduled within a specific time window to resolve conflicts",
								"properties": {
									"p_exclude_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_job_type": {
										"format": "text",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_window_end": {
										"format": "timestamp with time zone",
										"type": "string"
									},
									"p_window_start": {
										"format": "timestamp with time zone",
										"type": "string"
									}
								},
								"required": [
									"p_user_id",
									"p_job_type",
									"p_window_start",
									"p_window_end"
								],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Cancels jobs scheduled within a specific time window to resolve conflicts",
								"properties": {
									"p_exclude_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_job_type": {
										"format": "text",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_window_end": {
										"format": "timestamp with time zone",
										"type": "string"
									},
									"p_window_start": {
										"format": "timestamp with time zone",
										"type": "string"
									}
								},
								"required": [
									"p_user_id",
									"p_job_type",
									"p_window_start",
									"p_window_end"
								],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Cancels jobs scheduled within a specific time window to resolve conflicts",
				"tags": ["(rpc) cancel_jobs_in_time_window"]
			}
		},
		"/rpc/queue_sms_message": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_phone_number",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "p_message",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "p_priority",
						"required": false,
						"schema": {
							"type": "string",
							"format": "public.sms_priority"
						}
					},
					{
						"in": "query",
						"name": "p_scheduled_for",
						"required": false,
						"schema": {
							"type": "string",
							"format": "timestamp with time zone"
						}
					},
					{
						"in": "query",
						"name": "p_metadata",
						"required": false,
						"schema": {
							"type": "string",
							"format": "jsonb"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) queue_sms_message"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"p_message": {
										"format": "text",
										"type": "string"
									},
									"p_metadata": {
										"format": "jsonb"
									},
									"p_phone_number": {
										"format": "text",
										"type": "string"
									},
									"p_priority": {
										"format": "public.sms_priority",
										"type": "string"
									},
									"p_scheduled_for": {
										"format": "timestamp with time zone",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_phone_number", "p_message"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"p_message": {
										"format": "text",
										"type": "string"
									},
									"p_metadata": {
										"format": "jsonb"
									},
									"p_phone_number": {
										"format": "text",
										"type": "string"
									},
									"p_priority": {
										"format": "public.sms_priority",
										"type": "string"
									},
									"p_scheduled_for": {
										"format": "timestamp with time zone",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_phone_number", "p_message"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"p_message": {
										"format": "text",
										"type": "string"
									},
									"p_metadata": {
										"format": "jsonb"
									},
									"p_phone_number": {
										"format": "text",
										"type": "string"
									},
									"p_priority": {
										"format": "public.sms_priority",
										"type": "string"
									},
									"p_scheduled_for": {
										"format": "timestamp with time zone",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_phone_number", "p_message"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"p_message": {
										"format": "text",
										"type": "string"
									},
									"p_metadata": {
										"format": "jsonb"
									},
									"p_phone_number": {
										"format": "text",
										"type": "string"
									},
									"p_priority": {
										"format": "public.sms_priority",
										"type": "string"
									},
									"p_scheduled_for": {
										"format": "timestamp with time zone",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_phone_number", "p_message"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) queue_sms_message"]
			}
		},
		"/rpc/search_by_type": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "search_query",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "current_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "search_type",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "page_offset",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					},
					{
						"in": "query",
						"name": "page_limit",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) search_by_type"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"current_user_id": {
										"format": "uuid",
										"type": "string"
									},
									"page_limit": {
										"format": "integer",
										"type": "integer"
									},
									"page_offset": {
										"format": "integer",
										"type": "integer"
									},
									"search_query": {
										"format": "text",
										"type": "string"
									},
									"search_type": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["search_query", "current_user_id", "search_type"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"current_user_id": {
										"format": "uuid",
										"type": "string"
									},
									"page_limit": {
										"format": "integer",
										"type": "integer"
									},
									"page_offset": {
										"format": "integer",
										"type": "integer"
									},
									"search_query": {
										"format": "text",
										"type": "string"
									},
									"search_type": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["search_query", "current_user_id", "search_type"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"current_user_id": {
										"format": "uuid",
										"type": "string"
									},
									"page_limit": {
										"format": "integer",
										"type": "integer"
									},
									"page_offset": {
										"format": "integer",
										"type": "integer"
									},
									"search_query": {
										"format": "text",
										"type": "string"
									},
									"search_type": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["search_query", "current_user_id", "search_type"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"current_user_id": {
										"format": "uuid",
										"type": "string"
									},
									"page_limit": {
										"format": "integer",
										"type": "integer"
									},
									"page_offset": {
										"format": "integer",
										"type": "integer"
									},
									"search_query": {
										"format": "text",
										"type": "string"
									},
									"search_type": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["search_query", "current_user_id", "search_type"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) search_by_type"]
			}
		},
		"/rpc/get_project_history": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "target_project_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_project_history"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args4"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_project_history"]
			}
		},
		"/rpc/get_user_active_generations": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_user_active_generations"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args2"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_user_active_generations"]
			}
		},
		"/rpc/get_daily_visitors": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "start_date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"in": "query",
						"name": "end_date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_daily_visitors"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"end_date": {
										"format": "date",
										"type": "string"
									},
									"start_date": {
										"format": "date",
										"type": "string"
									}
								},
								"required": ["start_date", "end_date"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"end_date": {
										"format": "date",
										"type": "string"
									},
									"start_date": {
										"format": "date",
										"type": "string"
									}
								},
								"required": ["start_date", "end_date"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"end_date": {
										"format": "date",
										"type": "string"
									},
									"start_date": {
										"format": "date",
										"type": "string"
									}
								},
								"required": ["start_date", "end_date"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"end_date": {
										"format": "date",
										"type": "string"
									},
									"start_date": {
										"format": "date",
										"type": "string"
									}
								},
								"required": ["start_date", "end_date"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_daily_visitors"]
			}
		},
		"/rpc/batch_update_phase_dates": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_project_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_updates",
						"required": true,
						"schema": {
							"type": "string",
							"format": "jsonb"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Batch update phase start and end dates for a project",
				"tags": ["(rpc) batch_update_phase_dates"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Batch update phase start and end dates for a project",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_updates": {
										"format": "jsonb"
									}
								},
								"required": ["p_project_id", "p_updates"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Batch update phase start and end dates for a project",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_updates": {
										"format": "jsonb"
									}
								},
								"required": ["p_project_id", "p_updates"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Batch update phase start and end dates for a project",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_updates": {
										"format": "jsonb"
									}
								},
								"required": ["p_project_id", "p_updates"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Batch update phase start and end dates for a project",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_updates": {
										"format": "jsonb"
									}
								},
								"required": ["p_project_id", "p_updates"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Batch update phase start and end dates for a project",
				"tags": ["(rpc) batch_update_phase_dates"]
			}
		},
		"/rpc/get_subscription_changes": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_timeframe",
						"required": false,
						"schema": {
							"type": "string",
							"format": "text"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_subscription_changes"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"p_timeframe": {
										"format": "text",
										"type": "string"
									}
								},
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"p_timeframe": {
										"format": "text",
										"type": "string"
									}
								},
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"p_timeframe": {
										"format": "text",
										"type": "string"
									}
								},
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"p_timeframe": {
										"format": "text",
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_subscription_changes"]
			}
		},
		"/rpc/fail_queue_job": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_job_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_error_message",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "p_retry",
						"required": false,
						"schema": {
							"type": "boolean",
							"format": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) fail_queue_job"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"p_error_message": {
										"format": "text",
										"type": "string"
									},
									"p_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_retry": {
										"format": "boolean",
										"type": "boolean"
									}
								},
								"required": ["p_job_id", "p_error_message"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"p_error_message": {
										"format": "text",
										"type": "string"
									},
									"p_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_retry": {
										"format": "boolean",
										"type": "boolean"
									}
								},
								"required": ["p_job_id", "p_error_message"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"p_error_message": {
										"format": "text",
										"type": "string"
									},
									"p_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_retry": {
										"format": "boolean",
										"type": "boolean"
									}
								},
								"required": ["p_job_id", "p_error_message"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"p_error_message": {
										"format": "text",
										"type": "string"
									},
									"p_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_retry": {
										"format": "boolean",
										"type": "boolean"
									}
								},
								"required": ["p_job_id", "p_error_message"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) fail_queue_job"]
			}
		},
		"/rpc/user_has_payment_issues": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) user_has_payment_issues"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args2"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) user_has_payment_issues"]
			}
		},
		"/rpc/complete_queue_job": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_job_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_result",
						"required": false,
						"schema": {
							"type": "string",
							"format": "jsonb"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) complete_queue_job"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"p_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_result": {
										"format": "jsonb"
									}
								},
								"required": ["p_job_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"p_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_result": {
										"format": "jsonb"
									}
								},
								"required": ["p_job_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"p_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_result": {
										"format": "jsonb"
									}
								},
								"required": ["p_job_id"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"p_job_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_result": {
										"format": "jsonb"
									}
								},
								"required": ["p_job_id"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) complete_queue_job"]
			}
		},
		"/rpc/cleanup_old_brief_jobs": {
			"get": {
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) cleanup_old_brief_jobs"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) cleanup_old_brief_jobs"]
			}
		},
		"/rpc/start_daily_brief_generation": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_brief_date",
						"required": false,
						"schema": {
							"type": "string",
							"format": "date"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Starts the generation process for a daily brief, managing status transitions and preventing duplicate generations",
				"tags": ["(rpc) start_daily_brief_generation"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Starts the generation process for a daily brief, managing status transitions and preventing duplicate generations",
								"properties": {
									"p_brief_date": {
										"format": "date",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Starts the generation process for a daily brief, managing status transitions and preventing duplicate generations",
								"properties": {
									"p_brief_date": {
										"format": "date",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Starts the generation process for a daily brief, managing status transitions and preventing duplicate generations",
								"properties": {
									"p_brief_date": {
										"format": "date",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Starts the generation process for a daily brief, managing status transitions and preventing duplicate generations",
								"properties": {
									"p_brief_date": {
										"format": "date",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Starts the generation process for a daily brief, managing status transitions and preventing duplicate generations",
				"tags": ["(rpc) start_daily_brief_generation"]
			}
		},
		"/rpc/claim_pending_jobs": {
			"get": {
				"description": "Parameters:\n- p_job_types: Array of job type names as text (e.g. ARRAY['generate_daily_brief', 'generate_phases'])\n- p_batch_size: Maximum number of jobs to claim in one call (default 1)\nReturns claimed jobs with status updated to 'processing'.\nExample usage: SELECT * FROM claim_pending_jobs(ARRAY['generate_daily_brief'], 1);",
				"parameters": [
					{
						"in": "query",
						"name": "p_job_types",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text[]"
						}
					},
					{
						"in": "query",
						"name": "p_batch_size",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Atomically claims pending jobs for processing. Uses FOR UPDATE SKIP LOCKED to prevent race conditions. ",
				"tags": ["(rpc) claim_pending_jobs"]
			},
			"post": {
				"description": "Parameters:\n- p_job_types: Array of job type names as text (e.g. ARRAY['generate_daily_brief', 'generate_phases'])\n- p_batch_size: Maximum number of jobs to claim in one call (default 1)\nReturns claimed jobs with status updated to 'processing'.\nExample usage: SELECT * FROM claim_pending_jobs(ARRAY['generate_daily_brief'], 1);",
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Atomically claims pending jobs for processing. Uses FOR UPDATE SKIP LOCKED to prevent race conditions. \nParameters:\n- p_job_types: Array of job type names as text (e.g. ARRAY['generate_daily_brief', 'generate_phases'])\n- p_batch_size: Maximum number of jobs to claim in one call (default 1)\nReturns claimed jobs with status updated to 'processing'.\nExample usage: SELECT * FROM claim_pending_jobs(ARRAY['generate_daily_brief'], 1);",
								"properties": {
									"p_batch_size": {
										"format": "integer",
										"type": "integer"
									},
									"p_job_types": {
										"format": "text[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": ["p_job_types"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Atomically claims pending jobs for processing. Uses FOR UPDATE SKIP LOCKED to prevent race conditions. \nParameters:\n- p_job_types: Array of job type names as text (e.g. ARRAY['generate_daily_brief', 'generate_phases'])\n- p_batch_size: Maximum number of jobs to claim in one call (default 1)\nReturns claimed jobs with status updated to 'processing'.\nExample usage: SELECT * FROM claim_pending_jobs(ARRAY['generate_daily_brief'], 1);",
								"properties": {
									"p_batch_size": {
										"format": "integer",
										"type": "integer"
									},
									"p_job_types": {
										"format": "text[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": ["p_job_types"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Atomically claims pending jobs for processing. Uses FOR UPDATE SKIP LOCKED to prevent race conditions. \nParameters:\n- p_job_types: Array of job type names as text (e.g. ARRAY['generate_daily_brief', 'generate_phases'])\n- p_batch_size: Maximum number of jobs to claim in one call (default 1)\nReturns claimed jobs with status updated to 'processing'.\nExample usage: SELECT * FROM claim_pending_jobs(ARRAY['generate_daily_brief'], 1);",
								"properties": {
									"p_batch_size": {
										"format": "integer",
										"type": "integer"
									},
									"p_job_types": {
										"format": "text[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": ["p_job_types"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Atomically claims pending jobs for processing. Uses FOR UPDATE SKIP LOCKED to prevent race conditions. \nParameters:\n- p_job_types: Array of job type names as text (e.g. ARRAY['generate_daily_brief', 'generate_phases'])\n- p_batch_size: Maximum number of jobs to claim in one call (default 1)\nReturns claimed jobs with status updated to 'processing'.\nExample usage: SELECT * FROM claim_pending_jobs(ARRAY['generate_daily_brief'], 1);",
								"properties": {
									"p_batch_size": {
										"format": "integer",
										"type": "integer"
									},
									"p_job_types": {
										"format": "text[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": ["p_job_types"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Atomically claims pending jobs for processing. Uses FOR UPDATE SKIP LOCKED to prevent race conditions. ",
				"tags": ["(rpc) claim_pending_jobs"]
			}
		},
		"/rpc/cancel_jobs_atomic": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_job_type",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "p_metadata_filter",
						"required": false,
						"schema": {
							"type": "string",
							"format": "jsonb"
						}
					},
					{
						"in": "query",
						"name": "p_allowed_statuses",
						"required": false,
						"schema": {
							"type": "string",
							"format": "text[]"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Atomically cancels multiple jobs matching criteria to prevent race conditions",
				"tags": ["(rpc) cancel_jobs_atomic"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Atomically cancels multiple jobs matching criteria to prevent race conditions",
								"properties": {
									"p_allowed_statuses": {
										"format": "text[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"p_job_type": {
										"format": "text",
										"type": "string"
									},
									"p_metadata_filter": {
										"format": "jsonb"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_job_type"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Atomically cancels multiple jobs matching criteria to prevent race conditions",
								"properties": {
									"p_allowed_statuses": {
										"format": "text[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"p_job_type": {
										"format": "text",
										"type": "string"
									},
									"p_metadata_filter": {
										"format": "jsonb"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_job_type"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Atomically cancels multiple jobs matching criteria to prevent race conditions",
								"properties": {
									"p_allowed_statuses": {
										"format": "text[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"p_job_type": {
										"format": "text",
										"type": "string"
									},
									"p_metadata_filter": {
										"format": "jsonb"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_job_type"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Atomically cancels multiple jobs matching criteria to prevent race conditions",
								"properties": {
									"p_allowed_statuses": {
										"format": "text[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"p_job_type": {
										"format": "text",
										"type": "string"
									},
									"p_metadata_filter": {
										"format": "jsonb"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id", "p_job_type"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Atomically cancels multiple jobs matching criteria to prevent race conditions",
				"tags": ["(rpc) cancel_jobs_atomic"]
			}
		},
		"/rpc/reset_stalled_jobs": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_stall_timeout",
						"required": false,
						"schema": {
							"type": "string",
							"format": "interval"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Resets stalled jobs that have been processing for too long, with proper enum type casting",
				"tags": ["(rpc) reset_stalled_jobs"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Resets stalled jobs that have been processing for too long, with proper enum type casting",
								"properties": {
									"p_stall_timeout": {
										"format": "interval",
										"type": "string"
									}
								},
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Resets stalled jobs that have been processing for too long, with proper enum type casting",
								"properties": {
									"p_stall_timeout": {
										"format": "interval",
										"type": "string"
									}
								},
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Resets stalled jobs that have been processing for too long, with proper enum type casting",
								"properties": {
									"p_stall_timeout": {
										"format": "interval",
										"type": "string"
									}
								},
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Resets stalled jobs that have been processing for too long, with proper enum type casting",
								"properties": {
									"p_stall_timeout": {
										"format": "interval",
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Resets stalled jobs that have been processing for too long, with proper enum type casting",
				"tags": ["(rpc) reset_stalled_jobs"]
			}
		},
		"/rpc/get_project_version": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "target_project_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "target_version",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_project_version"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"target_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"target_version": {
										"format": "integer",
										"type": "integer"
									}
								},
								"required": ["target_project_id", "target_version"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"target_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"target_version": {
										"format": "integer",
										"type": "integer"
									}
								},
								"required": ["target_project_id", "target_version"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"target_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"target_version": {
										"format": "integer",
										"type": "integer"
									}
								},
								"required": ["target_project_id", "target_version"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"target_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"target_version": {
										"format": "integer",
										"type": "integer"
									}
								},
								"required": ["target_project_id", "target_version"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_project_version"]
			}
		},
		"/rpc/get_user_subscription_status": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "user_uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_user_subscription_status"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args5"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_user_subscription_status"]
			}
		},
		"/rpc/refresh_system_metrics": {
			"get": {
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) refresh_system_metrics"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) refresh_system_metrics"]
			}
		},
		"/rpc/batch_update_phase_orders": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_project_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_updates",
						"required": true,
						"schema": {
							"type": "string",
							"format": "jsonb"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Batch update phase order positions for a project",
				"tags": ["(rpc) batch_update_phase_orders"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Batch update phase order positions for a project",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_updates": {
										"format": "jsonb"
									}
								},
								"required": ["p_project_id", "p_updates"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Batch update phase order positions for a project",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_updates": {
										"format": "jsonb"
									}
								},
								"required": ["p_project_id", "p_updates"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Batch update phase order positions for a project",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_updates": {
										"format": "jsonb"
									}
								},
								"required": ["p_project_id", "p_updates"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Batch update phase order positions for a project",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_updates": {
										"format": "jsonb"
									}
								},
								"required": ["p_project_id", "p_updates"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Batch update phase order positions for a project",
				"tags": ["(rpc) batch_update_phase_orders"]
			}
		},
		"/rpc/create_manual_project_version": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "target_project_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "created_by_user",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) create_manual_project_version"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"created_by_user": {
										"format": "uuid",
										"type": "string"
									},
									"target_project_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["target_project_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"created_by_user": {
										"format": "uuid",
										"type": "string"
									},
									"target_project_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["target_project_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"created_by_user": {
										"format": "uuid",
										"type": "string"
									},
									"target_project_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["target_project_id"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"created_by_user": {
										"format": "uuid",
										"type": "string"
									},
									"target_project_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["target_project_id"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) create_manual_project_version"]
			}
		},
		"/rpc/show_limit": {
			"get": {
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) show_limit"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) show_limit"]
			}
		},
		"/rpc/get_subscription_overview": {
			"get": {
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_subscription_overview"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_subscription_overview"]
			}
		},
		"/rpc/get_revenue_metrics": {
			"get": {
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_revenue_metrics"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) get_revenue_metrics"]
			}
		},
		"/rpc/cleanup_project_history": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "target_project_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) cleanup_project_history"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args4"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) cleanup_project_history"]
			}
		},
		"/rpc/cleanup_stale_brief_generations": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_user_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_timeout_minutes",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) cleanup_stale_brief_generations"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"p_timeout_minutes": {
										"format": "integer",
										"type": "integer"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"p_timeout_minutes": {
										"format": "integer",
										"type": "integer"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"p_timeout_minutes": {
										"format": "integer",
										"type": "integer"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"p_timeout_minutes": {
										"format": "integer",
										"type": "integer"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_user_id"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) cleanup_stale_brief_generations"]
			}
		},
		"/rpc/cleanup_duplicate_brain_dump_drafts": {
			"get": {
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) cleanup_duplicate_brain_dump_drafts"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) cleanup_duplicate_brain_dump_drafts"]
			}
		},
		"/rpc/search_similar_items": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "table_name",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					},
					{
						"in": "query",
						"name": "query_embedding",
						"required": true,
						"schema": {
							"type": "string",
							"format": "public.vector"
						}
					},
					{
						"in": "query",
						"name": "similarity_threshold",
						"required": false,
						"schema": {
							"type": "number",
							"format": "double precision"
						}
					},
					{
						"in": "query",
						"name": "match_count",
						"required": false,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) search_similar_items"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"match_count": {
										"format": "integer",
										"type": "integer"
									},
									"query_embedding": {
										"format": "public.vector",
										"type": "string"
									},
									"similarity_threshold": {
										"format": "double precision",
										"type": "number"
									},
									"table_name": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["table_name", "query_embedding"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"match_count": {
										"format": "integer",
										"type": "integer"
									},
									"query_embedding": {
										"format": "public.vector",
										"type": "string"
									},
									"similarity_threshold": {
										"format": "double precision",
										"type": "number"
									},
									"table_name": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["table_name", "query_embedding"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"match_count": {
										"format": "integer",
										"type": "integer"
									},
									"query_embedding": {
										"format": "public.vector",
										"type": "string"
									},
									"similarity_threshold": {
										"format": "double precision",
										"type": "number"
									},
									"table_name": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["table_name", "query_embedding"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"match_count": {
										"format": "integer",
										"type": "integer"
									},
									"query_embedding": {
										"format": "public.vector",
										"type": "string"
									},
									"similarity_threshold": {
										"format": "double precision",
										"type": "number"
									},
									"table_name": {
										"format": "text",
										"type": "string"
									}
								},
								"required": ["table_name", "query_embedding"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) search_similar_items"]
			}
		},
		"/rpc/approve_generated_phases": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_generation_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_phase_ids",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid[]"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Approves generated phases and creates actual phase records",
				"tags": ["(rpc) approve_generated_phases"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Approves generated phases and creates actual phase records",
								"properties": {
									"p_generation_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_phase_ids": {
										"format": "uuid[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": ["p_generation_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Approves generated phases and creates actual phase records",
								"properties": {
									"p_generation_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_phase_ids": {
										"format": "uuid[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": ["p_generation_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Approves generated phases and creates actual phase records",
								"properties": {
									"p_generation_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_phase_ids": {
										"format": "uuid[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": ["p_generation_id"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Approves generated phases and creates actual phase records",
								"properties": {
									"p_generation_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_phase_ids": {
										"format": "uuid[]",
										"items": {
											"type": "string"
										},
										"type": "array"
									}
								},
								"required": ["p_generation_id"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Approves generated phases and creates actual phase records",
				"tags": ["(rpc) approve_generated_phases"]
			}
		},
		"/rpc/get_project_phases_hierarchy": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_project_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_user_id",
						"required": false,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Optimized function to fetch all phases with their tasks and calendar events in a single query, eliminating complex nested JOINs",
				"tags": ["(rpc) get_project_phases_hierarchy"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Optimized function to fetch all phases with their tasks and calendar events in a single query, eliminating complex nested JOINs",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Optimized function to fetch all phases with their tasks and calendar events in a single query, eliminating complex nested JOINs",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Optimized function to fetch all phases with their tasks and calendar events in a single query, eliminating complex nested JOINs",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Optimized function to fetch all phases with their tasks and calendar events in a single query, eliminating complex nested JOINs",
								"properties": {
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									},
									"p_user_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Optimized function to fetch all phases with their tasks and calendar events in a single query, eliminating complex nested JOINs",
				"tags": ["(rpc) get_project_phases_hierarchy"]
			}
		},
		"/rpc/decrement_phase_order": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "p_project_id",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					},
					{
						"in": "query",
						"name": "p_order_threshold",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) decrement_phase_order"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"p_order_threshold": {
										"format": "integer",
										"type": "integer"
									},
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id", "p_order_threshold"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"p_order_threshold": {
										"format": "integer",
										"type": "integer"
									},
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id", "p_order_threshold"],
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"p_order_threshold": {
										"format": "integer",
										"type": "integer"
									},
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id", "p_order_threshold"],
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"p_order_threshold": {
										"format": "integer",
										"type": "integer"
									},
									"p_project_id": {
										"format": "uuid",
										"type": "string"
									}
								},
								"required": ["p_project_id", "p_order_threshold"],
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) decrement_phase_order"]
			}
		},
		"/rpc/brain_dump_cleanup_with_report": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "execute_delete",
						"required": false,
						"schema": {
							"type": "boolean",
							"format": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) brain_dump_cleanup_with_report"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"execute_delete": {
										"format": "boolean",
										"type": "boolean"
									}
								},
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"properties": {
									"execute_delete": {
										"format": "boolean",
										"type": "boolean"
									}
								},
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"properties": {
									"execute_delete": {
										"format": "boolean",
										"type": "boolean"
									}
								},
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"properties": {
									"execute_delete": {
										"format": "boolean",
										"type": "boolean"
									}
								},
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) brain_dump_cleanup_with_report"]
			}
		},
		"/rpc/has_active_subscription": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "user_uuid",
						"required": true,
						"schema": {
							"type": "string",
							"format": "uuid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) has_active_subscription"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args5"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) has_active_subscription"]
			}
		},
		"/rpc/brain_dump_cleanup_report": {
			"get": {
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) brain_dump_cleanup_report"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) brain_dump_cleanup_report"]
			}
		},
		"/rpc/unaccent": {
			"get": {
				"parameters": [
					{
						"in": "query",
						"name": "",
						"required": true,
						"schema": {
							"type": "string",
							"format": "text"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) unaccent"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/Args3"
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["(rpc) unaccent"]
			}
		},
		"/rpc/get_user_engagement_metrics": {
			"get": {
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Returns comprehensive user engagement metrics",
				"tags": ["(rpc) get_user_engagement_metrics"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Returns comprehensive user engagement metrics",
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Returns comprehensive user engagement metrics",
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Returns comprehensive user engagement metrics",
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Returns comprehensive user engagement metrics",
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Returns comprehensive user engagement metrics",
				"tags": ["(rpc) get_user_engagement_metrics"]
			}
		},
		"/rpc/normalize_queue_job_metadata": {
			"get": {
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Normalizes metadata fields to expected format for all active jobs",
				"tags": ["(rpc) normalize_queue_job_metadata"]
			},
			"post": {
				"parameters": [
					{
						"$ref": "#/components/parameters/preferParams"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"description": "Normalizes metadata fields to expected format for all active jobs",
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json;nulls=stripped": {
							"schema": {
								"description": "Normalizes metadata fields to expected format for all active jobs",
								"type": "object"
							}
						},
						"application/vnd.pgrst.object+json": {
							"schema": {
								"description": "Normalizes metadata fields to expected format for all active jobs",
								"type": "object"
							}
						},
						"text/csv": {
							"schema": {
								"description": "Normalizes metadata fields to expected format for all active jobs",
								"type": "object"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"summary": "Normalizes metadata fields to expected format for all active jobs",
				"tags": ["(rpc) normalize_queue_job_metadata"]
			}
		}
	},
	"externalDocs": {
		"description": "PostgREST Documentation",
		"url": "https://postgrest.org/en/v12/references/api.html"
	},
	"servers": [
		{
			"url": "https://iwifjtlebphefldmwbkh.supabase.co:443"
		}
	],
	"components": {
		"parameters": {
			"preferParams": {
				"name": "Prefer",
				"description": "Preference",
				"required": false,
				"in": "header",
				"schema": {
					"type": "string",
					"enum": ["params=single-object"]
				}
			},
			"preferReturn": {
				"name": "Prefer",
				"description": "Preference",
				"required": false,
				"in": "header",
				"schema": {
					"type": "string",
					"enum": ["return=representation", "return=minimal", "return=none"]
				}
			},
			"preferCount": {
				"name": "Prefer",
				"description": "Preference",
				"required": false,
				"in": "header",
				"schema": {
					"type": "string",
					"enum": ["count=none"]
				}
			},
			"preferPost": {
				"name": "Prefer",
				"description": "Preference",
				"required": false,
				"in": "header",
				"schema": {
					"type": "string",
					"enum": [
						"return=representation",
						"return=minimal",
						"return=none",
						"resolution=ignore-duplicates",
						"resolution=merge-duplicates"
					]
				}
			},
			"select": {
				"name": "select",
				"description": "Filtering Columns",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"on_conflict": {
				"name": "on_conflict",
				"description": "On Conflict",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"order": {
				"name": "order",
				"description": "Ordering",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"range": {
				"name": "Range",
				"description": "Limiting and Pagination",
				"required": false,
				"in": "header",
				"schema": {
					"type": "string"
				}
			},
			"rangeUnit": {
				"name": "Range-Unit",
				"description": "Limiting and Pagination",
				"required": false,
				"in": "header",
				"schema": {
					"type": "string",
					"default": "items"
				}
			},
			"offset": {
				"name": "offset",
				"description": "Limiting and Pagination",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"limit": {
				"name": "limit",
				"description": "Limiting and Pagination",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.phone_number": {
				"name": "phone_number",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.phone_verified": {
				"name": "phone_verified",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.phone_verified_at": {
				"name": "phone_verified_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.task_reminders": {
				"name": "task_reminders",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.daily_brief_sms": {
				"name": "daily_brief_sms",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.urgent_alerts": {
				"name": "urgent_alerts",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.quiet_hours_start": {
				"name": "quiet_hours_start",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.quiet_hours_end": {
				"name": "quiet_hours_end",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.timezone": {
				"name": "timezone",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.daily_sms_limit": {
				"name": "daily_sms_limit",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.daily_sms_count": {
				"name": "daily_sms_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.daily_count_reset_at": {
				"name": "daily_count_reset_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.opted_out": {
				"name": "opted_out",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.opted_out_at": {
				"name": "opted_out_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.opt_out_reason": {
				"name": "opt_out_reason",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_sms_preferences.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_logs.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_logs.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_logs.to_email": {
				"name": "to_email",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_logs.subject": {
				"name": "subject",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_logs.body": {
				"name": "body",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_logs.cc": {
				"name": "cc",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_logs.bcc": {
				"name": "bcc",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_logs.reply_to": {
				"name": "reply_to",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_logs.metadata": {
				"name": "metadata",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_logs.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_logs.error_message": {
				"name": "error_message",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_logs.sent_at": {
				"name": "sent_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_logs.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.brief_date": {
				"name": "brief_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.summary_content": {
				"name": "summary_content",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.project_brief_ids": {
				"name": "project_brief_ids",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.insights": {
				"name": "insights",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.priority_actions": {
				"name": "priority_actions",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.generation_status": {
				"name": "generation_status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.generation_started_at": {
				"name": "generation_started_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.generation_completed_at": {
				"name": "generation_completed_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.generation_progress": {
				"name": "generation_progress",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.generation_error": {
				"name": "generation_error",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.metadata": {
				"name": "metadata",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.daily_briefs.llm_analysis": {
				"name": "llm_analysis",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_migration_log.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_migration_log.task_id": {
				"name": "task_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_migration_log.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_migration_log.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_migration_log.migration_type": {
				"name": "migration_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_migration_log.old_recurrence_ends": {
				"name": "old_recurrence_ends",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_migration_log.new_recurrence_ends": {
				"name": "new_recurrence_ends",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_migration_log.old_calendar_event_id": {
				"name": "old_calendar_event_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_migration_log.new_calendar_event_id": {
				"name": "new_calendar_event_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_migration_log.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_migration_log.error_message": {
				"name": "error_message",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_migration_log.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_migration_log.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.scheduled_for": {
				"name": "scheduled_for",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.queue_job_id": {
				"name": "queue_job_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.processed_at": {
				"name": "processed_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.error_message": {
				"name": "error_message",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.metadata": {
				"name": "metadata",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.priority": {
				"name": "priority",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.attempts": {
				"name": "attempts",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.max_attempts": {
				"name": "max_attempts",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.started_at": {
				"name": "started_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.completed_at": {
				"name": "completed_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.result": {
				"name": "result",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs.job_type": {
				"name": "job_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_metrics.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_metrics.question_id": {
				"name": "question_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_metrics.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_metrics.presented_at": {
				"name": "presented_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_metrics.responded_at": {
				"name": "responded_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_metrics.response_quality": {
				"name": "response_quality",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_metrics.created_project": {
				"name": "created_project",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_metrics.created_tasks_count": {
				"name": "created_tasks_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_metrics.brain_dump_length": {
				"name": "brain_dump_length",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_metrics.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.subscription_id": {
				"name": "subscription_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.invoice_id": {
				"name": "invoice_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.amount_due": {
				"name": "amount_due",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.failed_at": {
				"name": "failed_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.retry_count": {
				"name": "retry_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.last_retry_at": {
				"name": "last_retry_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.dunning_stage": {
				"name": "dunning_stage",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.last_dunning_at": {
				"name": "last_dunning_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.resolved_at": {
				"name": "resolved_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.resolution_type": {
				"name": "resolution_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.failed_payments.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.event_title": {
				"name": "event_title",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.event_description": {
				"name": "event_description",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.event_type": {
				"name": "event_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.scheduled_at": {
				"name": "scheduled_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.duration_minutes": {
				"name": "duration_minutes",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.event_timezone": {
				"name": "event_timezone",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.meeting_link": {
				"name": "meeting_link",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.agenda": {
				"name": "agenda",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.meeting_notes": {
				"name": "meeting_notes",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.recording_url": {
				"name": "recording_url",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.event_status": {
				"name": "event_status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.max_attendees": {
				"name": "max_attendees",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.created_by": {
				"name": "created_by",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_events.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.member_id": {
				"name": "member_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.feedback_type": {
				"name": "feedback_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.feedback_title": {
				"name": "feedback_title",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.feedback_description": {
				"name": "feedback_description",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.feedback_priority": {
				"name": "feedback_priority",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.feature_area": {
				"name": "feature_area",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.feedback_tags": {
				"name": "feedback_tags",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.feedback_status": {
				"name": "feedback_status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.implemented_at": {
				"name": "implemented_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.declined_reason": {
				"name": "declined_reason",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.upvotes": {
				"name": "upvotes",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.founder_response": {
				"name": "founder_response",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.founder_responded_at": {
				"name": "founder_responded_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feedback.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.code": {
				"name": "code",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.stripe_coupon_id": {
				"name": "stripe_coupon_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.description": {
				"name": "description",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.discount_type": {
				"name": "discount_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.discount_value": {
				"name": "discount_value",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.duration": {
				"name": "duration",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.duration_in_months": {
				"name": "duration_in_months",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.max_redemptions": {
				"name": "max_redemptions",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.times_redeemed": {
				"name": "times_redeemed",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.valid_from": {
				"name": "valid_from",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.valid_until": {
				"name": "valid_until",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.metadata": {
				"name": "metadata",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.is_active": {
				"name": "is_active",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.discount_codes.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_instances.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_instances.task_id": {
				"name": "task_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_instances.instance_date": {
				"name": "instance_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_instances.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_instances.completed_at": {
				"name": "completed_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_instances.skipped": {
				"name": "skipped",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_instances.notes": {
				"name": "notes",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_instances.calendar_event_id": {
				"name": "calendar_event_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_instances.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_instances.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_instances.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.phone_number": {
				"name": "phone_number",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.message_content": {
				"name": "message_content",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.template_id": {
				"name": "template_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.template_vars": {
				"name": "template_vars",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.priority": {
				"name": "priority",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.scheduled_for": {
				"name": "scheduled_for",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.sent_at": {
				"name": "sent_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.delivered_at": {
				"name": "delivered_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.twilio_sid": {
				"name": "twilio_sid",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.twilio_status": {
				"name": "twilio_status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.twilio_error_code": {
				"name": "twilio_error_code",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.twilio_error_message": {
				"name": "twilio_error_message",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.attempt_count": {
				"name": "attempt_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.max_attempts": {
				"name": "max_attempts",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.next_retry_at": {
				"name": "next_retry_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.queue_job_id": {
				"name": "queue_job_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.task_id": {
				"name": "task_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.metadata": {
				"name": "metadata",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_messages.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_discounts.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_discounts.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_discounts.discount_code_id": {
				"name": "discount_code_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_discounts.stripe_subscription_id": {
				"name": "stripe_subscription_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_discounts.applied_at": {
				"name": "applied_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_discounts.expires_at": {
				"name": "expires_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.name": {
				"name": "name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.description": {
				"name": "description",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.template_content": {
				"name": "template_content",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.is_default": {
				"name": "is_default",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.variables": {
				"name": "variables",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.in_use": {
				"name": "in_use",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.metadata": {
				"name": "metadata",
				"description": "Additional metadata including generation parameters and usage statistics",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.generated_by": {
				"name": "generated_by",
				"description": "Indicates how the template was created: manual, ai, or system",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.generation_model": {
				"name": "generation_model",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_templates.context_snapshot": {
				"name": "context_snapshot",
				"description": "Snapshot of project context at the time of template generation",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.email_id": {
				"name": "email_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.recipient_email": {
				"name": "recipient_email",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.recipient_name": {
				"name": "recipient_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.recipient_type": {
				"name": "recipient_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.recipient_id": {
				"name": "recipient_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.sent_at": {
				"name": "sent_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.delivered_at": {
				"name": "delivered_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.opened_at": {
				"name": "opened_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.open_count": {
				"name": "open_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.last_opened_at": {
				"name": "last_opened_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.error_message": {
				"name": "error_message",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_recipients.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phase_tasks.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phase_tasks.generated_phase_id": {
				"name": "generated_phase_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phase_tasks.task_id": {
				"name": "task_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phase_tasks.confidence_score": {
				"name": "confidence_score",
				"description": "AI confidence score for the task-to-phase assignment suggestion (0-1)",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phase_tasks.reasoning": {
				"name": "reasoning",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phase_tasks.suggested_start_date": {
				"name": "suggested_start_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phase_tasks.suggested_due_date": {
				"name": "suggested_due_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phase_tasks.is_approved": {
				"name": "is_approved",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phase_tasks.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_template_usage.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_template_usage.template_id": {
				"name": "template_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_template_usage.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_template_usage.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_template_usage.used_at": {
				"name": "used_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_template_usage.brief_date": {
				"name": "brief_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_brief_template_usage.metadata": {
				"name": "metadata",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.calendar_id": {
				"name": "calendar_id",
				"description": "The Google Calendar ID returned when creating a calendar via Google Calendar API",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.calendar_name": {
				"name": "calendar_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.color_id": {
				"name": "color_id",
				"description": "Google Calendar color IDs: 1=Lavender (#7986cb), 2=Sage (#33b679), 3=Grape (#8e24aa), 4=Flamingo (#e67c73), 5=Banana (#f6bf26), 6=Tangerine (#f4511e), 7=Peacock (#039be5), 8=Graphite (#616161), 9=Blueberry (#3f51b5), 10=Basil (#0b8043), 11=Tomato (#d50000)",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.hex_color": {
				"name": "hex_color",
				"description": "Cached hex color value for UI display without needing to map from Google color ID",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.is_primary": {
				"name": "is_primary",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.sync_enabled": {
				"name": "sync_enabled",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.visibility": {
				"name": "visibility",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.last_synced_at": {
				"name": "last_synced_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.sync_status": {
				"name": "sync_status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_calendars.sync_error": {
				"name": "sync_error",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.llm_prompts.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.llm_prompts.title": {
				"name": "title",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.llm_prompts.prompt_text": {
				"name": "prompt_text",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.llm_prompts.purpose": {
				"name": "purpose",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.llm_prompts.last_used": {
				"name": "last_used",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_webhook_channels.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_webhook_channels.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_webhook_channels.channel_id": {
				"name": "channel_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_webhook_channels.resource_id": {
				"name": "resource_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_webhook_channels.calendar_id": {
				"name": "calendar_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_webhook_channels.expiration": {
				"name": "expiration",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_webhook_channels.sync_token": {
				"name": "sync_token",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_webhook_channels.webhook_token": {
				"name": "webhook_token",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_webhook_channels.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_webhook_channels.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.payment_methods.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.payment_methods.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.payment_methods.stripe_payment_method_id": {
				"name": "stripe_payment_method_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.payment_methods.type": {
				"name": "type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.payment_methods.card_brand": {
				"name": "card_brand",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.payment_methods.card_last4": {
				"name": "card_last4",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.payment_methods.is_default": {
				"name": "is_default",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.payment_methods.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.payment_methods.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.admin_analytics.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.admin_analytics.date": {
				"name": "date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.admin_analytics.metric_name": {
				"name": "metric_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.admin_analytics.metric_value": {
				"name": "metric_value",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.admin_analytics.metadata": {
				"name": "metadata",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.admin_analytics.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.title": {
				"name": "title",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.description": {
				"name": "description",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.dependencies": {
				"name": "dependencies",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.details": {
				"name": "details",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.recurrence_ends": {
				"name": "recurrence_ends",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.parent_task_id": {
				"name": "parent_task_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.completed_at": {
				"name": "completed_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.outdated": {
				"name": "outdated",
				"description": "Marks tasks as outdated/obsolete - excluded from synthesis and active task lists",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.duration_minutes": {
				"name": "duration_minutes",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.start_date": {
				"name": "start_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.task_steps": {
				"name": "task_steps",
				"description": "Markdown-formatted breakdown of task into actionable steps and prerequisites",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.priority": {
				"name": "priority",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.task_type": {
				"name": "task_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.recurrence_pattern": {
				"name": "recurrence_pattern",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.deleted_at": {
				"name": "deleted_at",
				"description": "Soft delete timestamp. When null, task is active. When set, task is \n  deleted.",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.tasks.recurrence_end_source": {
				"name": "recurrence_end_source",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_brief_preferences.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_brief_preferences.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_brief_preferences.frequency": {
				"name": "frequency",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_brief_preferences.day_of_week": {
				"name": "day_of_week",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_brief_preferences.time_of_day": {
				"name": "time_of_day",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_brief_preferences.timezone": {
				"name": "timezone",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_brief_preferences.is_active": {
				"name": "is_active",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_brief_preferences.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_brief_preferences.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_brief_preferences.email_daily_brief": {
				"name": "email_daily_brief",
				"description": "Whether the user has opted in to receive daily briefs via email",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.question": {
				"name": "question",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.context": {
				"name": "context",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.expected_outcome": {
				"name": "expected_outcome",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.category": {
				"name": "category",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.priority": {
				"name": "priority",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.answered_at": {
				"name": "answered_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.answer_brain_dump_id": {
				"name": "answer_brain_dump_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.source": {
				"name": "source",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.source_field": {
				"name": "source_field",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.triggers": {
				"name": "triggers",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.ask_after": {
				"name": "ask_after",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_questions.shown_to_user_count": {
				"name": "shown_to_user_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.webhook_events.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.webhook_events.event_id": {
				"name": "event_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.webhook_events.event_type": {
				"name": "event_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.webhook_events.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.webhook_events.payload": {
				"name": "payload",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.webhook_events.error_message": {
				"name": "error_message",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.webhook_events.attempts": {
				"name": "attempts",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.webhook_events.processed_at": {
				"name": "processed_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.webhook_events.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.email": {
				"name": "email",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.full_name": {
				"name": "full_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.job_title": {
				"name": "job_title",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.company_name": {
				"name": "company_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.why_interested": {
				"name": "why_interested",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.productivity_tools": {
				"name": "productivity_tools",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.biggest_challenge": {
				"name": "biggest_challenge",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.referral_source": {
				"name": "referral_source",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.signup_status": {
				"name": "signup_status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.approved_at": {
				"name": "approved_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.invited_by": {
				"name": "invited_by",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.wants_weekly_calls": {
				"name": "wants_weekly_calls",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.wants_community_access": {
				"name": "wants_community_access",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.user_timezone": {
				"name": "user_timezone",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.ip_address": {
				"name": "ip_address",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.user_agent": {
				"name": "user_agent",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_signups.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.task_id": {
				"name": "task_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.calendar_event_id": {
				"name": "calendar_event_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.calendar_id": {
				"name": "calendar_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.event_link": {
				"name": "event_link",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.last_synced_at": {
				"name": "last_synced_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.sync_error": {
				"name": "sync_error",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.event_start": {
				"name": "event_start",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.event_end": {
				"name": "event_end",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.event_title": {
				"name": "event_title",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.recurrence_master_id": {
				"name": "recurrence_master_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.recurrence_instance_date": {
				"name": "recurrence_instance_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.is_master_event": {
				"name": "is_master_event",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.sync_source": {
				"name": "sync_source",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.sync_version": {
				"name": "sync_version",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.recurrence_rule": {
				"name": "recurrence_rule",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.original_start_time": {
				"name": "original_start_time",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.is_exception": {
				"name": "is_exception",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.exception_type": {
				"name": "exception_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.series_update_scope": {
				"name": "series_update_scope",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.sync_status": {
				"name": "sync_status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.task_calendar_events.project_calendar_id": {
				"name": "project_calendar_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_event_attendance.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_event_attendance.event_id": {
				"name": "event_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_event_attendance.member_id": {
				"name": "member_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_event_attendance.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_event_attendance.rsvp_status": {
				"name": "rsvp_status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_event_attendance.rsvp_at": {
				"name": "rsvp_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_event_attendance.attended": {
				"name": "attended",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_event_attendance.joined_at": {
				"name": "joined_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_event_attendance.left_at": {
				"name": "left_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_event_attendance.event_rating": {
				"name": "event_rating",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_event_attendance.event_feedback": {
				"name": "event_feedback",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_event_attendance.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.background": {
				"name": "background",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.active_projects": {
				"name": "active_projects",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.goals_overview": {
				"name": "goals_overview",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.habits": {
				"name": "habits",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.workflows": {
				"name": "workflows",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.tools": {
				"name": "tools",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.schedule_preferences": {
				"name": "schedule_preferences",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.work_style": {
				"name": "work_style",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.blockers": {
				"name": "blockers",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.collaboration_needs": {
				"name": "collaboration_needs",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.skill_gaps": {
				"name": "skill_gaps",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.priorities": {
				"name": "priorities",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.onboarding_completed_at": {
				"name": "onboarding_completed_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.input_projects": {
				"name": "input_projects",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.input_work_style": {
				"name": "input_work_style",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.input_challenges": {
				"name": "input_challenges",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.input_help_focus": {
				"name": "input_help_focus",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.help_priorities": {
				"name": "help_priorities",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.focus_areas": {
				"name": "focus_areas",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.productivity_challenges": {
				"name": "productivity_challenges",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.preferred_work_hours": {
				"name": "preferred_work_hours",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.communication_style": {
				"name": "communication_style",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.organization_method": {
				"name": "organization_method",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.last_parsed_input_projects": {
				"name": "last_parsed_input_projects",
				"description": "Stores the last input that was parsed by LLM for projects category",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.last_parsed_input_work_style": {
				"name": "last_parsed_input_work_style",
				"description": "Stores the last input that was parsed by LLM for work_style category",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.last_parsed_input_challenges": {
				"name": "last_parsed_input_challenges",
				"description": "Stores the last input that was parsed by LLM for challenges category",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_context.last_parsed_input_help_focus": {
				"name": "last_parsed_input_help_focus",
				"description": "Stores the last input that was parsed by LLM for help_focus category",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.admin_users.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.admin_users.granted_by": {
				"name": "granted_by",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.admin_users.granted_at": {
				"name": "granted_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.admin_users.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.cron_logs.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.cron_logs.job_name": {
				"name": "job_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.cron_logs.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.cron_logs.error_message": {
				"name": "error_message",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.cron_logs.executed_at": {
				"name": "executed_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.cron_logs.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.trial_statistics.active_trials": {
				"name": "active_trials",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.trial_statistics.expired_trials": {
				"name": "expired_trials",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.trial_statistics.active_subscriptions": {
				"name": "active_subscriptions",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.trial_statistics.beta_users": {
				"name": "beta_users",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.trial_statistics.avg_trial_length_days": {
				"name": "avg_trial_length_days",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback_rate_limit.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback_rate_limit.ip_address": {
				"name": "ip_address",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback_rate_limit.submission_count": {
				"name": "submission_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback_rate_limit.first_submission": {
				"name": "first_submission",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback_rate_limit.last_submission": {
				"name": "last_submission",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback_rate_limit.is_blocked": {
				"name": "is_blocked",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.subscription_plans.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.subscription_plans.stripe_price_id": {
				"name": "stripe_price_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.subscription_plans.name": {
				"name": "name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.subscription_plans.description": {
				"name": "description",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.subscription_plans.price_cents": {
				"name": "price_cents",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.subscription_plans.currency": {
				"name": "currency",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.subscription_plans.billing_interval": {
				"name": "billing_interval",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.subscription_plans.interval_count": {
				"name": "interval_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.subscription_plans.features": {
				"name": "features",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.subscription_plans.is_active": {
				"name": "is_active",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.subscription_plans.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.subscription_plans.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs_stats.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs_stats.job_type": {
				"name": "job_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs_stats.count": {
				"name": "count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs_stats.oldest_job": {
				"name": "oldest_job",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs_stats.newest_job": {
				"name": "newest_job",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.queue_jobs_stats.avg_duration_seconds": {
				"name": "avg_duration_seconds",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dumps.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dumps.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dumps.title": {
				"name": "title",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dumps.content": {
				"name": "content",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dumps.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dumps.tags": {
				"name": "tags",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dumps.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dumps.ai_summary": {
				"name": "ai_summary",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dumps.ai_insights": {
				"name": "ai_insights",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dumps.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dumps.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dumps.metaData": {
				"name": "metaData",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dumps.parsed_results": {
				"name": "parsed_results",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback.category": {
				"name": "category",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback.rating": {
				"name": "rating",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback.feedback_text": {
				"name": "feedback_text",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback.user_email": {
				"name": "user_email",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback.user_ip": {
				"name": "user_ip",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback.user_agent": {
				"name": "user_agent",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.feedback.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.name": {
				"name": "name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.slug": {
				"name": "slug",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.description": {
				"name": "description",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.start_date": {
				"name": "start_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.end_date": {
				"name": "end_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.tags": {
				"name": "tags",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.context": {
				"name": "context",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.executive_summary": {
				"name": "executive_summary",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.calendar_color_id": {
				"name": "calendar_color_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.calendar_sync_enabled": {
				"name": "calendar_sync_enabled",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects.calendar_settings": {
				"name": "calendar_settings",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_themes.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_themes.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_themes.theme_name": {
				"name": "theme_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_themes.color_mappings": {
				"name": "color_mappings",
				"description": "JSON object with keys like high_priority, medium_priority, low_priority, completed, overdue mapped to Google color IDs",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_themes.is_default": {
				"name": "is_default",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_themes.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.calendar_themes.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.work_start_time": {
				"name": "work_start_time",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.work_end_time": {
				"name": "work_end_time",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.working_days": {
				"name": "working_days",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.default_task_duration_minutes": {
				"name": "default_task_duration_minutes",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.min_task_duration_minutes": {
				"name": "min_task_duration_minutes",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.max_task_duration_minutes": {
				"name": "max_task_duration_minutes",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.exclude_holidays": {
				"name": "exclude_holidays",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.holiday_country_code": {
				"name": "holiday_country_code",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.timezone": {
				"name": "timezone",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.prefer_morning_for_important_tasks": {
				"name": "prefer_morning_for_important_tasks",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_preferences.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dump_links.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dump_links.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dump_links.brain_dump_id": {
				"name": "brain_dump_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dump_links.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dump_links.note_id": {
				"name": "note_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.brain_dump_links.task_id": {
				"name": "task_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.invoices.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.invoices.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.invoices.stripe_invoice_id": {
				"name": "stripe_invoice_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.invoices.stripe_customer_id": {
				"name": "stripe_customer_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.invoices.subscription_id": {
				"name": "subscription_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.invoices.amount_paid": {
				"name": "amount_paid",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.invoices.amount_due": {
				"name": "amount_due",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.invoices.currency": {
				"name": "currency",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.invoices.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.invoices.invoice_pdf": {
				"name": "invoice_pdf",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.invoices.hosted_invoice_url": {
				"name": "hosted_invoice_url",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.invoices.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.visitors.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.visitors.visitor_id": {
				"name": "visitor_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.visitors.ip_address": {
				"name": "ip_address",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.visitors.user_agent": {
				"name": "user_agent",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.visitors.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.visitors.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.trial_reminders.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.trial_reminders.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.trial_reminders.reminder_type": {
				"name": "reminder_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.trial_reminders.sent_at": {
				"name": "sent_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.trial_reminders.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.generation_id": {
				"name": "generation_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.name": {
				"name": "name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.description": {
				"name": "description",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.objectives": {
				"name": "objectives",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.deliverables": {
				"name": "deliverables",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.success_criteria": {
				"name": "success_criteria",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.suggested_duration_days": {
				"name": "suggested_duration_days",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.suggested_start_date": {
				"name": "suggested_start_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.suggested_end_date": {
				"name": "suggested_end_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.suggested_order": {
				"name": "suggested_order",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.confidence_score": {
				"name": "confidence_score",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.is_approved": {
				"name": "is_approved",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.approved_at": {
				"name": "approved_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.approved_by": {
				"name": "approved_by",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.phase_id": {
				"name": "phase_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.metadata": {
				"name": "metadata",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.generated_phases.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_templates.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_templates.template": {
				"name": "template",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_templates.category": {
				"name": "category",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_templates.conditions": {
				"name": "conditions",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_templates.variables": {
				"name": "variables",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_templates.effectiveness_score": {
				"name": "effectiveness_score",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_templates.usage_count": {
				"name": "usage_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_templates.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.question_templates.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phases.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phases.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phases.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phases.name": {
				"name": "name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phases.description": {
				"name": "description",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phases.start_date": {
				"name": "start_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phases.end_date": {
				"name": "end_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phases.order": {
				"name": "order",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phases.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phases.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phases.scheduling_method": {
				"name": "scheduling_method",
				"description": "Method used for task scheduling: phases_only, schedule_in_phases, or calendar_optimized",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.signup_id": {
				"name": "signup_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.full_name": {
				"name": "full_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.email": {
				"name": "email",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.job_title": {
				"name": "job_title",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.company_name": {
				"name": "company_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.joined_at": {
				"name": "joined_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.beta_tier": {
				"name": "beta_tier",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.access_level": {
				"name": "access_level",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.last_active_at": {
				"name": "last_active_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.total_feedback_submitted": {
				"name": "total_feedback_submitted",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.total_features_requested": {
				"name": "total_features_requested",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.total_calls_attended": {
				"name": "total_calls_attended",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.has_lifetime_pricing": {
				"name": "has_lifetime_pricing",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.discount_percentage": {
				"name": "discount_percentage",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.early_access_features": {
				"name": "early_access_features",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.wants_weekly_calls": {
				"name": "wants_weekly_calls",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.wants_community_access": {
				"name": "wants_community_access",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.wants_feature_updates": {
				"name": "wants_feature_updates",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.user_timezone": {
				"name": "user_timezone",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.is_active": {
				"name": "is_active",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.deactivated_at": {
				"name": "deactivated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.deactivation_reason": {
				"name": "deactivation_reason",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_members.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_daily_briefs.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_daily_briefs.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_daily_briefs.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_daily_briefs.template_id": {
				"name": "template_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_daily_briefs.brief_content": {
				"name": "brief_content",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_daily_briefs.brief_date": {
				"name": "brief_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_daily_briefs.metadata": {
				"name": "metadata",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_daily_briefs.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_daily_briefs.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_daily_briefs.generation_status": {
				"name": "generation_status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_daily_briefs.generation_started_at": {
				"name": "generation_started_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_daily_briefs.generation_completed_at": {
				"name": "generation_completed_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_daily_briefs.generation_error": {
				"name": "generation_error",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.notes.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.notes.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.notes.title": {
				"name": "title",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.notes.content": {
				"name": "content",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.notes.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.notes.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.notes.tags": {
				"name": "tags",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.notes.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.notes.category": {
				"name": "category",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.generation_status": {
				"name": "generation_status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.generation_started_at": {
				"name": "generation_started_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.generation_completed_at": {
				"name": "generation_completed_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.generation_error": {
				"name": "generation_error",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.generation_progress": {
				"name": "generation_progress",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.regenerated": {
				"name": "regenerated",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.template_used": {
				"name": "template_used",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.phases_data": {
				"name": "phases_data",
				"description": "JSON array containing all generated phases data",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.phases_count": {
				"name": "phases_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.total_duration_days": {
				"name": "total_duration_days",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.metadata": {
				"name": "metadata",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_phases_generation.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_task_schedules.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_task_schedules.phase_id": {
				"name": "phase_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_task_schedules.task_id": {
				"name": "task_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_task_schedules.proposed_start": {
				"name": "proposed_start",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_task_schedules.proposed_end": {
				"name": "proposed_end",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_task_schedules.is_confirmed": {
				"name": "is_confirmed",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_task_schedules.scheduling_notes": {
				"name": "scheduling_notes",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_task_schedules.conflict_warnings": {
				"name": "conflict_warnings",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_task_schedules.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_task_schedules.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_summary.task_id": {
				"name": "task_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_summary.title": {
				"name": "title",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_summary.recurrence_pattern": {
				"name": "recurrence_pattern",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_summary.recurrence_ends": {
				"name": "recurrence_ends",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_summary.start_date": {
				"name": "start_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_summary.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_summary.total_instances": {
				"name": "total_instances",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_summary.completed_instances": {
				"name": "completed_instances",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_summary.skipped_instances": {
				"name": "skipped_instances",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_summary.exception_count": {
				"name": "exception_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_summary.next_occurrence": {
				"name": "next_occurrence",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.recurring_task_summary.last_completed_at": {
				"name": "last_completed_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.email_id": {
				"name": "email_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.filename": {
				"name": "filename",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.original_filename": {
				"name": "original_filename",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.file_size": {
				"name": "file_size",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.content_type": {
				"name": "content_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.storage_path": {
				"name": "storage_path",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.storage_bucket": {
				"name": "storage_bucket",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.is_image": {
				"name": "is_image",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.image_width": {
				"name": "image_width",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.image_height": {
				"name": "image_height",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.optimized_versions": {
				"name": "optimized_versions",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.created_by": {
				"name": "created_by",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.is_inline": {
				"name": "is_inline",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_attachments.cid": {
				"name": "cid",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.subject": {
				"name": "subject",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.content": {
				"name": "content",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.from_email": {
				"name": "from_email",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.from_name": {
				"name": "from_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.scheduled_at": {
				"name": "scheduled_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.sent_at": {
				"name": "sent_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.tracking_enabled": {
				"name": "tracking_enabled",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.tracking_id": {
				"name": "tracking_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.created_by": {
				"name": "created_by",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.category": {
				"name": "category",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.emails.template_data": {
				"name": "template_data",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feature_votes.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feature_votes.feedback_id": {
				"name": "feedback_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feature_votes.member_id": {
				"name": "member_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feature_votes.vote_type": {
				"name": "vote_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.beta_feature_votes.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_tracking_events.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_tracking_events.email_id": {
				"name": "email_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_tracking_events.recipient_id": {
				"name": "recipient_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_tracking_events.event_type": {
				"name": "event_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_tracking_events.event_data": {
				"name": "event_data",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_tracking_events.user_agent": {
				"name": "user_agent",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_tracking_events.ip_address": {
				"name": "ip_address",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_tracking_events.timestamp": {
				"name": "timestamp",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_tracking_events.clicked_url": {
				"name": "clicked_url",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.email_tracking_events.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_synthesis.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_synthesis.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_synthesis.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_synthesis.synthesis_content": {
				"name": "synthesis_content",
				"description": "JSON structure: {\r\n  \"consolidatedTasks\": [...],\r\n  \"suggestedTasks\": [...],\r\n  \"duplicatesFound\": [...],\r\n  \"nextSteps\": [...],\r\n  \"outdatedTaskIds\": [...]\r\n}",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_synthesis.insights": {
				"name": "insights",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_synthesis.generation_model": {
				"name": "generation_model",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_synthesis.generation_duration_ms": {
				"name": "generation_duration_ms",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_synthesis.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_synthesis.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_synthesis.operations_count": {
				"name": "operations_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_synthesis.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_synthesis.applied_at": {
				"name": "applied_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.email": {
				"name": "email",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.name": {
				"name": "name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.bio": {
				"name": "bio",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.is_admin": {
				"name": "is_admin",
				"description": "Whether the user has admin privileges",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.completed_onboarding": {
				"name": "completed_onboarding",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.last_visit": {
				"name": "last_visit",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.stripe_customer_id": {
				"name": "stripe_customer_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.subscription_status": {
				"name": "subscription_status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.subscription_plan_id": {
				"name": "subscription_plan_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.trial_ends_at": {
				"name": "trial_ends_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.access_restricted": {
				"name": "access_restricted",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.access_restricted_at": {
				"name": "access_restricted_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.users.is_beta_user": {
				"name": "is_beta_user",
				"description": "Indicates if the user is part of the beta program",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.api_keys.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.api_keys.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.api_keys.service_name": {
				"name": "service_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.api_keys.api_key": {
				"name": "api_key",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.api_keys.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.template_key": {
				"name": "template_key",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.name": {
				"name": "name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.description": {
				"name": "description",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.message_template": {
				"name": "message_template",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.template_vars": {
				"name": "template_vars",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.required_vars": {
				"name": "required_vars",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.max_length": {
				"name": "max_length",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.is_active": {
				"name": "is_active",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.usage_count": {
				"name": "usage_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.last_used_at": {
				"name": "last_used_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.created_by": {
				"name": "created_by",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.sms_templates.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_summary.error_type": {
				"name": "error_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_summary.severity": {
				"name": "severity",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_summary.error_count": {
				"name": "error_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_summary.affected_users": {
				"name": "affected_users",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_summary.affected_projects": {
				"name": "affected_projects",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_summary.first_occurrence": {
				"name": "first_occurrence",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_summary.last_occurrence": {
				"name": "last_occurrence",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_summary.resolved_count": {
				"name": "resolved_count",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_summary.avg_response_time_ms": {
				"name": "avg_response_time_ms",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.stripe_customer_id": {
				"name": "stripe_customer_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.stripe_subscription_id": {
				"name": "stripe_subscription_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.stripe_price_id": {
				"name": "stripe_price_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.plan_id": {
				"name": "plan_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.status": {
				"name": "status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.current_period_start": {
				"name": "current_period_start",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.current_period_end": {
				"name": "current_period_end",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.cancel_at": {
				"name": "cancel_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.canceled_at": {
				"name": "canceled_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.trial_start": {
				"name": "trial_start",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.trial_end": {
				"name": "trial_end",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.metadata": {
				"name": "metadata",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.customer_subscriptions.cancellation_reason": {
				"name": "cancellation_reason",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_activity_logs.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_activity_logs.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_activity_logs.activity_type": {
				"name": "activity_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_activity_logs.activity_data": {
				"name": "activity_data",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_activity_logs.ip_address": {
				"name": "ip_address",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_activity_logs.user_agent": {
				"name": "user_agent",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_activity_logs.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_kept_versions.history_id": {
				"name": "history_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_kept_versions.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_kept_versions.version_number": {
				"name": "version_number",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_kept_versions.is_first_version": {
				"name": "is_first_version",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_kept_versions.project_data": {
				"name": "project_data",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_kept_versions.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_kept_versions.created_by": {
				"name": "created_by",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_kept_versions.current_name": {
				"name": "current_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_kept_versions.version_name": {
				"name": "version_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_kept_versions.version_status": {
				"name": "version_status",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.project_kept_versions.version_type": {
				"name": "version_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.error_type": {
				"name": "error_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.error_code": {
				"name": "error_code",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.error_message": {
				"name": "error_message",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.error_stack": {
				"name": "error_stack",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.severity": {
				"name": "severity",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.brain_dump_id": {
				"name": "brain_dump_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.endpoint": {
				"name": "endpoint",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.http_method": {
				"name": "http_method",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.request_id": {
				"name": "request_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.user_agent": {
				"name": "user_agent",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.ip_address": {
				"name": "ip_address",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.llm_provider": {
				"name": "llm_provider",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.llm_model": {
				"name": "llm_model",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.prompt_tokens": {
				"name": "prompt_tokens",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.completion_tokens": {
				"name": "completion_tokens",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.total_tokens": {
				"name": "total_tokens",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.response_time_ms": {
				"name": "response_time_ms",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.llm_temperature": {
				"name": "llm_temperature",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.llm_max_tokens": {
				"name": "llm_max_tokens",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.operation_type": {
				"name": "operation_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.table_name": {
				"name": "table_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.record_id": {
				"name": "record_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.operation_payload": {
				"name": "operation_payload",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.metadata": {
				"name": "metadata",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.environment": {
				"name": "environment",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.app_version": {
				"name": "app_version",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.browser_info": {
				"name": "browser_info",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.resolved": {
				"name": "resolved",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.resolved_at": {
				"name": "resolved_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.resolved_by": {
				"name": "resolved_by",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.resolution_notes": {
				"name": "resolution_notes",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.error_logs.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_notifications.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_notifications.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_notifications.type": {
				"name": "type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_notifications.title": {
				"name": "title",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_notifications.message": {
				"name": "message",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_notifications.priority": {
				"name": "priority",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_notifications.action_url": {
				"name": "action_url",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_notifications.read_at": {
				"name": "read_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_notifications.dismissed_at": {
				"name": "dismissed_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_notifications.expires_at": {
				"name": "expires_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_notifications.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.system_metrics.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.system_metrics.metric_name": {
				"name": "metric_name",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.system_metrics.metric_value": {
				"name": "metric_value",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.system_metrics.metric_unit": {
				"name": "metric_unit",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.system_metrics.metric_description": {
				"name": "metric_description",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.system_metrics.recorded_at": {
				"name": "recorded_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_tasks.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_tasks.phase_id": {
				"name": "phase_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_tasks.task_id": {
				"name": "task_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_tasks.suggested_start_date": {
				"name": "suggested_start_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_tasks.assignment_reason": {
				"name": "assignment_reason",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.phase_tasks.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects_history.history_id": {
				"name": "history_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects_history.project_id": {
				"name": "project_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects_history.version_number": {
				"name": "version_number",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects_history.is_first_version": {
				"name": "is_first_version",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects_history.project_data": {
				"name": "project_data",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects_history.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.projects_history.created_by": {
				"name": "created_by",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_tokens.id": {
				"name": "id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_tokens.user_id": {
				"name": "user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_tokens.access_token": {
				"name": "access_token",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_tokens.refresh_token": {
				"name": "refresh_token",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_tokens.expiry_date": {
				"name": "expiry_date",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_tokens.token_type": {
				"name": "token_type",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_tokens.scope": {
				"name": "scope",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_tokens.created_at": {
				"name": "created_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_tokens.updated_at": {
				"name": "updated_at",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_tokens.google_email": {
				"name": "google_email",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			},
			"rowFilter.user_calendar_tokens.google_user_id": {
				"name": "google_user_id",
				"required": false,
				"in": "query",
				"schema": {
					"type": "string"
				}
			}
		},
		"requestBodies": {
			"project_synthesis": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/project_synthesis"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/project_synthesis"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/project_synthesis"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/project_synthesis"
						}
					}
				},
				"description": "project_synthesis"
			},
			"notes": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/notes"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/notes"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/notes"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/notes"
						}
					}
				},
				"description": "notes"
			},
			"beta_event_attendance": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/beta_event_attendance"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/beta_event_attendance"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/beta_event_attendance"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/beta_event_attendance"
						}
					}
				},
				"description": "beta_event_attendance"
			},
			"project_questions": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/project_questions"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/project_questions"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/project_questions"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/project_questions"
						}
					}
				},
				"description": "project_questions"
			},
			"recurring_task_migration_log": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/recurring_task_migration_log"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/recurring_task_migration_log"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/recurring_task_migration_log"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/recurring_task_migration_log"
						}
					}
				},
				"description": "recurring_task_migration_log"
			},
			"failed_payments": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/failed_payments"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/failed_payments"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/failed_payments"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/failed_payments"
						}
					}
				},
				"description": "failed_payments"
			},
			"cron_logs": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/cron_logs"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/cron_logs"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/cron_logs"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/cron_logs"
						}
					}
				},
				"description": "cron_logs"
			},
			"user_discounts": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/user_discounts"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/user_discounts"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/user_discounts"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/user_discounts"
						}
					}
				},
				"description": "user_discounts"
			},
			"discount_codes": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/discount_codes"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/discount_codes"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/discount_codes"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/discount_codes"
						}
					}
				},
				"description": "discount_codes"
			},
			"project_daily_briefs": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/project_daily_briefs"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/project_daily_briefs"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/project_daily_briefs"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/project_daily_briefs"
						}
					}
				},
				"description": "project_daily_briefs"
			},
			"phases": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/phases"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/phases"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/phases"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/phases"
						}
					}
				},
				"description": "phases"
			},
			"phase_task_schedules": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/phase_task_schedules"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/phase_task_schedules"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/phase_task_schedules"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/phase_task_schedules"
						}
					}
				},
				"description": "phase_task_schedules"
			},
			"email_tracking_events": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/email_tracking_events"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/email_tracking_events"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/email_tracking_events"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/email_tracking_events"
						}
					}
				},
				"description": "email_tracking_events"
			},
			"visitors": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/visitors"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/visitors"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/visitors"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/visitors"
						}
					}
				},
				"description": "visitors"
			},
			"email_recipients": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/email_recipients"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/email_recipients"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/email_recipients"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/email_recipients"
						}
					}
				},
				"description": "email_recipients"
			},
			"beta_feedback": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/beta_feedback"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/beta_feedback"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/beta_feedback"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/beta_feedback"
						}
					}
				},
				"description": "beta_feedback"
			},
			"generated_phases": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/generated_phases"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/generated_phases"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/generated_phases"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/generated_phases"
						}
					}
				},
				"description": "generated_phases"
			},
			"brain_dumps": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/brain_dumps"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/brain_dumps"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/brain_dumps"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/brain_dumps"
						}
					}
				},
				"description": "brain_dumps"
			},
			"tasks": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/tasks"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/tasks"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/tasks"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/tasks"
						}
					}
				},
				"description": "tasks"
			},
			"beta_members": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/beta_members"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/beta_members"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/beta_members"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/beta_members"
						}
					}
				},
				"description": "beta_members"
			},
			"daily_briefs": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/daily_briefs"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/daily_briefs"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/daily_briefs"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/daily_briefs"
						}
					}
				},
				"description": "daily_briefs"
			},
			"feedback_rate_limit": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/feedback_rate_limit"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/feedback_rate_limit"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/feedback_rate_limit"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/feedback_rate_limit"
						}
					}
				},
				"description": "feedback_rate_limit"
			},
			"projects": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/projects"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/projects"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/projects"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/projects"
						}
					}
				},
				"description": "projects"
			},
			"email_logs": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/email_logs"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/email_logs"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/email_logs"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/email_logs"
						}
					}
				},
				"description": "email_logs"
			},
			"phase_tasks": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/phase_tasks"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/phase_tasks"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/phase_tasks"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/phase_tasks"
						}
					}
				},
				"description": "phase_tasks"
			},
			"user_activity_logs": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/user_activity_logs"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/user_activity_logs"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/user_activity_logs"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/user_activity_logs"
						}
					}
				},
				"description": "user_activity_logs"
			},
			"admin_analytics": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/admin_analytics"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/admin_analytics"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/admin_analytics"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/admin_analytics"
						}
					}
				},
				"description": "admin_analytics"
			},
			"users": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/users"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/users"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/users"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/users"
						}
					}
				},
				"description": "users"
			},
			"subscription_plans": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/subscription_plans"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/subscription_plans"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/subscription_plans"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/subscription_plans"
						}
					}
				},
				"description": "subscription_plans"
			},
			"feedback": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/feedback"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/feedback"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/feedback"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/feedback"
						}
					}
				},
				"description": "feedback"
			},
			"project_brief_templates": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/project_brief_templates"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/project_brief_templates"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/project_brief_templates"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/project_brief_templates"
						}
					}
				},
				"description": "project_brief_templates"
			},
			"beta_events": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/beta_events"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/beta_events"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/beta_events"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/beta_events"
						}
					}
				},
				"description": "beta_events"
			},
			"calendar_themes": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/calendar_themes"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/calendar_themes"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/calendar_themes"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/calendar_themes"
						}
					}
				},
				"description": "calendar_themes"
			},
			"projects_history": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/projects_history"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/projects_history"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/projects_history"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/projects_history"
						}
					}
				},
				"description": "projects_history"
			},
			"trial_reminders": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/trial_reminders"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/trial_reminders"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/trial_reminders"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/trial_reminders"
						}
					}
				},
				"description": "trial_reminders"
			},
			"beta_feature_votes": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/beta_feature_votes"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/beta_feature_votes"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/beta_feature_votes"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/beta_feature_votes"
						}
					}
				},
				"description": "beta_feature_votes"
			},
			"user_sms_preferences": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/user_sms_preferences"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/user_sms_preferences"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/user_sms_preferences"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/user_sms_preferences"
						}
					}
				},
				"description": "user_sms_preferences"
			},
			"queue_jobs": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/queue_jobs"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/queue_jobs"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/queue_jobs"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/queue_jobs"
						}
					}
				},
				"description": "queue_jobs"
			},
			"question_metrics": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/question_metrics"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/question_metrics"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/question_metrics"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/question_metrics"
						}
					}
				},
				"description": "question_metrics"
			},
			"recurring_task_instances": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/recurring_task_instances"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/recurring_task_instances"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/recurring_task_instances"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/recurring_task_instances"
						}
					}
				},
				"description": "recurring_task_instances"
			},
			"sms_messages": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/sms_messages"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/sms_messages"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/sms_messages"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/sms_messages"
						}
					}
				},
				"description": "sms_messages"
			},
			"generated_phase_tasks": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/generated_phase_tasks"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/generated_phase_tasks"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/generated_phase_tasks"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/generated_phase_tasks"
						}
					}
				},
				"description": "generated_phase_tasks"
			},
			"project_brief_template_usage": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/project_brief_template_usage"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/project_brief_template_usage"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/project_brief_template_usage"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/project_brief_template_usage"
						}
					}
				},
				"description": "project_brief_template_usage"
			},
			"project_calendars": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/project_calendars"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/project_calendars"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/project_calendars"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/project_calendars"
						}
					}
				},
				"description": "project_calendars"
			},
			"llm_prompts": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/llm_prompts"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/llm_prompts"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/llm_prompts"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/llm_prompts"
						}
					}
				},
				"description": "llm_prompts"
			},
			"calendar_webhook_channels": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/calendar_webhook_channels"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/calendar_webhook_channels"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/calendar_webhook_channels"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/calendar_webhook_channels"
						}
					}
				},
				"description": "calendar_webhook_channels"
			},
			"payment_methods": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/payment_methods"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/payment_methods"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/payment_methods"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/payment_methods"
						}
					}
				},
				"description": "payment_methods"
			},
			"user_brief_preferences": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/user_brief_preferences"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/user_brief_preferences"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/user_brief_preferences"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/user_brief_preferences"
						}
					}
				},
				"description": "user_brief_preferences"
			},
			"webhook_events": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/webhook_events"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/webhook_events"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/webhook_events"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/webhook_events"
						}
					}
				},
				"description": "webhook_events"
			},
			"beta_signups": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/beta_signups"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/beta_signups"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/beta_signups"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/beta_signups"
						}
					}
				},
				"description": "beta_signups"
			},
			"task_calendar_events": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/task_calendar_events"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/task_calendar_events"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/task_calendar_events"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/task_calendar_events"
						}
					}
				},
				"description": "task_calendar_events"
			},
			"user_context": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/user_context"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/user_context"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/user_context"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/user_context"
						}
					}
				},
				"description": "user_context"
			},
			"admin_users": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/admin_users"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/admin_users"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/admin_users"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/admin_users"
						}
					}
				},
				"description": "admin_users"
			},
			"user_calendar_preferences": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/user_calendar_preferences"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/user_calendar_preferences"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/user_calendar_preferences"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/user_calendar_preferences"
						}
					}
				},
				"description": "user_calendar_preferences"
			},
			"brain_dump_links": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/brain_dump_links"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/brain_dump_links"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/brain_dump_links"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/brain_dump_links"
						}
					}
				},
				"description": "brain_dump_links"
			},
			"invoices": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/invoices"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/invoices"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/invoices"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/invoices"
						}
					}
				},
				"description": "invoices"
			},
			"question_templates": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/question_templates"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/question_templates"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/question_templates"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/question_templates"
						}
					}
				},
				"description": "question_templates"
			},
			"project_phases_generation": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/project_phases_generation"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/project_phases_generation"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/project_phases_generation"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/project_phases_generation"
						}
					}
				},
				"description": "project_phases_generation"
			},
			"email_attachments": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/email_attachments"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/email_attachments"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/email_attachments"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/email_attachments"
						}
					}
				},
				"description": "email_attachments"
			},
			"emails": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/emails"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/emails"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/emails"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/emails"
						}
					}
				},
				"description": "emails"
			},
			"api_keys": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/api_keys"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/api_keys"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/api_keys"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/api_keys"
						}
					}
				},
				"description": "api_keys"
			},
			"sms_templates": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/sms_templates"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/sms_templates"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/sms_templates"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/sms_templates"
						}
					}
				},
				"description": "sms_templates"
			},
			"customer_subscriptions": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/customer_subscriptions"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/customer_subscriptions"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/customer_subscriptions"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/customer_subscriptions"
						}
					}
				},
				"description": "customer_subscriptions"
			},
			"error_logs": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/error_logs"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/error_logs"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/error_logs"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/error_logs"
						}
					}
				},
				"description": "error_logs"
			},
			"user_notifications": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/user_notifications"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/user_notifications"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/user_notifications"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/user_notifications"
						}
					}
				},
				"description": "user_notifications"
			},
			"system_metrics": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/system_metrics"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/system_metrics"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/system_metrics"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/system_metrics"
						}
					}
				},
				"description": "system_metrics"
			},
			"user_calendar_tokens": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/user_calendar_tokens"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"$ref": "#/components/schemas/user_calendar_tokens"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"$ref": "#/components/schemas/user_calendar_tokens"
						}
					},
					"text/csv": {
						"schema": {
							"$ref": "#/components/schemas/user_calendar_tokens"
						}
					}
				},
				"description": "user_calendar_tokens"
			},
			"Args": {
				"content": {
					"application/json": {
						"schema": {
							"type": "object"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"type": "object"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"type": "object"
						}
					},
					"text/csv": {
						"schema": {
							"type": "object"
						}
					}
				},
				"required": true
			},
			"Args2": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"p_user_id": {
									"format": "uuid",
									"type": "string"
								}
							},
							"required": ["p_user_id"],
							"type": "object"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"properties": {
								"p_user_id": {
									"format": "uuid",
									"type": "string"
								}
							},
							"required": ["p_user_id"],
							"type": "object"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"properties": {
								"p_user_id": {
									"format": "uuid",
									"type": "string"
								}
							},
							"required": ["p_user_id"],
							"type": "object"
						}
					},
					"text/csv": {
						"schema": {
							"properties": {
								"p_user_id": {
									"format": "uuid",
									"type": "string"
								}
							},
							"required": ["p_user_id"],
							"type": "object"
						}
					}
				},
				"required": true
			},
			"Args3": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"": {
									"format": "text",
									"type": "string"
								}
							},
							"required": [""],
							"type": "object"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"properties": {
								"": {
									"format": "text",
									"type": "string"
								}
							},
							"required": [""],
							"type": "object"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"properties": {
								"": {
									"format": "text",
									"type": "string"
								}
							},
							"required": [""],
							"type": "object"
						}
					},
					"text/csv": {
						"schema": {
							"properties": {
								"": {
									"format": "text",
									"type": "string"
								}
							},
							"required": [""],
							"type": "object"
						}
					}
				},
				"required": true
			},
			"Args4": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"target_project_id": {
									"format": "uuid",
									"type": "string"
								}
							},
							"required": ["target_project_id"],
							"type": "object"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"properties": {
								"target_project_id": {
									"format": "uuid",
									"type": "string"
								}
							},
							"required": ["target_project_id"],
							"type": "object"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"properties": {
								"target_project_id": {
									"format": "uuid",
									"type": "string"
								}
							},
							"required": ["target_project_id"],
							"type": "object"
						}
					},
					"text/csv": {
						"schema": {
							"properties": {
								"target_project_id": {
									"format": "uuid",
									"type": "string"
								}
							},
							"required": ["target_project_id"],
							"type": "object"
						}
					}
				},
				"required": true
			},
			"Args5": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"user_uuid": {
									"format": "uuid",
									"type": "string"
								}
							},
							"required": ["user_uuid"],
							"type": "object"
						}
					},
					"application/vnd.pgrst.object+json;nulls=stripped": {
						"schema": {
							"properties": {
								"user_uuid": {
									"format": "uuid",
									"type": "string"
								}
							},
							"required": ["user_uuid"],
							"type": "object"
						}
					},
					"application/vnd.pgrst.object+json": {
						"schema": {
							"properties": {
								"user_uuid": {
									"format": "uuid",
									"type": "string"
								}
							},
							"required": ["user_uuid"],
							"type": "object"
						}
					},
					"text/csv": {
						"schema": {
							"properties": {
								"user_uuid": {
									"format": "uuid",
									"type": "string"
								}
							},
							"required": ["user_uuid"],
							"type": "object"
						}
					}
				},
				"required": true
			}
		},
		"schemas": {
			"user_sms_preferences": {
				"required": ["id", "user_id"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"phone_number": {
						"format": "text",
						"type": "string"
					},
					"phone_verified": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"phone_verified_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"task_reminders": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"daily_brief_sms": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"urgent_alerts": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"quiet_hours_start": {
						"default": "21:00:00",
						"format": "time without time zone",
						"type": "string"
					},
					"quiet_hours_end": {
						"default": "08:00:00",
						"format": "time without time zone",
						"type": "string"
					},
					"timezone": {
						"default": "America/Los_Angeles",
						"format": "text",
						"type": "string"
					},
					"daily_sms_limit": {
						"default": 10,
						"format": "integer",
						"type": "integer"
					},
					"daily_sms_count": {
						"default": 0,
						"format": "integer",
						"type": "integer"
					},
					"daily_count_reset_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"opted_out": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"opted_out_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"opt_out_reason": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"email_logs": {
				"required": ["id", "to_email", "subject", "body", "status", "created_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"to_email": {
						"format": "text",
						"type": "string"
					},
					"subject": {
						"format": "text",
						"type": "string"
					},
					"body": {
						"format": "text",
						"type": "string"
					},
					"cc": {
						"format": "text[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"bcc": {
						"format": "text[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"reply_to": {
						"format": "text",
						"type": "string"
					},
					"metadata": {
						"format": "jsonb"
					},
					"status": {
						"format": "text",
						"type": "string"
					},
					"error_message": {
						"format": "text",
						"type": "string"
					},
					"sent_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"daily_briefs": {
				"required": [
					"id",
					"user_id",
					"brief_date",
					"summary_content",
					"created_at",
					"updated_at",
					"generation_status"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"brief_date": {
						"format": "date",
						"type": "string"
					},
					"summary_content": {
						"format": "text",
						"type": "string"
					},
					"project_brief_ids": {
						"format": "uuid[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"insights": {
						"format": "text",
						"type": "string"
					},
					"priority_actions": {
						"format": "text[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"generation_status": {
						"default": "not_started",
						"format": "text",
						"type": "string"
					},
					"generation_started_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"generation_completed_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"generation_progress": {
						"format": "jsonb"
					},
					"generation_error": {
						"format": "text",
						"type": "string"
					},
					"metadata": {
						"format": "jsonb"
					},
					"llm_analysis": {
						"format": "text",
						"type": "string"
					}
				},
				"type": "object"
			},
			"recurring_task_migration_log": {
				"required": ["id", "task_id", "user_id", "migration_type", "status"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"task_id": {
						"description": "Note:\nThis is a Foreign Key to `tasks.id`.<fk table='tasks' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"migration_type": {
						"format": "text",
						"type": "string"
					},
					"old_recurrence_ends": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"new_recurrence_ends": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"old_calendar_event_id": {
						"format": "text",
						"type": "string"
					},
					"new_calendar_event_id": {
						"format": "text",
						"type": "string"
					},
					"status": {
						"default": "pending",
						"format": "text",
						"type": "string"
					},
					"error_message": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"queue_jobs": {
				"required": [
					"id",
					"user_id",
					"scheduled_for",
					"queue_job_id",
					"created_at",
					"status",
					"job_type"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"scheduled_for": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"queue_job_id": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"processed_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"error_message": {
						"format": "text",
						"type": "string"
					},
					"metadata": {
						"format": "jsonb"
					},
					"priority": {
						"default": 10,
						"format": "integer",
						"type": "integer"
					},
					"attempts": {
						"default": 0,
						"format": "integer",
						"type": "integer"
					},
					"max_attempts": {
						"default": 3,
						"format": "integer",
						"type": "integer"
					},
					"started_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"completed_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"result": {
						"format": "jsonb"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"status": {
						"enum": [
							"pending",
							"processing",
							"completed",
							"failed",
							"cancelled",
							"retrying"
						],
						"format": "public.queue_status",
						"type": "string"
					},
					"job_type": {
						"enum": [
							"generate_daily_brief",
							"generate_phases",
							"sync_calendar",
							"process_brain_dump",
							"send_email",
							"update_recurring_tasks",
							"cleanup_old_data",
							"onboarding_analysis",
							"other",
							"send_sms"
						],
						"format": "public.queue_type",
						"type": "string"
					}
				},
				"type": "object"
			},
			"question_metrics": {
				"required": ["id", "presented_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"question_id": {
						"description": "Note:\nThis is a Foreign Key to `project_questions.id`.<fk table='project_questions' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"presented_at": {
						"format": "timestamp without time zone",
						"type": "string"
					},
					"responded_at": {
						"format": "timestamp without time zone",
						"type": "string"
					},
					"response_quality": {
						"format": "text",
						"type": "string"
					},
					"created_project": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"created_tasks_count": {
						"default": 0,
						"format": "integer",
						"type": "integer"
					},
					"brain_dump_length": {
						"format": "integer",
						"type": "integer"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp without time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"failed_payments": {
				"required": ["id", "user_id", "invoice_id", "amount_due", "failed_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"subscription_id": {
						"description": "Note:\nThis is a Foreign Key to `customer_subscriptions.id`.<fk table='customer_subscriptions' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"invoice_id": {
						"format": "text",
						"type": "string"
					},
					"amount_due": {
						"format": "integer",
						"type": "integer"
					},
					"failed_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"retry_count": {
						"default": 1,
						"format": "integer",
						"type": "integer"
					},
					"last_retry_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"dunning_stage": {
						"format": "text",
						"type": "string"
					},
					"last_dunning_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"resolved_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"resolution_type": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"beta_events": {
				"required": ["id", "event_title", "scheduled_at", "created_at", "updated_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"event_title": {
						"format": "text",
						"type": "string"
					},
					"event_description": {
						"format": "text",
						"type": "string"
					},
					"event_type": {
						"format": "text",
						"type": "string"
					},
					"scheduled_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"duration_minutes": {
						"default": 60,
						"format": "integer",
						"type": "integer"
					},
					"event_timezone": {
						"default": "America/New_York",
						"format": "text",
						"type": "string"
					},
					"meeting_link": {
						"format": "text",
						"type": "string"
					},
					"agenda": {
						"format": "text",
						"type": "string"
					},
					"meeting_notes": {
						"format": "text",
						"type": "string"
					},
					"recording_url": {
						"format": "text",
						"type": "string"
					},
					"event_status": {
						"default": "scheduled",
						"format": "text",
						"type": "string"
					},
					"max_attendees": {
						"format": "integer",
						"type": "integer"
					},
					"created_by": {
						"format": "uuid",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"beta_feedback": {
				"required": ["id", "feedback_title", "feedback_description"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"member_id": {
						"description": "Note:\nThis is a Foreign Key to `beta_members.id`.<fk table='beta_members' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"feedback_type": {
						"format": "text",
						"type": "string"
					},
					"feedback_title": {
						"format": "text",
						"type": "string"
					},
					"feedback_description": {
						"format": "text",
						"type": "string"
					},
					"feedback_priority": {
						"default": "medium",
						"format": "text",
						"type": "string"
					},
					"feature_area": {
						"format": "text",
						"type": "string"
					},
					"feedback_tags": {
						"format": "text[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"feedback_status": {
						"default": "new",
						"format": "text",
						"type": "string"
					},
					"implemented_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"declined_reason": {
						"format": "text",
						"type": "string"
					},
					"upvotes": {
						"default": 0,
						"format": "integer",
						"type": "integer"
					},
					"founder_response": {
						"format": "text",
						"type": "string"
					},
					"founder_responded_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"discount_codes": {
				"required": ["id", "code", "discount_type", "discount_value", "duration"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"code": {
						"format": "text",
						"type": "string"
					},
					"stripe_coupon_id": {
						"format": "text",
						"type": "string"
					},
					"description": {
						"format": "text",
						"type": "string"
					},
					"discount_type": {
						"format": "text",
						"type": "string"
					},
					"discount_value": {
						"format": "integer",
						"type": "integer"
					},
					"duration": {
						"format": "text",
						"type": "string"
					},
					"duration_in_months": {
						"format": "integer",
						"type": "integer"
					},
					"max_redemptions": {
						"format": "integer",
						"type": "integer"
					},
					"times_redeemed": {
						"default": 0,
						"format": "integer",
						"type": "integer"
					},
					"valid_from": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"valid_until": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"metadata": {
						"format": "jsonb"
					},
					"is_active": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"recurring_task_instances": {
				"description": "Tracks individual instances of recurring tasks",
				"required": ["id", "task_id", "instance_date"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"task_id": {
						"description": "Note:\nThis is a Foreign Key to `tasks.id`.<fk table='tasks' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"instance_date": {
						"format": "date",
						"type": "string"
					},
					"status": {
						"default": "scheduled",
						"format": "text",
						"type": "string"
					},
					"completed_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"skipped": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"notes": {
						"format": "text",
						"type": "string"
					},
					"calendar_event_id": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					}
				},
				"type": "object"
			},
			"sms_messages": {
				"required": [
					"id",
					"user_id",
					"phone_number",
					"message_content",
					"status",
					"priority"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"phone_number": {
						"format": "text",
						"type": "string"
					},
					"message_content": {
						"format": "text",
						"type": "string"
					},
					"template_id": {
						"description": "Note:\nThis is a Foreign Key to `sms_templates.id`.<fk table='sms_templates' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"template_vars": {
						"format": "jsonb"
					},
					"status": {
						"default": "pending",
						"enum": [
							"pending",
							"queued",
							"sending",
							"sent",
							"delivered",
							"failed",
							"undelivered",
							"scheduled",
							"cancelled"
						],
						"format": "public.sms_status",
						"type": "string"
					},
					"priority": {
						"default": "normal",
						"enum": ["low", "normal", "high", "urgent"],
						"format": "public.sms_priority",
						"type": "string"
					},
					"scheduled_for": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"sent_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"delivered_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"twilio_sid": {
						"format": "text",
						"type": "string"
					},
					"twilio_status": {
						"format": "text",
						"type": "string"
					},
					"twilio_error_code": {
						"format": "integer",
						"type": "integer"
					},
					"twilio_error_message": {
						"format": "text",
						"type": "string"
					},
					"attempt_count": {
						"default": 0,
						"format": "integer",
						"type": "integer"
					},
					"max_attempts": {
						"default": 3,
						"format": "integer",
						"type": "integer"
					},
					"next_retry_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"queue_job_id": {
						"description": "Note:\nThis is a Foreign Key to `queue_jobs.id`.<fk table='queue_jobs' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"task_id": {
						"description": "Note:\nThis is a Foreign Key to `tasks.id`.<fk table='tasks' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"metadata": {
						"format": "jsonb"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"user_discounts": {
				"required": ["id", "user_id", "discount_code_id"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"discount_code_id": {
						"description": "Note:\nThis is a Foreign Key to `discount_codes.id`.<fk table='discount_codes' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"stripe_subscription_id": {
						"format": "text",
						"type": "string"
					},
					"applied_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"expires_at": {
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"project_brief_templates": {
				"description": "Stores custom AI-generated and user-created templates for project daily briefs",
				"required": ["id", "name", "template_content"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"name": {
						"format": "text",
						"type": "string"
					},
					"description": {
						"format": "text",
						"type": "string"
					},
					"template_content": {
						"format": "text",
						"type": "string"
					},
					"is_default": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"variables": {
						"format": "json"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp without time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp without time zone",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"in_use": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"metadata": {
						"description": "Additional metadata including generation parameters and usage statistics",
						"format": "jsonb"
					},
					"generated_by": {
						"default": "manual",
						"description": "Indicates how the template was created: manual, ai, or system",
						"format": "text",
						"type": "string"
					},
					"generation_model": {
						"format": "text",
						"type": "string"
					},
					"context_snapshot": {
						"description": "Snapshot of project context at the time of template generation",
						"format": "jsonb"
					}
				},
				"type": "object"
			},
			"email_recipients": {
				"required": ["id", "email_id", "recipient_email", "recipient_type", "status"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"email_id": {
						"description": "Note:\nThis is a Foreign Key to `emails.id`.<fk table='emails' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"recipient_email": {
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"recipient_name": {
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"recipient_type": {
						"default": "beta_user",
						"format": "character varying",
						"maxLength": 50,
						"type": "string"
					},
					"recipient_id": {
						"format": "uuid",
						"type": "string"
					},
					"status": {
						"default": "pending",
						"format": "character varying",
						"maxLength": 50,
						"type": "string"
					},
					"sent_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"delivered_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"opened_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"open_count": {
						"default": 0,
						"format": "integer",
						"type": "integer"
					},
					"last_opened_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"error_message": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"generated_phase_tasks": {
				"description": "Stores AI suggestions for which tasks belong to which phases",
				"required": ["id", "generated_phase_id", "task_id", "created_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"generated_phase_id": {
						"description": "Note:\nThis is a Foreign Key to `generated_phases.id`.<fk table='generated_phases' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"task_id": {
						"description": "Note:\nThis is a Foreign Key to `tasks.id`.<fk table='tasks' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"confidence_score": {
						"description": "AI confidence score for the task-to-phase assignment suggestion (0-1)",
						"format": "numeric",
						"type": "number"
					},
					"reasoning": {
						"format": "text",
						"type": "string"
					},
					"suggested_start_date": {
						"format": "date",
						"type": "string"
					},
					"suggested_due_date": {
						"format": "date",
						"type": "string"
					},
					"is_approved": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"project_brief_template_usage": {
				"required": ["id", "brief_date"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"template_id": {
						"description": "Note:\nThis is a Foreign Key to `project_brief_templates.id`.<fk table='project_brief_templates' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"used_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp without time zone",
						"type": "string"
					},
					"brief_date": {
						"format": "date",
						"type": "string"
					},
					"metadata": {
						"format": "jsonb"
					}
				},
				"type": "object"
			},
			"project_calendars": {
				"description": "Maps projects to dedicated Google Calendars for better organization and visual separation",
				"required": ["id", "project_id", "user_id", "calendar_id", "calendar_name"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"calendar_id": {
						"description": "The Google Calendar ID returned when creating a calendar via Google Calendar API",
						"format": "text",
						"type": "string"
					},
					"calendar_name": {
						"format": "text",
						"type": "string"
					},
					"color_id": {
						"default": "7",
						"description": "Google Calendar color IDs: 1=Lavender (#7986cb), 2=Sage (#33b679), 3=Grape (#8e24aa), 4=Flamingo (#e67c73), 5=Banana (#f6bf26), 6=Tangerine (#f4511e), 7=Peacock (#039be5), 8=Graphite (#616161), 9=Blueberry (#3f51b5), 10=Basil (#0b8043), 11=Tomato (#d50000)",
						"format": "text",
						"type": "string"
					},
					"hex_color": {
						"description": "Cached hex color value for UI display without needing to map from Google color ID",
						"format": "text",
						"type": "string"
					},
					"is_primary": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"sync_enabled": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"visibility": {
						"default": "private",
						"enum": ["public", "private", "shared"],
						"format": "public.calendar_visibility",
						"type": "string"
					},
					"created_at": {
						"default": "timezone('utc'::text, now())",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "timezone('utc'::text, now())",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"last_synced_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"sync_status": {
						"default": "active",
						"enum": ["active", "paused", "error"],
						"format": "public.calendar_sync_status",
						"type": "string"
					},
					"sync_error": {
						"format": "text",
						"type": "string"
					}
				},
				"type": "object"
			},
			"llm_prompts": {
				"required": ["id"],
				"properties": {
					"id": {
						"default": "extensions.uuid_generate_v4()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"title": {
						"format": "text",
						"type": "string"
					},
					"prompt_text": {
						"format": "text",
						"type": "string"
					},
					"purpose": {
						"format": "text",
						"type": "string"
					},
					"last_used": {
						"format": "timestamp without time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"calendar_webhook_channels": {
				"required": [
					"id",
					"user_id",
					"channel_id",
					"expiration",
					"webhook_token",
					"created_at",
					"updated_at"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"channel_id": {
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"resource_id": {
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"calendar_id": {
						"default": "primary",
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"expiration": {
						"format": "bigint",
						"type": "integer"
					},
					"sync_token": {
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"webhook_token": {
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"payment_methods": {
				"required": ["id", "user_id", "stripe_payment_method_id", "type"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"stripe_payment_method_id": {
						"format": "text",
						"type": "string"
					},
					"type": {
						"format": "text",
						"type": "string"
					},
					"card_brand": {
						"format": "text",
						"type": "string"
					},
					"card_last4": {
						"format": "text",
						"type": "string"
					},
					"is_default": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"admin_analytics": {
				"description": "Daily aggregated analytics for admin dashboard",
				"required": ["id", "date", "metric_name", "metric_value", "created_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"date": {
						"format": "date",
						"type": "string"
					},
					"metric_name": {
						"format": "text",
						"type": "string"
					},
					"metric_value": {
						"format": "numeric",
						"type": "number"
					},
					"metadata": {
						"format": "json"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"tasks": {
				"required": [
					"id",
					"title",
					"created_at",
					"updated_at",
					"user_id",
					"status",
					"priority",
					"task_type"
				],
				"properties": {
					"id": {
						"default": "extensions.uuid_generate_v4()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"title": {
						"format": "text",
						"type": "string"
					},
					"description": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"dependencies": {
						"format": "uuid[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"details": {
						"format": "text",
						"type": "string"
					},
					"recurrence_ends": {
						"format": "date",
						"type": "string"
					},
					"parent_task_id": {
						"description": "Note:\nThis is a Foreign Key to `tasks.id`.<fk table='tasks' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"completed_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"outdated": {
						"default": false,
						"description": "Marks tasks as outdated/obsolete - excluded from synthesis and active task lists",
						"format": "boolean",
						"type": "boolean"
					},
					"duration_minutes": {
						"default": 30,
						"format": "integer",
						"type": "integer"
					},
					"start_date": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"task_steps": {
						"description": "Markdown-formatted breakdown of task into actionable steps and prerequisites",
						"format": "text",
						"type": "string"
					},
					"status": {
						"default": "backlog",
						"enum": ["backlog", "in_progress", "done", "blocked"],
						"format": "public.task_status",
						"type": "string"
					},
					"priority": {
						"default": "medium",
						"enum": ["low", "medium", "high"],
						"format": "public.priority_level",
						"type": "string"
					},
					"task_type": {
						"default": "one_off",
						"enum": ["one_off", "recurring"],
						"format": "public.task_type",
						"type": "string"
					},
					"recurrence_pattern": {
						"enum": [
							"daily",
							"weekdays",
							"weekly",
							"biweekly",
							"monthly",
							"quarterly",
							"yearly"
						],
						"format": "public.recurrence_pattern",
						"type": "string"
					},
					"deleted_at": {
						"description": "Soft delete timestamp. When null, task is active. When set, task is \n  deleted.",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"recurrence_end_source": {
						"enum": [
							"indefinite",
							"project_inherited",
							"user_specified",
							"user_action",
							"project_end",
							"max_occurrences",
							"end_date",
							"task_deleted"
						],
						"format": "public.recurrence_end_reason",
						"type": "string"
					}
				},
				"type": "object"
			},
			"user_brief_preferences": {
				"required": ["id", "user_id", "created_at", "updated_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"frequency": {
						"default": "daily",
						"format": "text",
						"type": "string"
					},
					"day_of_week": {
						"format": "integer",
						"type": "integer"
					},
					"time_of_day": {
						"default": "09:00:00",
						"format": "time without time zone",
						"type": "string"
					},
					"timezone": {
						"default": "UTC",
						"format": "text",
						"type": "string"
					},
					"is_active": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"email_daily_brief": {
						"default": false,
						"description": "Whether the user has opted in to receive daily briefs via email",
						"format": "boolean",
						"type": "boolean"
					}
				},
				"type": "object"
			},
			"project_questions": {
				"required": [
					"id",
					"user_id",
					"question",
					"created_at",
					"updated_at",
					"shown_to_user_count"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"question": {
						"format": "text",
						"type": "string"
					},
					"context": {
						"format": "text",
						"type": "string"
					},
					"expected_outcome": {
						"format": "text",
						"type": "string"
					},
					"category": {
						"format": "text",
						"type": "string"
					},
					"priority": {
						"default": "medium",
						"format": "text",
						"type": "string"
					},
					"status": {
						"default": "active",
						"format": "text",
						"type": "string"
					},
					"answered_at": {
						"format": "timestamp without time zone",
						"type": "string"
					},
					"answer_brain_dump_id": {
						"description": "Note:\nThis is a Foreign Key to `brain_dumps.id`.<fk table='brain_dumps' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"source": {
						"format": "text",
						"type": "string"
					},
					"source_field": {
						"format": "text",
						"type": "string"
					},
					"triggers": {
						"format": "jsonb"
					},
					"ask_after": {
						"format": "date",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"shown_to_user_count": {
						"format": "numeric",
						"type": "number"
					}
				},
				"type": "object"
			},
			"webhook_events": {
				"required": ["id", "event_id", "event_type", "status"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"event_id": {
						"format": "text",
						"type": "string"
					},
					"event_type": {
						"format": "text",
						"type": "string"
					},
					"status": {
						"default": "pending",
						"format": "text",
						"type": "string"
					},
					"payload": {
						"format": "jsonb"
					},
					"error_message": {
						"format": "text",
						"type": "string"
					},
					"attempts": {
						"default": 1,
						"format": "integer",
						"type": "integer"
					},
					"processed_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"beta_signups": {
				"required": ["id", "email", "full_name", "created_at", "updated_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"email": {
						"format": "text",
						"type": "string"
					},
					"full_name": {
						"format": "text",
						"type": "string"
					},
					"job_title": {
						"format": "text",
						"type": "string"
					},
					"company_name": {
						"format": "text",
						"type": "string"
					},
					"why_interested": {
						"format": "text",
						"type": "string"
					},
					"productivity_tools": {
						"format": "text[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"biggest_challenge": {
						"format": "text",
						"type": "string"
					},
					"referral_source": {
						"format": "text",
						"type": "string"
					},
					"signup_status": {
						"default": "pending",
						"format": "text",
						"type": "string"
					},
					"approved_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"invited_by": {
						"format": "uuid",
						"type": "string"
					},
					"wants_weekly_calls": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"wants_community_access": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"user_timezone": {
						"default": "America/New_York",
						"format": "text",
						"type": "string"
					},
					"ip_address": {
						"format": "inet",
						"type": "string"
					},
					"user_agent": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"task_calendar_events": {
				"description": "Enhanced with recurrence support for better Google Calendar integration",
				"required": [
					"id",
					"user_id",
					"task_id",
					"calendar_event_id",
					"calendar_id",
					"sync_status"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"task_id": {
						"description": "Note:\nThis is a Foreign Key to `tasks.id`.<fk table='tasks' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"calendar_event_id": {
						"format": "text",
						"type": "string"
					},
					"calendar_id": {
						"format": "text",
						"type": "string"
					},
					"event_link": {
						"format": "text",
						"type": "string"
					},
					"last_synced_at": {
						"format": "timestamp without time zone",
						"type": "string"
					},
					"sync_error": {
						"format": "text",
						"type": "string"
					},
					"event_start": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"event_end": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"event_title": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"recurrence_master_id": {
						"description": "Note:\nThis is a Foreign Key to `task_calendar_events.id`.<fk table='task_calendar_events' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"recurrence_instance_date": {
						"format": "date",
						"type": "string"
					},
					"is_master_event": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"sync_source": {
						"default": "app",
						"format": "character varying",
						"maxLength": 50,
						"type": "string"
					},
					"sync_version": {
						"default": 1,
						"format": "integer",
						"type": "integer"
					},
					"recurrence_rule": {
						"format": "text",
						"type": "string"
					},
					"original_start_time": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"is_exception": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"exception_type": {
						"format": "text",
						"type": "string"
					},
					"series_update_scope": {
						"format": "text",
						"type": "string"
					},
					"sync_status": {
						"default": "pending",
						"enum": ["pending", "synced", "failed", "cancelled"],
						"format": "public.sync_status",
						"type": "string"
					},
					"project_calendar_id": {
						"description": "Note:\nThis is a Foreign Key to `project_calendars.id`.<fk table='project_calendars' column='id'/>",
						"format": "uuid",
						"type": "string"
					}
				},
				"type": "object"
			},
			"beta_event_attendance": {
				"required": ["id", "created_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"event_id": {
						"description": "Note:\nThis is a Foreign Key to `beta_events.id`.<fk table='beta_events' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"member_id": {
						"description": "Note:\nThis is a Foreign Key to `beta_members.id`.<fk table='beta_members' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"rsvp_status": {
						"default": "pending",
						"format": "text",
						"type": "string"
					},
					"rsvp_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"attended": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"joined_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"left_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"event_rating": {
						"format": "integer",
						"type": "integer"
					},
					"event_feedback": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"user_context": {
				"required": ["id", "user_id", "created_at", "updated_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"background": {
						"format": "text",
						"type": "string"
					},
					"active_projects": {
						"format": "text",
						"type": "string"
					},
					"goals_overview": {
						"format": "text",
						"type": "string"
					},
					"habits": {
						"format": "text",
						"type": "string"
					},
					"workflows": {
						"format": "text",
						"type": "string"
					},
					"tools": {
						"format": "text",
						"type": "string"
					},
					"schedule_preferences": {
						"format": "text",
						"type": "string"
					},
					"work_style": {
						"format": "text",
						"type": "string"
					},
					"blockers": {
						"format": "text",
						"type": "string"
					},
					"collaboration_needs": {
						"format": "text",
						"type": "string"
					},
					"skill_gaps": {
						"format": "text",
						"type": "string"
					},
					"priorities": {
						"format": "text",
						"type": "string"
					},
					"onboarding_completed_at": {
						"format": "timestamp without time zone",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"input_projects": {
						"format": "text",
						"type": "string"
					},
					"input_work_style": {
						"format": "text",
						"type": "string"
					},
					"input_challenges": {
						"format": "text",
						"type": "string"
					},
					"input_help_focus": {
						"format": "text",
						"type": "string"
					},
					"help_priorities": {
						"format": "text",
						"type": "string"
					},
					"focus_areas": {
						"format": "text",
						"type": "string"
					},
					"productivity_challenges": {
						"format": "text",
						"type": "string"
					},
					"preferred_work_hours": {
						"format": "text",
						"type": "string"
					},
					"communication_style": {
						"format": "text",
						"type": "string"
					},
					"organization_method": {
						"format": "text",
						"type": "string"
					},
					"last_parsed_input_projects": {
						"description": "Stores the last input that was parsed by LLM for projects category",
						"format": "text",
						"type": "string"
					},
					"last_parsed_input_work_style": {
						"description": "Stores the last input that was parsed by LLM for work_style category",
						"format": "text",
						"type": "string"
					},
					"last_parsed_input_challenges": {
						"description": "Stores the last input that was parsed by LLM for challenges category",
						"format": "text",
						"type": "string"
					},
					"last_parsed_input_help_focus": {
						"description": "Stores the last input that was parsed by LLM for help_focus category",
						"format": "text",
						"type": "string"
					}
				},
				"type": "object"
			},
			"admin_users": {
				"required": ["user_id", "created_at"],
				"properties": {
					"user_id": {
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"granted_by": {
						"format": "uuid",
						"type": "string"
					},
					"granted_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"cron_logs": {
				"required": ["id", "job_name", "status", "executed_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"job_name": {
						"format": "text",
						"type": "string"
					},
					"status": {
						"format": "text",
						"type": "string"
					},
					"error_message": {
						"format": "text",
						"type": "string"
					},
					"executed_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"trial_statistics": {
				"properties": {
					"active_trials": {
						"format": "bigint",
						"type": "integer"
					},
					"expired_trials": {
						"format": "bigint",
						"type": "integer"
					},
					"active_subscriptions": {
						"format": "bigint",
						"type": "integer"
					},
					"beta_users": {
						"format": "bigint",
						"type": "integer"
					},
					"avg_trial_length_days": {
						"format": "numeric",
						"type": "number"
					}
				},
				"type": "object"
			},
			"feedback_rate_limit": {
				"required": ["id", "ip_address"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"ip_address": {
						"format": "inet",
						"type": "string"
					},
					"submission_count": {
						"default": 1,
						"format": "integer",
						"type": "integer"
					},
					"first_submission": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"last_submission": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"is_blocked": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					}
				},
				"type": "object"
			},
			"subscription_plans": {
				"required": [
					"id",
					"stripe_price_id",
					"name",
					"price_cents",
					"created_at",
					"updated_at"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"stripe_price_id": {
						"format": "text",
						"type": "string"
					},
					"name": {
						"format": "text",
						"type": "string"
					},
					"description": {
						"format": "text",
						"type": "string"
					},
					"price_cents": {
						"format": "integer",
						"type": "integer"
					},
					"currency": {
						"default": "usd",
						"format": "text",
						"type": "string"
					},
					"billing_interval": {
						"default": "month",
						"format": "text",
						"type": "string"
					},
					"interval_count": {
						"default": 1,
						"format": "integer",
						"type": "integer"
					},
					"features": {
						"format": "jsonb"
					},
					"is_active": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"queue_jobs_stats": {
				"properties": {
					"status": {
						"format": "text",
						"type": "string"
					},
					"job_type": {
						"format": "text",
						"type": "string"
					},
					"count": {
						"format": "bigint",
						"type": "integer"
					},
					"oldest_job": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"newest_job": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"avg_duration_seconds": {
						"format": "numeric",
						"type": "number"
					}
				},
				"type": "object"
			},
			"brain_dumps": {
				"required": ["id", "user_id", "created_at", "updated_at", "status"],
				"properties": {
					"id": {
						"default": "extensions.uuid_generate_v4()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"title": {
						"format": "text",
						"type": "string"
					},
					"content": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"tags": {
						"format": "text[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"ai_summary": {
						"format": "text",
						"type": "string"
					},
					"ai_insights": {
						"format": "text",
						"type": "string"
					},
					"status": {
						"default": "saved",
						"enum": ["pending", "parsed", "saved", "parsed_and_deleted"],
						"format": "public.brain_dump_status",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"metaData": {
						"format": "jsonb"
					},
					"parsed_results": {
						"format": "jsonb"
					}
				},
				"type": "object"
			},
			"feedback": {
				"required": ["id", "category", "feedback_text", "created_at", "updated_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"category": {
						"format": "text",
						"type": "string"
					},
					"rating": {
						"format": "integer",
						"type": "integer"
					},
					"feedback_text": {
						"format": "text",
						"type": "string"
					},
					"user_email": {
						"format": "text",
						"type": "string"
					},
					"user_ip": {
						"format": "inet",
						"type": "string"
					},
					"user_agent": {
						"format": "text",
						"type": "string"
					},
					"status": {
						"default": "new",
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"projects": {
				"required": ["id", "user_id", "name", "slug", "created_at", "updated_at", "status"],
				"properties": {
					"id": {
						"default": "extensions.uuid_generate_v4()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"name": {
						"format": "text",
						"type": "string"
					},
					"slug": {
						"format": "text",
						"type": "string"
					},
					"description": {
						"format": "text",
						"type": "string"
					},
					"start_date": {
						"format": "date",
						"type": "string"
					},
					"end_date": {
						"format": "date",
						"type": "string"
					},
					"tags": {
						"format": "text[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"context": {
						"format": "text",
						"type": "string"
					},
					"executive_summary": {
						"format": "text",
						"type": "string"
					},
					"status": {
						"default": "active",
						"enum": ["active", "paused", "completed", "archived"],
						"format": "public.project_status",
						"type": "string"
					},
					"calendar_color_id": {
						"format": "text",
						"type": "string"
					},
					"calendar_sync_enabled": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"calendar_settings": {
						"format": "jsonb"
					}
				},
				"type": "object"
			},
			"calendar_themes": {
				"description": "Stores user-defined color themes for consistent calendar coloring across projects",
				"required": ["id", "user_id", "theme_name", "color_mappings"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"theme_name": {
						"format": "text",
						"type": "string"
					},
					"color_mappings": {
						"description": "JSON object with keys like high_priority, medium_priority, low_priority, completed, overdue mapped to Google color IDs",
						"format": "jsonb"
					},
					"is_default": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"created_at": {
						"default": "timezone('utc'::text, now())",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "timezone('utc'::text, now())",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"user_calendar_preferences": {
				"required": ["id", "user_id", "created_at", "updated_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"work_start_time": {
						"default": "09:00:00",
						"format": "time without time zone",
						"type": "string"
					},
					"work_end_time": {
						"default": "17:00:00",
						"format": "time without time zone",
						"type": "string"
					},
					"working_days": {
						"format": "integer[]",
						"items": {
							"type": "integer"
						},
						"type": "array"
					},
					"default_task_duration_minutes": {
						"default": 60,
						"format": "integer",
						"type": "integer"
					},
					"min_task_duration_minutes": {
						"default": 30,
						"format": "integer",
						"type": "integer"
					},
					"max_task_duration_minutes": {
						"default": 240,
						"format": "integer",
						"type": "integer"
					},
					"exclude_holidays": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"holiday_country_code": {
						"default": "US",
						"format": "text",
						"type": "string"
					},
					"timezone": {
						"default": "America/New_York",
						"format": "text",
						"type": "string"
					},
					"prefer_morning_for_important_tasks": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"brain_dump_links": {
				"required": ["id", "created_at", "brain_dump_id"],
				"properties": {
					"id": {
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "bigint",
						"type": "integer"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"brain_dump_id": {
						"description": "Note:\nThis is a Foreign Key to `brain_dumps.id`.<fk table='brain_dumps' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"note_id": {
						"description": "Note:\nThis is a Foreign Key to `notes.id`.<fk table='notes' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"task_id": {
						"description": "Note:\nThis is a Foreign Key to `tasks.id`.<fk table='tasks' column='id'/>",
						"format": "uuid",
						"type": "string"
					}
				},
				"type": "object"
			},
			"invoices": {
				"required": [
					"id",
					"user_id",
					"stripe_invoice_id",
					"stripe_customer_id",
					"amount_paid",
					"amount_due",
					"status"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"stripe_invoice_id": {
						"format": "text",
						"type": "string"
					},
					"stripe_customer_id": {
						"format": "text",
						"type": "string"
					},
					"subscription_id": {
						"description": "Note:\nThis is a Foreign Key to `customer_subscriptions.id`.<fk table='customer_subscriptions' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"amount_paid": {
						"format": "integer",
						"type": "integer"
					},
					"amount_due": {
						"format": "integer",
						"type": "integer"
					},
					"currency": {
						"default": "usd",
						"format": "text",
						"type": "string"
					},
					"status": {
						"format": "text",
						"type": "string"
					},
					"invoice_pdf": {
						"format": "text",
						"type": "string"
					},
					"hosted_invoice_url": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"visitors": {
				"required": ["id", "visitor_id", "created_at", "updated_at"],
				"properties": {
					"id": {
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "bigint",
						"type": "integer"
					},
					"visitor_id": {
						"format": "text",
						"type": "string"
					},
					"ip_address": {
						"format": "inet",
						"type": "string"
					},
					"user_agent": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"trial_reminders": {
				"required": ["id", "user_id", "reminder_type"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"reminder_type": {
						"format": "text",
						"type": "string"
					},
					"sent_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"generated_phases": {
				"description": "Stores individual phases generated by AI, pending user approval",
				"required": [
					"id",
					"generation_id",
					"project_id",
					"name",
					"suggested_order",
					"created_at"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"generation_id": {
						"description": "Note:\nThis is a Foreign Key to `project_phases_generation.id`.<fk table='project_phases_generation' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"name": {
						"format": "text",
						"type": "string"
					},
					"description": {
						"format": "text",
						"type": "string"
					},
					"objectives": {
						"format": "text[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"deliverables": {
						"format": "text[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"success_criteria": {
						"format": "text[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"suggested_duration_days": {
						"format": "integer",
						"type": "integer"
					},
					"suggested_start_date": {
						"format": "date",
						"type": "string"
					},
					"suggested_end_date": {
						"format": "date",
						"type": "string"
					},
					"suggested_order": {
						"format": "integer",
						"type": "integer"
					},
					"confidence_score": {
						"format": "numeric",
						"type": "number"
					},
					"is_approved": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"approved_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"approved_by": {
						"format": "uuid",
						"type": "string"
					},
					"phase_id": {
						"description": "Note:\nThis is a Foreign Key to `phases.id`.<fk table='phases' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"metadata": {
						"format": "jsonb"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"question_templates": {
				"required": ["id", "template", "category"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"template": {
						"format": "text",
						"type": "string"
					},
					"category": {
						"format": "text",
						"type": "string"
					},
					"conditions": {
						"format": "jsonb"
					},
					"variables": {
						"format": "jsonb"
					},
					"effectiveness_score": {
						"default": 0.5,
						"format": "double precision",
						"type": "number"
					},
					"usage_count": {
						"default": 0,
						"format": "integer",
						"type": "integer"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp without time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp without time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"phases": {
				"required": [
					"id",
					"project_id",
					"user_id",
					"name",
					"start_date",
					"end_date",
					"order",
					"created_at",
					"updated_at"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"name": {
						"format": "text",
						"type": "string"
					},
					"description": {
						"format": "text",
						"type": "string"
					},
					"start_date": {
						"format": "date",
						"type": "string"
					},
					"end_date": {
						"format": "date",
						"type": "string"
					},
					"order": {
						"format": "integer",
						"type": "integer"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"scheduling_method": {
						"default": "schedule_in_phases",
						"description": "Method used for task scheduling: phases_only, schedule_in_phases, or calendar_optimized",
						"format": "character varying",
						"maxLength": 50,
						"type": "string"
					}
				},
				"type": "object"
			},
			"beta_members": {
				"required": ["id", "full_name", "email"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"signup_id": {
						"description": "Note:\nThis is a Foreign Key to `beta_signups.id`.<fk table='beta_signups' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"full_name": {
						"format": "text",
						"type": "string"
					},
					"email": {
						"format": "text",
						"type": "string"
					},
					"job_title": {
						"format": "text",
						"type": "string"
					},
					"company_name": {
						"format": "text",
						"type": "string"
					},
					"joined_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"beta_tier": {
						"default": "founder",
						"format": "text",
						"type": "string"
					},
					"access_level": {
						"default": "full",
						"format": "text",
						"type": "string"
					},
					"last_active_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"total_feedback_submitted": {
						"default": 0,
						"format": "integer",
						"type": "integer"
					},
					"total_features_requested": {
						"default": 0,
						"format": "integer",
						"type": "integer"
					},
					"total_calls_attended": {
						"default": 0,
						"format": "integer",
						"type": "integer"
					},
					"has_lifetime_pricing": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"discount_percentage": {
						"default": 50,
						"format": "integer",
						"type": "integer"
					},
					"early_access_features": {
						"format": "text[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"wants_weekly_calls": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"wants_community_access": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"wants_feature_updates": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"user_timezone": {
						"default": "America/New_York",
						"format": "text",
						"type": "string"
					},
					"is_active": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"deactivated_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"deactivation_reason": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"project_daily_briefs": {
				"required": [
					"id",
					"user_id",
					"project_id",
					"brief_content",
					"brief_date",
					"created_at",
					"updated_at",
					"generation_status"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"template_id": {
						"description": "Note:\nThis is a Foreign Key to `project_brief_templates.id`.<fk table='project_brief_templates' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"brief_content": {
						"format": "text",
						"type": "string"
					},
					"brief_date": {
						"format": "date",
						"type": "string"
					},
					"metadata": {
						"format": "json"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"generation_status": {
						"default": "pending",
						"format": "text",
						"type": "string"
					},
					"generation_started_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"generation_completed_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"generation_error": {
						"format": "text",
						"type": "string"
					}
				},
				"type": "object"
			},
			"notes": {
				"required": ["id", "user_id", "created_at", "updated_at"],
				"properties": {
					"id": {
						"default": "extensions.uuid_generate_v4()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"title": {
						"format": "text",
						"type": "string"
					},
					"content": {
						"format": "text",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"tags": {
						"format": "text[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"category": {
						"format": "text",
						"type": "string"
					}
				},
				"type": "object"
			},
			"project_phases_generation": {
				"description": "Tracks AI-generated project phases before user approval",
				"required": ["id", "project_id", "user_id"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"generation_status": {
						"default": "pending",
						"format": "text",
						"type": "string"
					},
					"generation_started_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"generation_completed_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"generation_error": {
						"format": "text",
						"type": "string"
					},
					"generation_progress": {
						"format": "jsonb"
					},
					"regenerated": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"template_used": {
						"format": "text",
						"type": "string"
					},
					"phases_data": {
						"description": "JSON array containing all generated phases data",
						"format": "jsonb"
					},
					"phases_count": {
						"format": "integer",
						"type": "integer"
					},
					"total_duration_days": {
						"format": "integer",
						"type": "integer"
					},
					"metadata": {
						"format": "jsonb"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"phase_task_schedules": {
				"required": ["id", "phase_id", "proposed_start", "proposed_end"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"phase_id": {
						"description": "Note:\nThis is a Foreign Key to `phases.id`.<fk table='phases' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"task_id": {
						"description": "Note:\nThis is a Foreign Key to `tasks.id`.<fk table='tasks' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"proposed_start": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"proposed_end": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"is_confirmed": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"scheduling_notes": {
						"format": "text",
						"type": "string"
					},
					"conflict_warnings": {
						"format": "text[]",
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp without time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp without time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"recurring_task_summary": {
				"properties": {
					"task_id": {
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"title": {
						"format": "text",
						"type": "string"
					},
					"recurrence_pattern": {
						"enum": [
							"daily",
							"weekdays",
							"weekly",
							"biweekly",
							"monthly",
							"quarterly",
							"yearly"
						],
						"format": "public.recurrence_pattern",
						"type": "string"
					},
					"recurrence_ends": {
						"format": "date",
						"type": "string"
					},
					"start_date": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"total_instances": {
						"format": "bigint",
						"type": "integer"
					},
					"completed_instances": {
						"format": "bigint",
						"type": "integer"
					},
					"skipped_instances": {
						"format": "bigint",
						"type": "integer"
					},
					"exception_count": {
						"format": "bigint",
						"type": "integer"
					},
					"next_occurrence": {
						"format": "date",
						"type": "string"
					},
					"last_completed_at": {
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"email_attachments": {
				"required": [
					"id",
					"email_id",
					"filename",
					"original_filename",
					"file_size",
					"content_type",
					"storage_path",
					"storage_bucket",
					"created_by"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"email_id": {
						"description": "Note:\nThis is a Foreign Key to `emails.id`.<fk table='emails' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"filename": {
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"original_filename": {
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"file_size": {
						"format": "integer",
						"type": "integer"
					},
					"content_type": {
						"format": "character varying",
						"maxLength": 100,
						"type": "string"
					},
					"storage_path": {
						"format": "character varying",
						"maxLength": 500,
						"type": "string"
					},
					"storage_bucket": {
						"default": "email-attachments",
						"format": "character varying",
						"maxLength": 100,
						"type": "string"
					},
					"is_image": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"image_width": {
						"format": "integer",
						"type": "integer"
					},
					"image_height": {
						"format": "integer",
						"type": "integer"
					},
					"optimized_versions": {
						"format": "jsonb"
					},
					"created_by": {
						"format": "uuid",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"is_inline": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"cid": {
						"format": "character varying",
						"maxLength": 100,
						"type": "string"
					}
				},
				"type": "object"
			},
			"emails": {
				"required": [
					"id",
					"subject",
					"content",
					"from_email",
					"from_name",
					"status",
					"tracking_enabled",
					"created_by"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"subject": {
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"content": {
						"format": "text",
						"type": "string"
					},
					"from_email": {
						"default": "dj@build-os.com''::character varying",
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"from_name": {
						"default": "BuildOS Team''::character varying",
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"status": {
						"default": "draft",
						"format": "text",
						"type": "string"
					},
					"scheduled_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"sent_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"tracking_enabled": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"tracking_id": {
						"format": "character varying",
						"maxLength": 100,
						"type": "string"
					},
					"created_by": {
						"format": "uuid",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"category": {
						"default": "general",
						"format": "character varying",
						"maxLength": 100,
						"type": "string"
					},
					"template_data": {
						"format": "jsonb"
					}
				},
				"type": "object"
			},
			"beta_feature_votes": {
				"required": ["id"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"feedback_id": {
						"description": "Note:\nThis is a Foreign Key to `beta_feedback.id`.<fk table='beta_feedback' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"member_id": {
						"description": "Note:\nThis is a Foreign Key to `beta_members.id`.<fk table='beta_members' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"vote_type": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"email_tracking_events": {
				"required": ["id", "email_id", "event_type"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"email_id": {
						"description": "Note:\nThis is a Foreign Key to `emails.id`.<fk table='emails' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"recipient_id": {
						"description": "Note:\nThis is a Foreign Key to `email_recipients.id`.<fk table='email_recipients' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"event_type": {
						"format": "character varying",
						"maxLength": 50,
						"type": "string"
					},
					"event_data": {
						"format": "jsonb"
					},
					"user_agent": {
						"format": "text",
						"type": "string"
					},
					"ip_address": {
						"format": "inet",
						"type": "string"
					},
					"timestamp": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"clicked_url": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"project_synthesis": {
				"description": "Stores AI-generated project synthesis including task consolidation and next steps",
				"required": [
					"id",
					"user_id",
					"project_id",
					"synthesis_content",
					"created_at",
					"updated_at"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"synthesis_content": {
						"description": "JSON structure: {\r\n  \"consolidatedTasks\": [...],\r\n  \"suggestedTasks\": [...],\r\n  \"duplicatesFound\": [...],\r\n  \"nextSteps\": [...],\r\n  \"outdatedTaskIds\": [...]\r\n}",
						"format": "jsonb"
					},
					"insights": {
						"format": "text",
						"type": "string"
					},
					"generation_model": {
						"format": "text",
						"type": "string"
					},
					"generation_duration_ms": {
						"format": "integer",
						"type": "integer"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"operations_count": {
						"default": 0,
						"format": "integer",
						"type": "integer"
					},
					"status": {
						"default": "pending",
						"format": "character varying",
						"maxLength": 20,
						"type": "string"
					},
					"applied_at": {
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"users": {
				"required": ["id", "email", "created_at", "is_admin", "updated_at"],
				"properties": {
					"id": {
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"email": {
						"format": "text",
						"type": "string"
					},
					"name": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"bio": {
						"format": "text",
						"type": "string"
					},
					"is_admin": {
						"default": false,
						"description": "Whether the user has admin privileges",
						"format": "boolean",
						"type": "boolean"
					},
					"completed_onboarding": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"last_visit": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"stripe_customer_id": {
						"format": "text",
						"type": "string"
					},
					"subscription_status": {
						"default": "free",
						"format": "text",
						"type": "string"
					},
					"subscription_plan_id": {
						"description": "Note:\nThis is a Foreign Key to `subscription_plans.id`.<fk table='subscription_plans' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"trial_ends_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"access_restricted": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"access_restricted_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"is_beta_user": {
						"default": false,
						"description": "Indicates if the user is part of the beta program",
						"format": "boolean",
						"type": "boolean"
					}
				},
				"type": "object"
			},
			"api_keys": {
				"required": ["id", "user_id", "service_name", "api_key"],
				"properties": {
					"id": {
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "integer",
						"type": "integer"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"service_name": {
						"format": "text",
						"type": "string"
					},
					"api_key": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"sms_templates": {
				"required": ["id", "template_key", "name", "message_template"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"template_key": {
						"format": "character varying",
						"maxLength": 100,
						"type": "string"
					},
					"name": {
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"description": {
						"format": "text",
						"type": "string"
					},
					"message_template": {
						"format": "text",
						"type": "string"
					},
					"template_vars": {
						"format": "jsonb"
					},
					"required_vars": {
						"format": "jsonb"
					},
					"max_length": {
						"default": 160,
						"format": "integer",
						"type": "integer"
					},
					"is_active": {
						"default": true,
						"format": "boolean",
						"type": "boolean"
					},
					"usage_count": {
						"default": 0,
						"format": "integer",
						"type": "integer"
					},
					"last_used_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"created_by": {
						"format": "uuid",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"error_summary": {
				"properties": {
					"error_type": {
						"format": "character varying",
						"maxLength": 100,
						"type": "string"
					},
					"severity": {
						"format": "character varying",
						"maxLength": 20,
						"type": "string"
					},
					"error_count": {
						"format": "bigint",
						"type": "integer"
					},
					"affected_users": {
						"format": "bigint",
						"type": "integer"
					},
					"affected_projects": {
						"format": "bigint",
						"type": "integer"
					},
					"first_occurrence": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"last_occurrence": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"resolved_count": {
						"format": "bigint",
						"type": "integer"
					},
					"avg_response_time_ms": {
						"format": "numeric",
						"type": "number"
					}
				},
				"type": "object"
			},
			"customer_subscriptions": {
				"required": [
					"id",
					"user_id",
					"stripe_customer_id",
					"stripe_subscription_id",
					"status"
				],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"stripe_customer_id": {
						"format": "text",
						"type": "string"
					},
					"stripe_subscription_id": {
						"format": "text",
						"type": "string"
					},
					"stripe_price_id": {
						"description": "Note:\nThis is a Foreign Key to `subscription_plans.stripe_price_id`.<fk table='subscription_plans' column='stripe_price_id'/>",
						"format": "text",
						"type": "string"
					},
					"plan_id": {
						"description": "Note:\nThis is a Foreign Key to `subscription_plans.id`.<fk table='subscription_plans' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"status": {
						"format": "text",
						"type": "string"
					},
					"current_period_start": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"current_period_end": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"cancel_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"canceled_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"trial_start": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"trial_end": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"metadata": {
						"format": "jsonb"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"cancellation_reason": {
						"format": "text",
						"type": "string"
					}
				},
				"type": "object"
			},
			"user_activity_logs": {
				"description": "Detailed user activity tracking",
				"required": ["id", "activity_type", "created_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"activity_type": {
						"format": "text",
						"type": "string"
					},
					"activity_data": {
						"format": "json"
					},
					"ip_address": {
						"format": "inet",
						"type": "string"
					},
					"user_agent": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"project_kept_versions": {
				"properties": {
					"history_id": {
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"format": "uuid",
						"type": "string"
					},
					"version_number": {
						"format": "integer",
						"type": "integer"
					},
					"is_first_version": {
						"format": "boolean",
						"type": "boolean"
					},
					"project_data": {
						"format": "jsonb"
					},
					"created_at": {
						"format": "timestamp without time zone",
						"type": "string"
					},
					"created_by": {
						"format": "uuid",
						"type": "string"
					},
					"current_name": {
						"format": "text",
						"type": "string"
					},
					"version_name": {
						"format": "text",
						"type": "string"
					},
					"version_status": {
						"format": "text",
						"type": "string"
					},
					"version_type": {
						"format": "text",
						"type": "string"
					}
				},
				"type": "object"
			},
			"error_logs": {
				"required": ["id", "error_type", "error_message", "created_at", "updated_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"error_type": {
						"format": "character varying",
						"maxLength": 100,
						"type": "string"
					},
					"error_code": {
						"format": "character varying",
						"maxLength": 50,
						"type": "string"
					},
					"error_message": {
						"format": "text",
						"type": "string"
					},
					"error_stack": {
						"format": "text",
						"type": "string"
					},
					"severity": {
						"default": "error",
						"format": "character varying",
						"maxLength": 20,
						"type": "string"
					},
					"user_id": {
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"description": "Note:\nThis is a Foreign Key to `projects.id`.<fk table='projects' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"brain_dump_id": {
						"description": "Note:\nThis is a Foreign Key to `brain_dumps.id`.<fk table='brain_dumps' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"endpoint": {
						"format": "character varying",
						"maxLength": 255,
						"type": "string"
					},
					"http_method": {
						"format": "character varying",
						"maxLength": 10,
						"type": "string"
					},
					"request_id": {
						"format": "character varying",
						"maxLength": 100,
						"type": "string"
					},
					"user_agent": {
						"format": "text",
						"type": "string"
					},
					"ip_address": {
						"format": "inet",
						"type": "string"
					},
					"llm_provider": {
						"format": "character varying",
						"maxLength": 50,
						"type": "string"
					},
					"llm_model": {
						"format": "character varying",
						"maxLength": 100,
						"type": "string"
					},
					"prompt_tokens": {
						"format": "integer",
						"type": "integer"
					},
					"completion_tokens": {
						"format": "integer",
						"type": "integer"
					},
					"total_tokens": {
						"format": "integer",
						"type": "integer"
					},
					"response_time_ms": {
						"format": "integer",
						"type": "integer"
					},
					"llm_temperature": {
						"format": "numeric",
						"type": "number"
					},
					"llm_max_tokens": {
						"format": "integer",
						"type": "integer"
					},
					"operation_type": {
						"format": "character varying",
						"maxLength": 50,
						"type": "string"
					},
					"table_name": {
						"format": "character varying",
						"maxLength": 100,
						"type": "string"
					},
					"record_id": {
						"format": "uuid",
						"type": "string"
					},
					"operation_payload": {
						"format": "jsonb"
					},
					"metadata": {
						"format": "jsonb"
					},
					"environment": {
						"default": "development",
						"format": "character varying",
						"maxLength": 20,
						"type": "string"
					},
					"app_version": {
						"format": "character varying",
						"maxLength": 20,
						"type": "string"
					},
					"browser_info": {
						"format": "jsonb"
					},
					"resolved": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"resolved_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"resolved_by": {
						"format": "uuid",
						"type": "string"
					},
					"resolution_notes": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"user_notifications": {
				"required": ["id", "user_id", "type", "title", "message"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"type": {
						"format": "text",
						"type": "string"
					},
					"title": {
						"format": "text",
						"type": "string"
					},
					"message": {
						"format": "text",
						"type": "string"
					},
					"priority": {
						"default": "normal",
						"format": "text",
						"type": "string"
					},
					"action_url": {
						"format": "text",
						"type": "string"
					},
					"read_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"dismissed_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"expires_at": {
						"format": "timestamp with time zone",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"system_metrics": {
				"description": "Real-time system performance metrics",
				"required": ["id", "metric_name", "metric_value"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"metric_name": {
						"format": "text",
						"type": "string"
					},
					"metric_value": {
						"format": "numeric",
						"type": "number"
					},
					"metric_unit": {
						"format": "text",
						"type": "string"
					},
					"metric_description": {
						"format": "text",
						"type": "string"
					},
					"recorded_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp without time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"phase_tasks": {
				"required": ["id", "phase_id", "task_id", "created_at"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"phase_id": {
						"description": "Note:\nThis is a Foreign Key to `phases.id`.<fk table='phases' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"task_id": {
						"description": "Note:\nThis is a Foreign Key to `tasks.id`.<fk table='tasks' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"suggested_start_date": {
						"format": "date",
						"type": "string"
					},
					"assignment_reason": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "now()",
						"format": "timestamp with time zone",
						"type": "string"
					}
				},
				"type": "object"
			},
			"projects_history": {
				"required": ["history_id", "project_id", "version_number", "project_data"],
				"properties": {
					"history_id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"project_id": {
						"format": "uuid",
						"type": "string"
					},
					"version_number": {
						"format": "integer",
						"type": "integer"
					},
					"is_first_version": {
						"default": false,
						"format": "boolean",
						"type": "boolean"
					},
					"project_data": {
						"format": "jsonb"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp without time zone",
						"type": "string"
					},
					"created_by": {
						"format": "uuid",
						"type": "string"
					}
				},
				"type": "object"
			},
			"user_calendar_tokens": {
				"required": ["id", "user_id", "access_token"],
				"properties": {
					"id": {
						"default": "gen_random_uuid()",
						"description": "Note:\nThis is a Primary Key.<pk/>",
						"format": "uuid",
						"type": "string"
					},
					"user_id": {
						"description": "Note:\nThis is a Foreign Key to `users.id`.<fk table='users' column='id'/>",
						"format": "uuid",
						"type": "string"
					},
					"access_token": {
						"format": "text",
						"type": "string"
					},
					"refresh_token": {
						"format": "text",
						"type": "string"
					},
					"expiry_date": {
						"format": "bigint",
						"type": "integer"
					},
					"token_type": {
						"default": "Bearer",
						"format": "text",
						"type": "string"
					},
					"scope": {
						"format": "text",
						"type": "string"
					},
					"created_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp without time zone",
						"type": "string"
					},
					"updated_at": {
						"default": "CURRENT_TIMESTAMP",
						"format": "timestamp without time zone",
						"type": "string"
					},
					"google_email": {
						"format": "text",
						"type": "string"
					},
					"google_user_id": {
						"format": "text",
						"type": "string"
					}
				},
				"type": "object"
			}
		}
	}
}
