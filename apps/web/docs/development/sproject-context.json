{
	"components": [
		{
			"file": "src/routes/+layout.svelte",
			"type": "page",
			"components": [
				"OnboardingModal",
				"ToastContainer",
				"PaymentWarning",
				"TrialBanner",
				"BackgroundJobIndicator"
			]
		},
		{
			"file": "src/routes/+page.svelte",
			"type": "page",
			"components": ["Dashboard"]
		},
		{
			"file": "src/routes/projects/+page.svelte",
			"type": "page",
			"components": [
				"NewProjectModal",
				"ProjectBriefModal",
				"DailyBriefModal",
				"BrainDumpModal",
				"QuickProjectModal"
			]
		},
		{
			"file": "src/routes/projects/[id]/+page.svelte",
			"type": "page",
			"components": [
				"TasksList",
				"NotesSection",
				"ProjectSynthesis",
				"PhasesSection",
				"BraindumpsSection"
			]
		},
		{
			"file": "src/lib/components/brain-dump/BrainDumpModal.svelte",
			"type": "component",
			"components": [
				"ProjectSelectionView",
				"RecordingView",
				"ProcessingModal",
				"ParseResultsDiffView",
				"SuccessView",
				"OperationEditModal"
			]
		},
		{
			"file": "src/lib/components/dashboard/Dashboard.svelte",
			"type": "component",
			"components": [
				"BraindumpWeekView",
				"PhaseCalendarView",
				"TaskModal",
				"DailyBriefModal",
				"TimeBlockModal"
			]
		},
		{
			"file": "src/lib/components/notifications/MinimizedNotification.svelte",
			"type": "component",
			"components": [
				"BrainDumpMinimizedView",
				"PhaseGenerationMinimizedView",
				"ProjectSynthesisMinimizedView",
				"CalendarAnalysisMinimizedView"
			]
		},
		{
			"file": "src/lib/components/notifications/NotificationModal.svelte",
			"type": "component",
			"components": [
				"BrainDumpModalContent",
				"PhaseGenerationModalContent",
				"ProjectSynthesisModalContent",
				"CalendarAnalysisModalContent"
			]
		},
		{
			"file": "src/lib/components/project/PhasesSection.svelte",
			"type": "component",
			"components": ["KanbanView", "TimelineView", "PhaseForm"]
		},
		{
			"file": "src/lib/components/project/ProjectHeaderMinimal.svelte",
			"type": "component",
			"components": ["ProjectTimelineCompact"]
		},
		{
			"file": "src/lib/components/project/ProjectModals.svelte",
			"type": "component",
			"components": [
				"ProjectEditModal",
				"ProjectContextModal",
				"ProjectHistoryModal",
				"ProjectCalendarSettingsModal",
				"ProjectCalendarConnectModal",
				"ProjectBriefModal",
				"TaskModal",
				"NoteModal",
				"PhaseSchedulingModal",
				"ScheduleAllPhasesModal",
				"ProjectDatesModal",
				"PhaseGenerationConfirmationModal",
				"AssignBacklogTasksModal",
				"UnscheduleAllTasksModal",
				"RescheduleOverdueTasksModal"
			]
		},
		{
			"file": "src/lib/components/project/ProjectSynthesis.svelte",
			"type": "component",
			"components": ["SynthesisLoadingState"]
		},
		{
			"file": "src/lib/components/ui/RadioGroup.svelte",
			"type": "component",
			"components": ["Radio"]
		},
		{
			"file": "src/lib/components/notifications/types/brain-dump/BrainDumpModalContent.svelte",
			"type": "component",
			"components": [
				"ParseResultsDiffView",
				"DualProcessingResults",
				"SuccessView",
				"OperationEditModal"
			]
		},
		{
			"file": "src/lib/services/brain-dump-notification.bridge.ts",
			"type": "service",
			"components": [],
			"exports": [
				"initBrainDumpNotificationBridge",
				"cleanupBrainDumpNotificationBridge",
				"handleBrainDumpStreamUpdate",
				"completeBrainDumpNotification",
				"getActiveBrainDumpNotificationId",
				"clearActiveBrainDumpNotification",
				"cancelBrainDumpAPIStream",
				"forceResetAllBrainDumpState"
			]
		},
		{
			"file": "src/lib/services/braindump-api.service.ts",
			"type": "service",
			"components": [],
			"exports": ["brainDumpService"]
		},
		{
			"file": "src/lib/services/braindump-background.service.ts",
			"type": "service",
			"components": [],
			"exports": ["backgroundBrainDumpService"]
		},
		{
			"file": "src/lib/services/braindump-status.service.ts",
			"type": "service",
			"components": [],
			"exports": ["BrainDumpStatusService"]
		},
		{
			"file": "src/lib/services/briefClient.service.ts",
			"type": "service",
			"components": [],
			"exports": ["BriefClientService"]
		},
		{
			"file": "src/lib/services/browser-push.service.ts",
			"type": "service",
			"components": [],
			"exports": ["browserPushService"]
		},
		{
			"file": "src/lib/services/calendar-analysis-notification.bridge.ts",
			"type": "service",
			"components": [],
			"exports": [
				"initCalendarAnalysisNotificationBridge",
				"cleanupCalendarAnalysisNotificationBridge",
				"startCalendarAnalysis",
				"restartCalendarAnalysis"
			]
		},
		{
			"file": "src/lib/services/calendar-analysis.service.ts",
			"type": "service",
			"components": [],
			"exports": ["CalendarAnalysisService"]
		},
		{
			"file": "src/lib/services/calendar-service.ts",
			"type": "service",
			"components": [],
			"exports": ["CalendarService"]
		},
		{
			"file": "src/lib/services/calendar-webhook-check.ts",
			"type": "service",
			"components": [],
			"exports": ["checkAndRegisterWebhookIfNeeded", "batchCheckAndRegisterWebhooks"]
		},
		{
			"file": "src/lib/services/calendar-webhook-service.ts",
			"type": "service",
			"components": [],
			"exports": ["CalendarWebhookService"]
		},
		{
			"file": "src/lib/services/dashboardData.service.ts",
			"type": "service",
			"components": [],
			"exports": ["DashboardDataService", "dashboardDataService"]
		},
		{
			"file": "src/lib/services/dunning-service.ts",
			"type": "service",
			"components": [],
			"exports": ["DunningService"]
		},
		{
			"file": "src/lib/services/email-generation-service.ts",
			"type": "service",
			"components": [],
			"exports": ["EmailGenerationService"]
		},
		{
			"file": "src/lib/services/email-service.ts",
			"type": "service",
			"components": [],
			"exports": ["EmailService"]
		},
		{
			"file": "src/lib/services/errorLogger.service.ts",
			"type": "service",
			"components": [],
			"exports": ["ErrorLoggerService"]
		},
		{
			"file": "src/lib/services/google-oauth-service.ts",
			"type": "service",
			"components": [],
			"exports": ["GoogleOAuthConnectionError", "GoogleOAuthService"]
		},
		{
			"file": "src/lib/services/link-shortener.service.ts",
			"type": "service",
			"components": [],
			"exports": ["linkShortenerService"]
		},
		{
			"file": "src/lib/services/llm-usage.service.ts",
			"type": "service",
			"components": [],
			"exports": ["LLMUsageService"]
		},
		{
			"file": "src/lib/services/notification-analytics.service.ts",
			"type": "service",
			"components": [],
			"exports": ["NotificationAnalyticsService", "notificationAnalyticsService"]
		},
		{
			"file": "src/lib/services/notification-preferences.service.ts",
			"type": "service",
			"components": [],
			"exports": ["notificationPreferencesService"]
		},
		{
			"file": "src/lib/services/notification-real-data.service.ts",
			"type": "service",
			"components": [],
			"exports": ["NotificationRealDataService", "notificationRealDataService"]
		},
		{
			"file": "src/lib/services/notification-test.service.ts",
			"type": "service",
			"components": [],
			"exports": ["NotificationTestService", "notificationTestService"]
		},
		{
			"file": "src/lib/services/onboarding-v2.service.ts",
			"type": "service",
			"components": [],
			"exports": ["OnboardingV2Service", "onboardingV2Service"]
		},
		{
			"file": "src/lib/services/onboardingClient.service.ts",
			"type": "service",
			"components": [],
			"exports": ["OnboardingClientService"]
		},
		{
			"file": "src/lib/services/onboardingProgress.service.ts",
			"type": "service",
			"components": [],
			"exports": ["OnboardingProgressService"]
		},
		{
			"file": "src/lib/services/phase-generation-notification.bridge.ts",
			"type": "service",
			"components": [],
			"exports": [
				"initPhaseGenerationNotificationBridge",
				"cleanupPhaseGenerationNotificationBridge",
				"startPhaseGeneration"
			]
		},
		{
			"file": "src/lib/services/project-calendar.service.ts",
			"type": "service",
			"components": [],
			"exports": ["ProjectCalendarService"]
		},
		{
			"file": "src/lib/services/project-synthesis-notification.bridge.ts",
			"type": "service",
			"components": [],
			"exports": [
				"startProjectSynthesis",
				"initProjectSynthesisNotificationBridge",
				"cleanupProjectSynthesisNotificationBridge"
			]
		},
		{
			"file": "src/lib/services/project-synthesis.service.ts",
			"type": "service",
			"components": [],
			"exports": ["ProjectSynthesisService"]
		},
		{
			"file": "src/lib/services/projectBriefTemplateGenerator.service.ts",
			"type": "service",
			"components": [],
			"exports": ["ProjectBriefTemplateGeneratorService"]
		},
		{
			"file": "src/lib/services/projectData.service.ts",
			"type": "service",
			"components": [],
			"exports": ["ProjectDataService"]
		},
		{
			"file": "src/lib/services/projectService.ts",
			"type": "service",
			"components": [],
			"exports": ["ProjectService", "projectService"]
		},
		{
			"file": "src/lib/services/projectSynthesis.service.ts",
			"type": "service",
			"components": [],
			"exports": ["ProjectSynthesisService"]
		},
		{
			"file": "src/lib/services/promptEnhancer.service.ts",
			"type": "service",
			"components": [],
			"exports": ["PromptEnhancerService"]
		},
		{
			"file": "src/lib/services/promptTemplate.service.ts",
			"type": "service",
			"components": [],
			"exports": [
				"PromptTemplateService",
				"buildPhaseGenerationSystemPromptCall1",
				"buildPhaseGenerationUserPromptCall1",
				"buildTaskOrderingSystemPromptCall2",
				"buildTaskOrderingUserPromptCall2"
			]
		},
		{
			"file": "src/lib/services/railwayWorker.service.ts",
			"type": "service",
			"components": [],
			"exports": ["RailwayWorkerService"]
		},
		{
			"file": "src/lib/services/realtimeBrief.service.ts",
			"type": "service",
			"components": [],
			"exports": ["briefNotificationStatus", "RealtimeBriefService"]
		},
		{
			"file": "src/lib/services/realtimeProject.service.ts",
			"type": "service",
			"components": [],
			"exports": ["RealtimeProjectService"]
		},
		{
			"file": "src/lib/services/recurrence-pattern.service.ts",
			"type": "service",
			"components": [],
			"exports": ["RecurrencePatternBuilder", "recurrencePatternBuilder"]
		},
		{
			"file": "src/lib/services/recurring-instance.service.ts",
			"type": "service",
			"components": [],
			"exports": ["RecurringInstanceService"]
		},
		{
			"file": "src/lib/services/scheduledSmsUpdate.service.ts",
			"type": "service",
			"components": [],
			"exports": ["ScheduledSmsUpdateService"]
		},
		{
			"file": "src/lib/services/smart-llm-service.ts",
			"type": "service",
			"components": [],
			"exports": ["SmartLLMService"]
		},
		{
			"file": "src/lib/services/sms.service.ts",
			"type": "service",
			"components": [],
			"exports": ["SMSService", "smsService"]
		},
		{
			"file": "src/lib/services/smsMonitoring.service.ts",
			"type": "service",
			"components": [],
			"exports": ["SMSMonitoringService", "smsMonitoringService"]
		},
		{
			"file": "src/lib/services/stripe-service.ts",
			"type": "service",
			"components": [],
			"exports": ["StripeService"]
		},
		{
			"file": "src/lib/services/task-time-slot-finder.ts",
			"type": "service",
			"components": [],
			"exports": ["TaskTimeSlotFinder"]
		},
		{
			"file": "src/lib/services/time-block-suggestion.service.ts",
			"type": "service",
			"components": [],
			"exports": ["TimeBlockSuggestionService"]
		},
		{
			"file": "src/lib/services/time-block.service.ts",
			"type": "service",
			"components": [],
			"exports": ["TimeBlockService"]
		},
		{
			"file": "src/lib/services/visitor.service.ts",
			"type": "service",
			"components": [],
			"exports": ["VisitorService", "visitorService"]
		},
		{
			"file": "src/lib/services/voiceRecording.service.ts",
			"type": "service",
			"components": [],
			"exports": ["VoiceRecordingService", "voiceRecordingService"]
		},
		{
			"file": "src/lib/stores/backgroundJobs.ts",
			"type": "store",
			"components": [],
			"exports": [
				"backgroundJobs",
				"activeBackgroundJobs",
				"processingJobs",
				"completedJobs",
				"failedJobs"
			]
		},
		{
			"file": "src/lib/stores/brain-dump-v2.store.ts",
			"type": "store",
			"components": [],
			"exports": [
				"brainDumpV2Store",
				"brainDumpComputed",
				"selectedProjectName",
				"hasUnsavedChanges",
				"canParse",
				"canApply",
				"enabledOperationsCount",
				"disabledOperationsCount",
				"hasParseResults",
				"canAutoAccept",
				"hasOperationErrors",
				"hasCriticalErrors",
				"operationErrorSummary",
				"isProcessingActive",
				"processingStatus",
				"isModalOpen",
				"isNotificationOpen",
				"isNotificationMinimized",
				"showingParseResults",
				"isTextareaCollapsed",
				"processingProjectIds"
			]
		},
		{
			"file": "src/lib/stores/brainDumpPreferences.ts",
			"type": "store",
			"components": [],
			"exports": ["brainDumpAutoAccept"]
		},
		{
			"file": "src/lib/stores/briefPreferences.ts",
			"type": "store",
			"components": [],
			"exports": ["briefPreferencesStore"]
		},
		{
			"file": "src/lib/stores/dashboard.store.ts",
			"type": "store",
			"components": [],
			"exports": ["dashboardStore"]
		},
		{
			"file": "src/lib/stores/modal.store.ts",
			"type": "store",
			"components": [],
			"exports": ["modalStore"]
		},
		{
			"file": "src/lib/stores/navigation.store.ts",
			"type": "store",
			"components": [],
			"exports": ["navigationStore"]
		},
		{
			"file": "src/lib/stores/notification.store.ts",
			"type": "store",
			"components": [],
			"exports": [
				"registerNotificationAction",
				"unregisterNotificationAction",
				"createNotificationStore",
				"notificationStore",
				"notificationsArray",
				"expandedNotification",
				"processingCount",
				"visibleStack",
				"hiddenCount"
			]
		},
		{
			"file": "src/lib/stores/notificationPreferences.ts",
			"type": "store",
			"components": [],
			"exports": ["notificationPreferencesStore"]
		},
		{
			"file": "src/lib/stores/project.store.ts",
			"type": "store",
			"components": [],
			"exports": ["projectStoreV2", "projectStoreV2Internal"]
		},
		{
			"file": "src/lib/stores/schedulingStore.ts",
			"type": "store",
			"components": [],
			"exports": ["schedulingStore"]
		},
		{
			"file": "src/lib/stores/searchStore.ts",
			"type": "store",
			"components": [],
			"exports": ["searchStore", "totalResultCount"]
		},
		{
			"file": "src/lib/stores/timeBlocksStore.ts",
			"type": "store",
			"components": [],
			"exports": ["timeBlocksStore"]
		},
		{
			"file": "src/lib/stores/toast.store.ts",
			"type": "store",
			"components": [],
			"exports": ["toasts", "toastService"]
		},
		{
			"file": "src/lib/stores/unifiedBriefGeneration.store.ts",
			"type": "store",
			"components": [],
			"exports": [
				"unifiedBriefGenerationStore",
				"streamingStatus",
				"streamingBriefData",
				"briefGenerationCompletedWritable",
				"briefGenerationCompleted"
			]
		},
		{
			"file": "src/lib/stores/userContext.ts",
			"type": "store",
			"components": [],
			"exports": ["userContextStore"]
		}
	],
	"dependencies": {
		"src/routes/+page.svelte": ["src/lib/components/dashboard/Dashboard.svelte"],
		"src/routes/projects/+page.svelte": ["src/lib/components/brain-dump/BrainDumpModal.svelte"],
		"src/routes/projects/[id]/+page.svelte": [
			"src/lib/components/project/ProjectSynthesis.svelte",
			"src/lib/components/project/PhasesSection.svelte"
		],
		"src/lib/components/notifications/NotificationModal.svelte": [
			"src/lib/components/notifications/types/brain-dump/BrainDumpModalContent.svelte"
		]
	},
	"unusedComponents": [
		"src/lib/components/notifications/MinimizedNotification.svelte",
		"src/lib/components/notifications/NotificationModal.svelte",
		"src/lib/components/project/ProjectHeaderMinimal.svelte",
		"src/lib/components/project/ProjectModals.svelte",
		"src/lib/components/ui/RadioGroup.svelte"
	]
}
